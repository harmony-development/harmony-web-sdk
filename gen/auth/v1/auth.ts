// @generated by protobuf-ts 2.1.0 with parameter long_type_string,optimize_code_size,generate_dependencies,optimize_code_size
// @generated from protobuf file "auth/v1/auth.proto" (package "protocol.auth.v1", syntax proto3)
// tslint:disable
import { ServiceType } from "@protobuf-ts/runtime-rpc";
import { MessageType } from "@protobuf-ts/runtime";
import { Token } from "../../harmonytypes/v1/types";
/**
 * Used in `BeginAuth` endpoint.
 *
 * @generated from protobuf message protocol.auth.v1.BeginAuthRequest
 */
export interface BeginAuthRequest {
    /**
     * If provided, this is the guest token
     * for the account being upgraded from
     * a guest account to a full account
     * during the auth flow.
     *
     * This token is provided by the server
     * at the end of the auth flow that
     * created the guest account.
     *
     * @generated from protobuf field: optional string for_guest_token = 1;
     */
    forGuestToken?: string;
}
/**
 * The return type of BeginAuth, containing the
 * auth_id that will be used for the authentication
 * section.
 *
 * @generated from protobuf message protocol.auth.v1.BeginAuthResponse
 */
export interface BeginAuthResponse {
    /**
     * auth_id: the ID of this auth session.
     *
     * @generated from protobuf field: string auth_id = 1;
     */
    authId: string;
}
/**
 * Session contains the information for a new session;
 * the user_id you logged in as and the session_token
 * which should be passed to authorisation.
 *
 * @generated from protobuf message protocol.auth.v1.Session
 */
export interface Session {
    /**
     * user_id: the ID of the user you logged in as.
     *
     * @generated from protobuf field: uint64 user_id = 1;
     */
    userId: string;
    /**
     * session_token: the session token to use in authorization.
     *
     * @generated from protobuf field: string session_token = 2;
     */
    sessionToken: string;
    /**
     * A token allowing for this account to be upgraded to a
     * "full" account by beginning an auth session and providing
     * this token.
     *
     * The guest token only exists to upgrade a guest account to a full
     * account, and does not permit logging in with a guest account
     * on more than one session.
     *
     * A "guest token" MAY be provided to BeginAuth to begin
     * an authorization process that will upgrade the guest account
     * to a full account if completed successfully.
     * This MUST only affect now being able to log
     * into the account with more than one session, and MUST not
     * change other information about the account, such as username
     * and password.
     *
     * @generated from protobuf field: optional string guest_token = 3;
     */
    guestToken?: string;
}
/**
 * A step in the authentication process.
 * Contains a variety of different types of views.
 *
 * It is recommended to have a fallback_url specified
 * for non-trivial authentication procedures (such as captchas).
 *
 * @generated from protobuf message protocol.auth.v1.AuthStep
 */
export interface AuthStep {
    /**
     * fallback_url: unused.
     *
     * @generated from protobuf field: string fallback_url = 1;
     */
    fallbackUrl: string;
    /**
     * can_go_back: whether or not the client can request the
     * server to send the previous step.
     *
     * @generated from protobuf field: bool can_go_back = 2;
     */
    canGoBack: boolean;
    /**
     * @generated from protobuf oneof: step
     */
    step: {
        oneofKind: "choice";
        /**
         * choice: the user must pick a thing out of a list of options.
         *
         * @generated from protobuf field: protocol.auth.v1.AuthStep.Choice choice = 3;
         */
        choice: AuthStep_Choice;
    } | {
        oneofKind: "form";
        /**
         * form: the user must complete a form.
         *
         * @generated from protobuf field: protocol.auth.v1.AuthStep.Form form = 4;
         */
        form: AuthStep_Form;
    } | {
        oneofKind: "session";
        /**
         * session: you've completed auth, and have a session.
         *
         * @generated from protobuf field: protocol.auth.v1.Session session = 5;
         */
        session: Session;
    } | {
        oneofKind: "waiting";
        /**
         * waiting: you're waiting on something.
         *
         * @generated from protobuf field: protocol.auth.v1.AuthStep.Waiting waiting = 6;
         */
        waiting: AuthStep_Waiting;
    } | {
        oneofKind: undefined;
    };
}
/**
 * A step which allows the user to choose from a range of options
 * Allows you to show a heading by specifying title.
 *
 * @generated from protobuf message protocol.auth.v1.AuthStep.Choice
 */
export interface AuthStep_Choice {
    /**
     * title: the title of the list of choices.
     *
     * @generated from protobuf field: string title = 1;
     */
    title: string;
    /**
     * options: a list of choices, one of these
     * should be sent in nextstep.
     *
     * @generated from protobuf field: repeated string options = 2;
     */
    options: string[];
}
/**
 * A step which requires the user to input information
 * Allows you to show a heading by specifying title.
 *
 * @generated from protobuf message protocol.auth.v1.AuthStep.Form
 */
export interface AuthStep_Form {
    /**
     * title: the title of this form.
     *
     * @generated from protobuf field: string title = 1;
     */
    title: string;
    /**
     * fields: all the fields in this form.
     *
     * @generated from protobuf field: repeated protocol.auth.v1.AuthStep.Form.FormField fields = 2;
     */
    fields: AuthStep_Form_FormField[];
}
/**
 * A field in the form, containing information on how it should
 * be rendered
 * Here is a list of form types that need to be supported:
 * email: a field type that has to contain a valid email
 * password: a field type that has to contain a password
 * new-password: a field type for new passwords
 * text: a field type that has to contain text
 * number: a field type that has to contain a number
 *
 * @generated from protobuf message protocol.auth.v1.AuthStep.Form.FormField
 */
export interface AuthStep_Form_FormField {
    /**
     * name: the identifier for the form field.
     *
     * @generated from protobuf field: string name = 1;
     */
    name: string;
    /**
     * type: the type of the form field, as documented above.
     *
     * @generated from protobuf field: string type = 2;
     */
    type: string;
}
/**
 * Waiting
 * A step which requires the user to perform an external action
 * The title and description should explain to the user
 * what they should do to complete this step.
 *
 * @generated from protobuf message protocol.auth.v1.AuthStep.Waiting
 */
export interface AuthStep_Waiting {
    /**
     * title: the title of this waiting screen.
     *
     * @generated from protobuf field: string title = 1;
     */
    title: string;
    /**
     * description: the explanation of what's being waited on.
     *
     * @generated from protobuf field: string description = 2;
     */
    description: string;
}
/**
 * contains the client's response to the server's challenge
 * This needs to be called first with no arguments to
 * receive the first step.
 *
 * @generated from protobuf message protocol.auth.v1.NextStepRequest
 */
export interface NextStepRequest {
    /**
     * auth_id: the authentication session you want
     * the next step of.
     *
     * @generated from protobuf field: string auth_id = 1;
     */
    authId: string;
    /**
     * @generated from protobuf oneof: step
     */
    step: {
        oneofKind: "choice";
        /**
         * choice: the choice the user picked.
         *
         * @generated from protobuf field: protocol.auth.v1.NextStepRequest.Choice choice = 2;
         */
        choice: NextStepRequest_Choice;
    } | {
        oneofKind: "form";
        /**
         * form: the form the user filled out.
         *
         * @generated from protobuf field: protocol.auth.v1.NextStepRequest.Form form = 3;
         */
        form: NextStepRequest_Form;
    } | {
        oneofKind: undefined;
    };
}
/**
 * A simple choice string indicating which option the user chose.
 *
 * @generated from protobuf message protocol.auth.v1.NextStepRequest.Choice
 */
export interface NextStepRequest_Choice {
    /**
     * choice: the choice the user picked.
     *
     * @generated from protobuf field: string choice = 1;
     */
    choice: string;
}
/**
 * Form fields can either be bytes, string, or int64.
 *
 * @generated from protobuf message protocol.auth.v1.NextStepRequest.FormFields
 */
export interface NextStepRequest_FormFields {
    /**
     * @generated from protobuf oneof: field
     */
    field: {
        oneofKind: "bytes";
        /**
         * bytes: the form field's data is a byte array.
         *
         * @generated from protobuf field: bytes bytes = 1;
         */
        bytes: Uint8Array;
    } | {
        oneofKind: "string";
        /**
         * string: the form field's data is a string.
         *
         * @generated from protobuf field: string string = 2;
         */
        string: string;
    } | {
        oneofKind: "number";
        /**
         * number: the form field's data is a number.
         *
         * @generated from protobuf field: int64 number = 3;
         */
        number: string;
    } | {
        oneofKind: undefined;
    };
}
/**
 * An array of form fields, in the same order they came in from the server.
 *
 * @generated from protobuf message protocol.auth.v1.NextStepRequest.Form
 */
export interface NextStepRequest_Form {
    /**
     * fields: the fields the user filled out.
     *
     * @generated from protobuf field: repeated protocol.auth.v1.NextStepRequest.FormFields fields = 1;
     */
    fields: NextStepRequest_FormFields[];
}
/**
 * Used in `NextStep` endpoint.
 *
 * @generated from protobuf message protocol.auth.v1.NextStepResponse
 */
export interface NextStepResponse {
    /**
     * step: the next step in the authentication process.
     *
     * @generated from protobuf field: protocol.auth.v1.AuthStep step = 1;
     */
    step?: AuthStep;
}
/**
 * A request to go back 1 step.
 *
 * @generated from protobuf message protocol.auth.v1.StepBackRequest
 */
export interface StepBackRequest {
    /**
     * auth_id: the authentication session the user
     * wants to go back in.
     *
     * @generated from protobuf field: string auth_id = 1;
     */
    authId: string;
}
/**
 * Used in `StepBack` endpoint.
 *
 * @generated from protobuf message protocol.auth.v1.StepBackResponse
 */
export interface StepBackResponse {
    /**
     * step: the previous step in the authentication process.
     *
     * @generated from protobuf field: protocol.auth.v1.AuthStep step = 1;
     */
    step?: AuthStep;
}
/**
 * Required to be initiated by all authenticating clients
 * Allows the server to send steps.
 *
 * @generated from protobuf message protocol.auth.v1.StreamStepsRequest
 */
export interface StreamStepsRequest {
    /**
     * auth_id: the authorization session
     * who's steps you want to stream.
     *
     * @generated from protobuf field: string auth_id = 1;
     */
    authId: string;
}
/**
 * Used in `StreamSteps` endpoint.
 *
 * @generated from protobuf message protocol.auth.v1.StreamStepsResponse
 */
export interface StreamStepsResponse {
    /**
     * step: the next step in the authentication process.
     *
     * @generated from protobuf field: protocol.auth.v1.AuthStep step = 1;
     */
    step?: AuthStep;
}
/**
 * The request to federate with a foreign server.
 *
 * @generated from protobuf message protocol.auth.v1.FederateRequest
 */
export interface FederateRequest {
    /**
     * The server ID foreign server you want to federate with.
     *
     * @generated from protobuf field: string server_id = 1;
     */
    serverId: string;
}
/**
 * The reply to a successful federation request,
 * containing the token you need to present to the
 * foreign server.
 *
 * @generated from protobuf message protocol.auth.v1.FederateResponse
 */
export interface FederateResponse {
    /**
     * A `harmonytypes.v1.Token` whose `data` field is a serialized `TokenData` message.
     * It is signed with the homeserver's private key.
     *
     * @generated from protobuf field: protocol.harmonytypes.v1.Token token = 1;
     */
    token?: Token;
}
/**
 * Used in `Key` endpoint.
 *
 * @generated from protobuf message protocol.auth.v1.KeyRequest
 */
export interface KeyRequest {
}
/**
 * Contains a key's bytes.
 *
 * @generated from protobuf message protocol.auth.v1.KeyResponse
 */
export interface KeyResponse {
    /**
     * key: the bytes of the public key.
     *
     * @generated from protobuf field: bytes key = 1;
     */
    key: Uint8Array;
}
/**
 * Log into a foreignserver using a token from your homeserver,
 * obtained through a FederateRequest.
 *
 * @generated from protobuf message protocol.auth.v1.LoginFederatedRequest
 */
export interface LoginFederatedRequest {
    /**
     * A `harmonytypes.v1.Token` whose `data` field is a serialized `TokenData` message.
     * It is signed with the homeserver's private key.
     *
     * @generated from protobuf field: protocol.harmonytypes.v1.Token auth_token = 1;
     */
    authToken?: Token;
    /**
     * The server ID of the homeserver that the auth token is from
     *
     * @generated from protobuf field: string server_id = 2;
     */
    serverId: string;
}
/**
 * Used in `LoginFederated` endpoint.
 *
 * @generated from protobuf message protocol.auth.v1.LoginFederatedResponse
 */
export interface LoginFederatedResponse {
    /**
     * The user's session.
     *
     * @generated from protobuf field: protocol.auth.v1.Session session = 1;
     */
    session?: Session;
}
/**
 * Information sent by a client's homeserver, in a `harmonytypes.v1.Token`.
 * It will be sent to a foreignserver by the client.
 *
 * @generated from protobuf message protocol.auth.v1.TokenData
 */
export interface TokenData {
    /**
     * The client's user ID on the homeserver.
     *
     * @generated from protobuf field: uint64 user_id = 1;
     */
    userId: string;
    /**
     * The foreignserver's server ID.
     *
     * @generated from protobuf field: string server_id = 2;
     */
    serverId: string;
    /**
     * The username of the client.
     *
     * @generated from protobuf field: string username = 3;
     */
    username: string;
    /**
     * The avatar of the client. This must be a HMC that points to an image.
     *
     * @generated from protobuf field: optional string avatar = 4;
     */
    avatar?: string;
}
/**
 * Used in `CheckLoggedIn` endpoint.
 *
 * @generated from protobuf message protocol.auth.v1.CheckLoggedInRequest
 */
export interface CheckLoggedInRequest {
}
/**
 * Used in `CheckLoggedIn` endpoint.
 *
 * @generated from protobuf message protocol.auth.v1.CheckLoggedInResponse
 */
export interface CheckLoggedInResponse {
}
// @generated message type with reflection information, may provide speed optimized methods
class BeginAuthRequest$Type extends MessageType<BeginAuthRequest> {
    constructor() {
        super("protocol.auth.v1.BeginAuthRequest", [
            { no: 1, name: "for_guest_token", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message protocol.auth.v1.BeginAuthRequest
 */
export const BeginAuthRequest = new BeginAuthRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class BeginAuthResponse$Type extends MessageType<BeginAuthResponse> {
    constructor() {
        super("protocol.auth.v1.BeginAuthResponse", [
            { no: 1, name: "auth_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message protocol.auth.v1.BeginAuthResponse
 */
export const BeginAuthResponse = new BeginAuthResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Session$Type extends MessageType<Session> {
    constructor() {
        super("protocol.auth.v1.Session", [
            { no: 1, name: "user_id", kind: "scalar", T: 4 /*ScalarType.UINT64*/ },
            { no: 2, name: "session_token", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "guest_token", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message protocol.auth.v1.Session
 */
export const Session = new Session$Type();
// @generated message type with reflection information, may provide speed optimized methods
class AuthStep$Type extends MessageType<AuthStep> {
    constructor() {
        super("protocol.auth.v1.AuthStep", [
            { no: 1, name: "fallback_url", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "can_go_back", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 3, name: "choice", kind: "message", oneof: "step", T: () => AuthStep_Choice },
            { no: 4, name: "form", kind: "message", oneof: "step", T: () => AuthStep_Form },
            { no: 5, name: "session", kind: "message", oneof: "step", T: () => Session },
            { no: 6, name: "waiting", kind: "message", oneof: "step", T: () => AuthStep_Waiting }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message protocol.auth.v1.AuthStep
 */
export const AuthStep = new AuthStep$Type();
// @generated message type with reflection information, may provide speed optimized methods
class AuthStep_Choice$Type extends MessageType<AuthStep_Choice> {
    constructor() {
        super("protocol.auth.v1.AuthStep.Choice", [
            { no: 1, name: "title", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "options", kind: "scalar", repeat: 2 /*RepeatType.UNPACKED*/, T: 9 /*ScalarType.STRING*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message protocol.auth.v1.AuthStep.Choice
 */
export const AuthStep_Choice = new AuthStep_Choice$Type();
// @generated message type with reflection information, may provide speed optimized methods
class AuthStep_Form$Type extends MessageType<AuthStep_Form> {
    constructor() {
        super("protocol.auth.v1.AuthStep.Form", [
            { no: 1, name: "title", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "fields", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => AuthStep_Form_FormField }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message protocol.auth.v1.AuthStep.Form
 */
export const AuthStep_Form = new AuthStep_Form$Type();
// @generated message type with reflection information, may provide speed optimized methods
class AuthStep_Form_FormField$Type extends MessageType<AuthStep_Form_FormField> {
    constructor() {
        super("protocol.auth.v1.AuthStep.Form.FormField", [
            { no: 1, name: "name", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "type", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message protocol.auth.v1.AuthStep.Form.FormField
 */
export const AuthStep_Form_FormField = new AuthStep_Form_FormField$Type();
// @generated message type with reflection information, may provide speed optimized methods
class AuthStep_Waiting$Type extends MessageType<AuthStep_Waiting> {
    constructor() {
        super("protocol.auth.v1.AuthStep.Waiting", [
            { no: 1, name: "title", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "description", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message protocol.auth.v1.AuthStep.Waiting
 */
export const AuthStep_Waiting = new AuthStep_Waiting$Type();
// @generated message type with reflection information, may provide speed optimized methods
class NextStepRequest$Type extends MessageType<NextStepRequest> {
    constructor() {
        super("protocol.auth.v1.NextStepRequest", [
            { no: 1, name: "auth_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "choice", kind: "message", oneof: "step", T: () => NextStepRequest_Choice },
            { no: 3, name: "form", kind: "message", oneof: "step", T: () => NextStepRequest_Form }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message protocol.auth.v1.NextStepRequest
 */
export const NextStepRequest = new NextStepRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class NextStepRequest_Choice$Type extends MessageType<NextStepRequest_Choice> {
    constructor() {
        super("protocol.auth.v1.NextStepRequest.Choice", [
            { no: 1, name: "choice", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message protocol.auth.v1.NextStepRequest.Choice
 */
export const NextStepRequest_Choice = new NextStepRequest_Choice$Type();
// @generated message type with reflection information, may provide speed optimized methods
class NextStepRequest_FormFields$Type extends MessageType<NextStepRequest_FormFields> {
    constructor() {
        super("protocol.auth.v1.NextStepRequest.FormFields", [
            { no: 1, name: "bytes", kind: "scalar", oneof: "field", T: 12 /*ScalarType.BYTES*/ },
            { no: 2, name: "string", kind: "scalar", oneof: "field", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "number", kind: "scalar", oneof: "field", T: 3 /*ScalarType.INT64*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message protocol.auth.v1.NextStepRequest.FormFields
 */
export const NextStepRequest_FormFields = new NextStepRequest_FormFields$Type();
// @generated message type with reflection information, may provide speed optimized methods
class NextStepRequest_Form$Type extends MessageType<NextStepRequest_Form> {
    constructor() {
        super("protocol.auth.v1.NextStepRequest.Form", [
            { no: 1, name: "fields", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => NextStepRequest_FormFields }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message protocol.auth.v1.NextStepRequest.Form
 */
export const NextStepRequest_Form = new NextStepRequest_Form$Type();
// @generated message type with reflection information, may provide speed optimized methods
class NextStepResponse$Type extends MessageType<NextStepResponse> {
    constructor() {
        super("protocol.auth.v1.NextStepResponse", [
            { no: 1, name: "step", kind: "message", T: () => AuthStep }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message protocol.auth.v1.NextStepResponse
 */
export const NextStepResponse = new NextStepResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class StepBackRequest$Type extends MessageType<StepBackRequest> {
    constructor() {
        super("protocol.auth.v1.StepBackRequest", [
            { no: 1, name: "auth_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message protocol.auth.v1.StepBackRequest
 */
export const StepBackRequest = new StepBackRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class StepBackResponse$Type extends MessageType<StepBackResponse> {
    constructor() {
        super("protocol.auth.v1.StepBackResponse", [
            { no: 1, name: "step", kind: "message", T: () => AuthStep }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message protocol.auth.v1.StepBackResponse
 */
export const StepBackResponse = new StepBackResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class StreamStepsRequest$Type extends MessageType<StreamStepsRequest> {
    constructor() {
        super("protocol.auth.v1.StreamStepsRequest", [
            { no: 1, name: "auth_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message protocol.auth.v1.StreamStepsRequest
 */
export const StreamStepsRequest = new StreamStepsRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class StreamStepsResponse$Type extends MessageType<StreamStepsResponse> {
    constructor() {
        super("protocol.auth.v1.StreamStepsResponse", [
            { no: 1, name: "step", kind: "message", T: () => AuthStep }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message protocol.auth.v1.StreamStepsResponse
 */
export const StreamStepsResponse = new StreamStepsResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class FederateRequest$Type extends MessageType<FederateRequest> {
    constructor() {
        super("protocol.auth.v1.FederateRequest", [
            { no: 1, name: "server_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message protocol.auth.v1.FederateRequest
 */
export const FederateRequest = new FederateRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class FederateResponse$Type extends MessageType<FederateResponse> {
    constructor() {
        super("protocol.auth.v1.FederateResponse", [
            { no: 1, name: "token", kind: "message", T: () => Token }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message protocol.auth.v1.FederateResponse
 */
export const FederateResponse = new FederateResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class KeyRequest$Type extends MessageType<KeyRequest> {
    constructor() {
        super("protocol.auth.v1.KeyRequest", []);
    }
}
/**
 * @generated MessageType for protobuf message protocol.auth.v1.KeyRequest
 */
export const KeyRequest = new KeyRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class KeyResponse$Type extends MessageType<KeyResponse> {
    constructor() {
        super("protocol.auth.v1.KeyResponse", [
            { no: 1, name: "key", kind: "scalar", T: 12 /*ScalarType.BYTES*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message protocol.auth.v1.KeyResponse
 */
export const KeyResponse = new KeyResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class LoginFederatedRequest$Type extends MessageType<LoginFederatedRequest> {
    constructor() {
        super("protocol.auth.v1.LoginFederatedRequest", [
            { no: 1, name: "auth_token", kind: "message", T: () => Token },
            { no: 2, name: "server_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message protocol.auth.v1.LoginFederatedRequest
 */
export const LoginFederatedRequest = new LoginFederatedRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class LoginFederatedResponse$Type extends MessageType<LoginFederatedResponse> {
    constructor() {
        super("protocol.auth.v1.LoginFederatedResponse", [
            { no: 1, name: "session", kind: "message", T: () => Session }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message protocol.auth.v1.LoginFederatedResponse
 */
export const LoginFederatedResponse = new LoginFederatedResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class TokenData$Type extends MessageType<TokenData> {
    constructor() {
        super("protocol.auth.v1.TokenData", [
            { no: 1, name: "user_id", kind: "scalar", T: 4 /*ScalarType.UINT64*/ },
            { no: 2, name: "server_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "username", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "avatar", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message protocol.auth.v1.TokenData
 */
export const TokenData = new TokenData$Type();
// @generated message type with reflection information, may provide speed optimized methods
class CheckLoggedInRequest$Type extends MessageType<CheckLoggedInRequest> {
    constructor() {
        super("protocol.auth.v1.CheckLoggedInRequest", []);
    }
}
/**
 * @generated MessageType for protobuf message protocol.auth.v1.CheckLoggedInRequest
 */
export const CheckLoggedInRequest = new CheckLoggedInRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class CheckLoggedInResponse$Type extends MessageType<CheckLoggedInResponse> {
    constructor() {
        super("protocol.auth.v1.CheckLoggedInResponse", []);
    }
}
/**
 * @generated MessageType for protobuf message protocol.auth.v1.CheckLoggedInResponse
 */
export const CheckLoggedInResponse = new CheckLoggedInResponse$Type();
/**
 * @generated ServiceType for protobuf service protocol.auth.v1.AuthService
 */
export const AuthService = new ServiceType("protocol.auth.v1.AuthService", [
    { name: "Federate", options: {}, I: FederateRequest, O: FederateResponse },
    { name: "LoginFederated", options: {}, I: LoginFederatedRequest, O: LoginFederatedResponse },
    { name: "Key", options: {}, I: KeyRequest, O: KeyResponse },
    { name: "BeginAuth", options: {}, I: BeginAuthRequest, O: BeginAuthResponse },
    { name: "NextStep", options: {}, I: NextStepRequest, O: NextStepResponse },
    { name: "StepBack", options: {}, I: StepBackRequest, O: StepBackResponse },
    { name: "StreamSteps", serverStreaming: true, options: {}, I: StreamStepsRequest, O: StreamStepsResponse },
    { name: "CheckLoggedIn", options: { "protocol.harmonytypes.v1.metadata": { requiresAuthentication: true } }, I: CheckLoggedInRequest, O: CheckLoggedInResponse }
]);
