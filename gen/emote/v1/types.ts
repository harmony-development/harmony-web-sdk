// @generated by protobuf-ts 2.2.2 with parameter long_type_string,optimize_code_size,generate_dependencies,optimize_code_size
// @generated from protobuf file "emote/v1/types.proto" (package "protocol.emote.v1", syntax proto3)
// tslint:disable
import { MessageType } from "@protobuf-ts/runtime";
/**
 * Data for a single pack of emotes.
 *
 * @generated from protobuf message protocol.emote.v1.EmotePack
 */
export interface EmotePack {
    /**
     * The ID of the pack.
     *
     * @generated from protobuf field: uint64 pack_id = 1;
     */
    packId: string;
    /**
     * The ID of the user who created the pack.
     *
     * @generated from protobuf field: uint64 pack_owner = 2;
     */
    packOwner: string;
    /**
     * The name of the pack.
     *
     * @generated from protobuf field: string pack_name = 3;
     */
    packName: string;
}
/**
 * Data for a single emote.
 *
 * @generated from protobuf message protocol.emote.v1.Emote
 */
export interface Emote {
    /**
     * The HMC of the emote. Must point to an image.
     *
     * @generated from protobuf field: string image_id = 1;
     */
    imageId: string;
    /**
     * The name of the emote.
     *
     * @generated from protobuf field: string name = 2;
     */
    name: string;
}
/**
 * Used in the `CreateEmotePack` endpoint.
 *
 * @generated from protobuf message protocol.emote.v1.CreateEmotePackRequest
 */
export interface CreateEmotePackRequest {
    /**
     * the name of the pack.
     *
     * @generated from protobuf field: string pack_name = 1;
     */
    packName: string;
}
/**
 * Used in the `CreateEmotePack` endpoint.
 *
 * @generated from protobuf message protocol.emote.v1.CreateEmotePackResponse
 */
export interface CreateEmotePackResponse {
    /**
     * The ID of the pack.
     *
     * @generated from protobuf field: uint64 pack_id = 1;
     */
    packId: string;
}
/**
 * Used in the `GetEmotePacks` endpoint.
 *
 * @generated from protobuf message protocol.emote.v1.GetEmotePacksRequest
 */
export interface GetEmotePacksRequest {
}
/**
 * Used in the `GetEmotePacks` endpoint.
 *
 * @generated from protobuf message protocol.emote.v1.GetEmotePacksResponse
 */
export interface GetEmotePacksResponse {
    /**
     * The list of emote packs.
     *
     * @generated from protobuf field: repeated protocol.emote.v1.EmotePack packs = 1;
     */
    packs: EmotePack[];
}
/**
 * Used in the `GetEmotes` endpoint.
 *
 * @generated from protobuf message protocol.emote.v1.GetEmotePackEmotesRequest
 */
export interface GetEmotePackEmotesRequest {
    /**
     * The ID of the pack.
     *
     * @generated from protobuf field: repeated uint64 pack_id = 1;
     */
    packId: string[];
}
/**
 * Used in the `GetEmotes` endpoint.
 *
 * @generated from protobuf message protocol.emote.v1.GetEmotePackEmotesResponse
 */
export interface GetEmotePackEmotesResponse {
    /**
     * The requested emote packs' emotes.
     *
     * @generated from protobuf field: map<uint64, protocol.emote.v1.GetEmotePackEmotesResponse.EmotePackEmotes> pack_emotes = 1;
     */
    packEmotes: {
        [key: string]: GetEmotePackEmotesResponse_EmotePackEmotes;
    };
}
/**
 * An emote pack's emotes.
 *
 * @generated from protobuf message protocol.emote.v1.GetEmotePackEmotesResponse.EmotePackEmotes
 */
export interface GetEmotePackEmotesResponse_EmotePackEmotes {
    /**
     * The list of emotes in the pack.
     *
     * @generated from protobuf field: repeated protocol.emote.v1.Emote emotes = 1;
     */
    emotes: Emote[];
}
/**
 * Used in the `AddEmoteToPack` endpoint.
 *
 * @generated from protobuf message protocol.emote.v1.AddEmoteToPackRequest
 */
export interface AddEmoteToPackRequest {
    /**
     * The ID of the pack.
     *
     * @generated from protobuf field: uint64 pack_id = 1;
     */
    packId: string;
    /**
     * The file ID of the image to use for the emote.
     *
     * @generated from protobuf field: string image_id = 2;
     */
    imageId: string;
    /**
     * The name of the emote.
     *
     * @generated from protobuf field: string name = 3;
     */
    name: string;
}
/**
 * Used in the `AddEmoteToPack` endpoint.
 *
 * @generated from protobuf message protocol.emote.v1.AddEmoteToPackResponse
 */
export interface AddEmoteToPackResponse {
}
/**
 * Used in the `DeleteEmoteFromPack` endpoint.
 *
 * @generated from protobuf message protocol.emote.v1.DeleteEmoteFromPackRequest
 */
export interface DeleteEmoteFromPackRequest {
    /**
     * The ID of the pack.
     *
     * @generated from protobuf field: uint64 pack_id = 1;
     */
    packId: string;
    /**
     * The name of the emote to delete.
     *
     * @generated from protobuf field: string name = 2;
     */
    name: string;
}
/**
 * Used in the `DeleteEmoteFromPack` endpoint.
 *
 * @generated from protobuf message protocol.emote.v1.DeleteEmoteFromPackResponse
 */
export interface DeleteEmoteFromPackResponse {
}
/**
 * Used in the `DeleteEmotePack` endpoint.
 *
 * @generated from protobuf message protocol.emote.v1.DeleteEmotePackRequest
 */
export interface DeleteEmotePackRequest {
    /**
     * The ID of the pack.
     *
     * @generated from protobuf field: uint64 pack_id = 1;
     */
    packId: string;
}
/**
 * Used in the `DeleteEmotePack` endpoint.
 *
 * @generated from protobuf message protocol.emote.v1.DeleteEmotePackResponse
 */
export interface DeleteEmotePackResponse {
}
/**
 * Used in the `DequipEmotePack` endpoint.
 *
 * @generated from protobuf message protocol.emote.v1.DequipEmotePackRequest
 */
export interface DequipEmotePackRequest {
    /**
     * The ID of the pack.
     *
     * @generated from protobuf field: uint64 pack_id = 1;
     */
    packId: string;
}
/**
 * Used in the `DequipEmotePack` endpoint.
 *
 * @generated from protobuf message protocol.emote.v1.DequipEmotePackResponse
 */
export interface DequipEmotePackResponse {
}
/**
 * Used in the `EquipEmotePack` endpoint.
 *
 * @generated from protobuf message protocol.emote.v1.EquipEmotePackRequest
 */
export interface EquipEmotePackRequest {
    /**
     * The ID of the pack.
     *
     * @generated from protobuf field: uint64 pack_id = 1;
     */
    packId: string;
}
/**
 * Used in the `EquipEmotePack` endpoint.
 *
 * @generated from protobuf message protocol.emote.v1.EquipEmotePackResponse
 */
export interface EquipEmotePackResponse {
}
// @generated message type with reflection information, may provide speed optimized methods
class EmotePack$Type extends MessageType<EmotePack> {
    constructor() {
        super("protocol.emote.v1.EmotePack", [
            { no: 1, name: "pack_id", kind: "scalar", T: 4 /*ScalarType.UINT64*/ },
            { no: 2, name: "pack_owner", kind: "scalar", T: 4 /*ScalarType.UINT64*/ },
            { no: 3, name: "pack_name", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message protocol.emote.v1.EmotePack
 */
export const EmotePack = new EmotePack$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Emote$Type extends MessageType<Emote> {
    constructor() {
        super("protocol.emote.v1.Emote", [
            { no: 1, name: "image_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "name", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message protocol.emote.v1.Emote
 */
export const Emote = new Emote$Type();
// @generated message type with reflection information, may provide speed optimized methods
class CreateEmotePackRequest$Type extends MessageType<CreateEmotePackRequest> {
    constructor() {
        super("protocol.emote.v1.CreateEmotePackRequest", [
            { no: 1, name: "pack_name", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message protocol.emote.v1.CreateEmotePackRequest
 */
export const CreateEmotePackRequest = new CreateEmotePackRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class CreateEmotePackResponse$Type extends MessageType<CreateEmotePackResponse> {
    constructor() {
        super("protocol.emote.v1.CreateEmotePackResponse", [
            { no: 1, name: "pack_id", kind: "scalar", T: 4 /*ScalarType.UINT64*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message protocol.emote.v1.CreateEmotePackResponse
 */
export const CreateEmotePackResponse = new CreateEmotePackResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GetEmotePacksRequest$Type extends MessageType<GetEmotePacksRequest> {
    constructor() {
        super("protocol.emote.v1.GetEmotePacksRequest", []);
    }
}
/**
 * @generated MessageType for protobuf message protocol.emote.v1.GetEmotePacksRequest
 */
export const GetEmotePacksRequest = new GetEmotePacksRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GetEmotePacksResponse$Type extends MessageType<GetEmotePacksResponse> {
    constructor() {
        super("protocol.emote.v1.GetEmotePacksResponse", [
            { no: 1, name: "packs", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => EmotePack }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message protocol.emote.v1.GetEmotePacksResponse
 */
export const GetEmotePacksResponse = new GetEmotePacksResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GetEmotePackEmotesRequest$Type extends MessageType<GetEmotePackEmotesRequest> {
    constructor() {
        super("protocol.emote.v1.GetEmotePackEmotesRequest", [
            { no: 1, name: "pack_id", kind: "scalar", repeat: 1 /*RepeatType.PACKED*/, T: 4 /*ScalarType.UINT64*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message protocol.emote.v1.GetEmotePackEmotesRequest
 */
export const GetEmotePackEmotesRequest = new GetEmotePackEmotesRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GetEmotePackEmotesResponse$Type extends MessageType<GetEmotePackEmotesResponse> {
    constructor() {
        super("protocol.emote.v1.GetEmotePackEmotesResponse", [
            { no: 1, name: "pack_emotes", kind: "map", K: 4 /*ScalarType.UINT64*/, V: { kind: "message", T: () => GetEmotePackEmotesResponse_EmotePackEmotes } }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message protocol.emote.v1.GetEmotePackEmotesResponse
 */
export const GetEmotePackEmotesResponse = new GetEmotePackEmotesResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GetEmotePackEmotesResponse_EmotePackEmotes$Type extends MessageType<GetEmotePackEmotesResponse_EmotePackEmotes> {
    constructor() {
        super("protocol.emote.v1.GetEmotePackEmotesResponse.EmotePackEmotes", [
            { no: 1, name: "emotes", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => Emote }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message protocol.emote.v1.GetEmotePackEmotesResponse.EmotePackEmotes
 */
export const GetEmotePackEmotesResponse_EmotePackEmotes = new GetEmotePackEmotesResponse_EmotePackEmotes$Type();
// @generated message type with reflection information, may provide speed optimized methods
class AddEmoteToPackRequest$Type extends MessageType<AddEmoteToPackRequest> {
    constructor() {
        super("protocol.emote.v1.AddEmoteToPackRequest", [
            { no: 1, name: "pack_id", kind: "scalar", T: 4 /*ScalarType.UINT64*/ },
            { no: 2, name: "image_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "name", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message protocol.emote.v1.AddEmoteToPackRequest
 */
export const AddEmoteToPackRequest = new AddEmoteToPackRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class AddEmoteToPackResponse$Type extends MessageType<AddEmoteToPackResponse> {
    constructor() {
        super("protocol.emote.v1.AddEmoteToPackResponse", []);
    }
}
/**
 * @generated MessageType for protobuf message protocol.emote.v1.AddEmoteToPackResponse
 */
export const AddEmoteToPackResponse = new AddEmoteToPackResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class DeleteEmoteFromPackRequest$Type extends MessageType<DeleteEmoteFromPackRequest> {
    constructor() {
        super("protocol.emote.v1.DeleteEmoteFromPackRequest", [
            { no: 1, name: "pack_id", kind: "scalar", T: 4 /*ScalarType.UINT64*/ },
            { no: 2, name: "name", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message protocol.emote.v1.DeleteEmoteFromPackRequest
 */
export const DeleteEmoteFromPackRequest = new DeleteEmoteFromPackRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class DeleteEmoteFromPackResponse$Type extends MessageType<DeleteEmoteFromPackResponse> {
    constructor() {
        super("protocol.emote.v1.DeleteEmoteFromPackResponse", []);
    }
}
/**
 * @generated MessageType for protobuf message protocol.emote.v1.DeleteEmoteFromPackResponse
 */
export const DeleteEmoteFromPackResponse = new DeleteEmoteFromPackResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class DeleteEmotePackRequest$Type extends MessageType<DeleteEmotePackRequest> {
    constructor() {
        super("protocol.emote.v1.DeleteEmotePackRequest", [
            { no: 1, name: "pack_id", kind: "scalar", T: 4 /*ScalarType.UINT64*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message protocol.emote.v1.DeleteEmotePackRequest
 */
export const DeleteEmotePackRequest = new DeleteEmotePackRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class DeleteEmotePackResponse$Type extends MessageType<DeleteEmotePackResponse> {
    constructor() {
        super("protocol.emote.v1.DeleteEmotePackResponse", []);
    }
}
/**
 * @generated MessageType for protobuf message protocol.emote.v1.DeleteEmotePackResponse
 */
export const DeleteEmotePackResponse = new DeleteEmotePackResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class DequipEmotePackRequest$Type extends MessageType<DequipEmotePackRequest> {
    constructor() {
        super("protocol.emote.v1.DequipEmotePackRequest", [
            { no: 1, name: "pack_id", kind: "scalar", T: 4 /*ScalarType.UINT64*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message protocol.emote.v1.DequipEmotePackRequest
 */
export const DequipEmotePackRequest = new DequipEmotePackRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class DequipEmotePackResponse$Type extends MessageType<DequipEmotePackResponse> {
    constructor() {
        super("protocol.emote.v1.DequipEmotePackResponse", []);
    }
}
/**
 * @generated MessageType for protobuf message protocol.emote.v1.DequipEmotePackResponse
 */
export const DequipEmotePackResponse = new DequipEmotePackResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class EquipEmotePackRequest$Type extends MessageType<EquipEmotePackRequest> {
    constructor() {
        super("protocol.emote.v1.EquipEmotePackRequest", [
            { no: 1, name: "pack_id", kind: "scalar", T: 4 /*ScalarType.UINT64*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message protocol.emote.v1.EquipEmotePackRequest
 */
export const EquipEmotePackRequest = new EquipEmotePackRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class EquipEmotePackResponse$Type extends MessageType<EquipEmotePackResponse> {
    constructor() {
        super("protocol.emote.v1.EquipEmotePackResponse", []);
    }
}
/**
 * @generated MessageType for protobuf message protocol.emote.v1.EquipEmotePackResponse
 */
export const EquipEmotePackResponse = new EquipEmotePackResponse$Type();
