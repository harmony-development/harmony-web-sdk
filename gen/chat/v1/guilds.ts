// @generated by protobuf-ts 2.2.2 with parameter long_type_string,optimize_code_size,generate_dependencies,optimize_code_size
// @generated from protobuf file "chat/v1/guilds.proto" (package "protocol.chat.v1", syntax proto3)
// tslint:disable
import { MessageType } from "@protobuf-ts/runtime";
import { Metadata } from "../../harmonytypes/v1/types";
/**
 * Object representing a guild without the ID part.
 *
 * @generated from protobuf message protocol.chat.v1.Guild
 */
export interface Guild {
    /**
     * The name of the guild.
     *
     * This will be empty if the guild kind is "direct message". See
     * the documentation of "direct message" guild kind on how to display
     * a name for those guilds.
     *
     * @generated from protobuf field: string name = 1;
     */
    name: string;
    /**
     * The picture of the guild. This must be a file ID that points to an image.
     *
     * @generated from protobuf field: optional string picture = 2;
     */
    picture?: string;
    /**
     * User ID of the owners of the guild.
     *
     * @generated from protobuf field: repeated uint64 owner_ids = 3;
     */
    ownerIds: string[];
    /**
     * Metadata of the guild.
     *
     * @generated from protobuf field: optional protocol.harmonytypes.v1.Metadata metadata = 4;
     */
    metadata?: Metadata;
}
/**
 * Object representing a guild with the ID part.
 *
 * @generated from protobuf message protocol.chat.v1.GuildWithId
 */
export interface GuildWithId {
    /**
     * The ID of the guild.
     *
     * @generated from protobuf field: uint64 guild_id = 1;
     */
    guildId: string;
    /**
     * The guild.
     *
     * @generated from protobuf field: protocol.chat.v1.Guild guild = 2;
     */
    guild?: Guild;
}
/**
 * Object representing an invite without the ID part.
 *
 * @generated from protobuf message protocol.chat.v1.Invite
 */
export interface Invite {
    /**
     * Possible uses of this invite. A use of `0` means infinite uses.
     *
     * @generated from protobuf field: uint32 possible_uses = 1;
     */
    possibleUses: number;
    /**
     * Total use count of this invite.
     *
     * @generated from protobuf field: uint32 use_count = 2;
     */
    useCount: number;
}
/**
 * Object representing an invite with the ID part.
 *
 * @generated from protobuf message protocol.chat.v1.InviteWithId
 */
export interface InviteWithId {
    /**
     * ID of the invite.
     *
     * @generated from protobuf field: string invite_id = 1;
     */
    inviteId: string;
    /**
     * The invite data.
     *
     * @generated from protobuf field: protocol.chat.v1.Invite invite = 2;
     */
    invite?: Invite;
}
/**
 * A pending invite.
 *
 * A pending invite's `server_id` and `location` determines whether
 * it is unique or not. If two pending invites have the same `server_id`
 * and `location`, these are considered as the same pending invite.
 *
 * @generated from protobuf message protocol.chat.v1.PendingInvite
 */
export interface PendingInvite {
    /**
     * Server ID of the server where the inviter is on.
     *
     * @generated from protobuf field: optional string server_id = 1;
     */
    serverId?: string;
    /**
     * User ID of the inviter.
     *
     * @generated from protobuf field: uint64 inviter_id = 2;
     */
    inviterId: string;
    /**
     * @generated from protobuf oneof: location
     */
    location: {
        oneofKind: "guildInviteId";
        /**
         * The unique identifier of a user's invite to another
         * user to join a given guild.
         *
         * @generated from protobuf field: string guild_invite_id = 3;
         */
        guildInviteId: string;
    } | {
        oneofKind: "channelId";
        /**
         * The channel ID of the private channel that the user was invited to.
         *
         * @generated from protobuf field: uint64 channel_id = 4;
         */
        channelId: string;
    } | {
        oneofKind: undefined;
    };
}
/**
 * Object representing a guild list entry.
 *
 * @generated from protobuf message protocol.chat.v1.GuildListEntry
 */
export interface GuildListEntry {
    /**
     * Guild ID of this guild entry.
     *
     * @generated from protobuf field: uint64 guild_id = 1;
     */
    guildId: string;
    /**
     * Server ID of the homeserver of this guild.
     *
     * @generated from protobuf field: optional string server_id = 2;
     */
    serverId?: string;
}
/**
 * Request type used in `CreateGuild` endpoint.
 *
 * @generated from protobuf message protocol.chat.v1.CreateGuildRequest
 */
export interface CreateGuildRequest {
    /**
     * The name of the guild.
     *
     * @generated from protobuf field: string name = 1;
     */
    name: string;
    /**
     * The picture file ID of the guild.
     *
     * @generated from protobuf field: optional string picture = 2;
     */
    picture?: string;
    /**
     * Metadata of the guild.
     *
     * @generated from protobuf field: optional protocol.harmonytypes.v1.Metadata metadata = 3;
     */
    metadata?: Metadata;
}
/**
 * Used in the `CreateGuild` endpoint.
 *
 * @generated from protobuf message protocol.chat.v1.CreateGuildResponse
 */
export interface CreateGuildResponse {
    /**
     * Guild ID of the guild that was created.
     *
     * @generated from protobuf field: uint64 guild_id = 1;
     */
    guildId: string;
}
/**
 * Used in the `CreateInvite` endpoint.
 *
 * @generated from protobuf message protocol.chat.v1.CreateInviteRequest
 */
export interface CreateInviteRequest {
    /**
     * Guild ID of the guild to create an invite in.
     *
     * @generated from protobuf field: uint64 guild_id = 1;
     */
    guildId: string;
    /**
     * The name of the invite.
     *
     * @generated from protobuf field: string name = 2;
     */
    name: string;
    /**
     * The possible uses of the invite.
     *
     * A possible use of `0` means that the invite can be used infinitely many times.
     *
     * @generated from protobuf field: uint32 possible_uses = 3;
     */
    possibleUses: number;
}
/**
 * Used in the `CreateInvite` endpoint.
 *
 * @generated from protobuf message protocol.chat.v1.CreateInviteResponse
 */
export interface CreateInviteResponse {
    /**
     * The invite ID of the invite that was created.
     *
     * @generated from protobuf field: string invite_id = 1;
     */
    inviteId: string;
}
/**
 * Used in the `GetGuildList` endpoint.
 *
 * @generated from protobuf message protocol.chat.v1.GetGuildListRequest
 */
export interface GetGuildListRequest {
}
/**
 * Used in the `GetGuildList` endpoint.
 *
 * @generated from protobuf message protocol.chat.v1.GetGuildListResponse
 */
export interface GetGuildListResponse {
    /**
     * Guild list returned by the server.
     *
     * @generated from protobuf field: repeated protocol.chat.v1.GuildListEntry guilds = 1;
     */
    guilds: GuildListEntry[];
}
/**
 * Used in the `GetGuild` endpoint.
 *
 * @generated from protobuf message protocol.chat.v1.GetGuildRequest
 */
export interface GetGuildRequest {
    /**
     * Guild ID(s) to get information about.
     *
     * @generated from protobuf field: repeated uint64 guild_ids = 1;
     */
    guildIds: string[];
}
/**
 * Used in the `GetGuild` endpoint.
 *
 * @generated from protobuf message protocol.chat.v1.GetGuildResponse
 */
export interface GetGuildResponse {
    /**
     * The information(s) of the guild(s) requested.
     *
     * @generated from protobuf field: map<uint64, protocol.chat.v1.Guild> guild = 1;
     */
    guild: {
        [key: string]: Guild;
    };
}
/**
 * Used in the `GetGuildInvites` endpoint.
 *
 * @generated from protobuf message protocol.chat.v1.GetGuildInvitesRequest
 */
export interface GetGuildInvitesRequest {
    /**
     * Guild ID of the guild you want to get invites of.
     *
     * @generated from protobuf field: uint64 guild_id = 1;
     */
    guildId: string;
}
/**
 * Used in the `GetGuildInvites` endpoint.
 *
 * @generated from protobuf message protocol.chat.v1.GetGuildInvitesResponse
 */
export interface GetGuildInvitesResponse {
    /**
     * The invites of the guild, with IDs.
     *
     * @generated from protobuf field: repeated protocol.chat.v1.InviteWithId invites = 1;
     */
    invites: InviteWithId[];
}
/**
 * Used in the `GetGuildMembers` endpoint.
 *
 * @generated from protobuf message protocol.chat.v1.GetGuildMembersRequest
 */
export interface GetGuildMembersRequest {
    /**
     * Guild ID of the guild you want to get members of.
     *
     * @generated from protobuf field: uint64 guild_id = 1;
     */
    guildId: string;
}
/**
 * Used in the `GetGuildMembers` endpoint.
 *
 * @generated from protobuf message protocol.chat.v1.GetGuildMembersResponse
 */
export interface GetGuildMembersResponse {
    /**
     * User IDs of all the guild members.
     *
     * @generated from protobuf field: repeated uint64 members = 1;
     */
    members: string[];
}
/**
 * Used in the `UpdateGuildInformation` endpoint.
 *
 * @generated from protobuf message protocol.chat.v1.UpdateGuildInformationRequest
 */
export interface UpdateGuildInformationRequest {
    /**
     * Guild ID of the guild you want to update the information of.
     *
     * @generated from protobuf field: uint64 guild_id = 1;
     */
    guildId: string;
    /**
     * New name for the guild.
     *
     * @generated from protobuf field: optional string new_name = 2;
     */
    newName?: string;
    /**
     * New picture for the guild.
     *
     * @generated from protobuf field: optional string new_picture = 3;
     */
    newPicture?: string;
    /**
     * New metadata for the guild.
     *
     * @generated from protobuf field: optional protocol.harmonytypes.v1.Metadata new_metadata = 4;
     */
    newMetadata?: Metadata;
}
/**
 * Used in the `UpdateGuildInformation` endpoint.
 *
 * @generated from protobuf message protocol.chat.v1.UpdateGuildInformationResponse
 */
export interface UpdateGuildInformationResponse {
}
/**
 * Used in the `DeleteGuild` endpoint.
 *
 * @generated from protobuf message protocol.chat.v1.DeleteGuildRequest
 */
export interface DeleteGuildRequest {
    /**
     * Guild ID of the guild you want to delete.
     *
     * @generated from protobuf field: uint64 guild_id = 1;
     */
    guildId: string;
}
/**
 * Used in the `DeleteGuild` endpoint.
 *
 * @generated from protobuf message protocol.chat.v1.DeleteGuildResponse
 */
export interface DeleteGuildResponse {
}
/**
 * Used in the `DeleteInvite` endpoint.
 *
 * @generated from protobuf message protocol.chat.v1.DeleteInviteRequest
 */
export interface DeleteInviteRequest {
    /**
     * Guild ID of the guild where the invite is located.
     *
     * @generated from protobuf field: uint64 guild_id = 1;
     */
    guildId: string;
    /**
     * Invite ID of the invite you want to delete.
     *
     * @generated from protobuf field: string invite_id = 2;
     */
    inviteId: string;
}
/**
 * Used in the `DeleteInvite` endpoint.
 *
 * @generated from protobuf message protocol.chat.v1.DeleteInviteResponse
 */
export interface DeleteInviteResponse {
}
/**
 * Used in the `JoinGuild` endpoint.
 *
 * @generated from protobuf message protocol.chat.v1.JoinGuildRequest
 */
export interface JoinGuildRequest {
    /**
     * Invite ID of the guild you want to join.
     *
     * @generated from protobuf field: string invite_id = 1;
     */
    inviteId: string;
}
/**
 * Used in the `JoinGuild` endpoint.
 *
 * @generated from protobuf message protocol.chat.v1.JoinGuildResponse
 */
export interface JoinGuildResponse {
    /**
     * Guild ID of the guild you joined.
     *
     * @generated from protobuf field: uint64 guild_id = 1;
     */
    guildId: string;
}
/**
 * Used in the `PreviewGuild` endpoint.
 *
 * @generated from protobuf message protocol.chat.v1.PreviewGuildRequest
 */
export interface PreviewGuildRequest {
    /**
     * Invite ID of the guild you want to get information from.
     *
     * @generated from protobuf field: string invite_id = 1;
     */
    inviteId: string;
}
/**
 * Used in the `PreviewGuild` endpoint.
 *
 * @generated from protobuf message protocol.chat.v1.PreviewGuildResponse
 */
export interface PreviewGuildResponse {
    /**
     * Name of the guild requested.
     *
     * @generated from protobuf field: string name = 1;
     */
    name: string;
    /**
     * Picture of the guild requested.
     *
     * @generated from protobuf field: optional string picture = 2;
     */
    picture?: string;
    /**
     * Member count of the guild requested.
     *
     * @generated from protobuf field: uint64 member_count = 3;
     */
    memberCount: string;
}
/**
 * Used in the `LeaveGuild` endpoint.
 *
 * @generated from protobuf message protocol.chat.v1.LeaveGuildRequest
 */
export interface LeaveGuildRequest {
    /**
     * Guild ID of the guild you want to leave.
     *
     * @generated from protobuf field: uint64 guild_id = 1;
     */
    guildId: string;
}
/**
 * Used in the `LeaveGuild` endpoint.
 *
 * @generated from protobuf message protocol.chat.v1.LeaveGuildResponse
 */
export interface LeaveGuildResponse {
}
/**
 * Used in `BanUser` endpoint.
 *
 * @generated from protobuf message protocol.chat.v1.BanUserRequest
 */
export interface BanUserRequest {
    /**
     * The guild ID of the guild to ban the user from.
     *
     * @generated from protobuf field: uint64 guild_id = 1;
     */
    guildId: string;
    /**
     * The ID of the user to ban.
     *
     * @generated from protobuf field: uint64 user_id = 2;
     */
    userId: string;
}
/**
 * Used in `BanUser` endpoint.
 *
 * @generated from protobuf message protocol.chat.v1.BanUserResponse
 */
export interface BanUserResponse {
}
/**
 * Used in `KickUser` endpoint.
 *
 * @generated from protobuf message protocol.chat.v1.KickUserRequest
 */
export interface KickUserRequest {
    /**
     * The guild ID of the guild to kick the user from.
     *
     * @generated from protobuf field: uint64 guild_id = 1;
     */
    guildId: string;
    /**
     * The user ID of the user to kick.
     *
     * @generated from protobuf field: uint64 user_id = 2;
     */
    userId: string;
}
/**
 * Used in `KickUser` endpoint.
 *
 * @generated from protobuf message protocol.chat.v1.KickUserResponse
 */
export interface KickUserResponse {
}
/**
 * Used in `UnbanUser` endpoint.
 *
 * @generated from protobuf message protocol.chat.v1.UnbanUserRequest
 */
export interface UnbanUserRequest {
    /**
     * The guild ID of the guild to unban the user from.
     *
     * @generated from protobuf field: uint64 guild_id = 1;
     */
    guildId: string;
    /**
     * The user ID of the user to unban.
     *
     * @generated from protobuf field: uint64 user_id = 2;
     */
    userId: string;
}
/**
 * Used in `UnbanUser` endpoint.
 *
 * @generated from protobuf message protocol.chat.v1.UnbanUserResponse
 */
export interface UnbanUserResponse {
}
/**
 * Used in `GetBannedUsers` endpoint.
 *
 * @generated from protobuf message protocol.chat.v1.GetBannedUsersRequest
 */
export interface GetBannedUsersRequest {
    /**
     * Guild ID to get banned users for.
     *
     * @generated from protobuf field: uint64 guild_id = 1;
     */
    guildId: string;
}
/**
 * Used in `GetBannedUsers` endpoint.
 *
 * @generated from protobuf message protocol.chat.v1.GetBannedUsersResponse
 */
export interface GetBannedUsersResponse {
    /**
     * The user IDs of banned users.
     *
     * @generated from protobuf field: repeated uint64 banned_users = 1;
     */
    bannedUsers: string[];
}
/**
 * Request for GrantOwnership
 *
 * @generated from protobuf message protocol.chat.v1.GrantOwnershipRequest
 */
export interface GrantOwnershipRequest {
    /**
     * Guild ID of the guild to give a user ownership on.
     *
     * @generated from protobuf field: uint64 guild_id = 1;
     */
    guildId: string;
    /**
     * The ID of the new owner to add.
     *
     * @generated from protobuf field: uint64 new_owner_id = 2;
     */
    newOwnerId: string;
}
/**
 * Response for GrantOwnership
 *
 * @generated from protobuf message protocol.chat.v1.GrantOwnershipResponse
 */
export interface GrantOwnershipResponse {
}
/**
 * Request for GiveUpOwnership
 *
 * @generated from protobuf message protocol.chat.v1.GiveUpOwnershipRequest
 */
export interface GiveUpOwnershipRequest {
    /**
     * Guild ID to give up your ownership on.
     *
     * @generated from protobuf field: uint64 guild_id = 1;
     */
    guildId: string;
}
/**
 * Response for GiveUpOwnership
 *
 * @generated from protobuf message protocol.chat.v1.GiveUpOwnershipResponse
 */
export interface GiveUpOwnershipResponse {
}
/**
 * Used in `GetPendingInvites` endpoint.
 *
 * @generated from protobuf message protocol.chat.v1.GetPendingInvitesRequest
 */
export interface GetPendingInvitesRequest {
}
/**
 * Used in `GetPendingInvites` endpoint.
 *
 * @generated from protobuf message protocol.chat.v1.GetPendingInvitesResponse
 */
export interface GetPendingInvitesResponse {
    /**
     * The pending invite(s).
     *
     * @generated from protobuf field: repeated protocol.chat.v1.PendingInvite invites = 1;
     */
    invites: PendingInvite[];
}
/**
 * Used in `RejectPendingInvite` endpoint.
 *
 * @generated from protobuf message protocol.chat.v1.RejectPendingInviteRequest
 */
export interface RejectPendingInviteRequest {
    /**
     * Server ID of the server where the inviter is on.
     *
     * @generated from protobuf field: optional string server_id = 1;
     */
    serverId?: string;
    /**
     * @generated from protobuf oneof: location
     */
    location: {
        oneofKind: "guildInviteId";
        /**
         * The unique identifier of a user's invite to another
         * user to join a given guild.
         *
         * @generated from protobuf field: string guild_invite_id = 2;
         */
        guildInviteId: string;
    } | {
        oneofKind: "channelId";
        /**
         * The channel ID of the private channel that the user was invited to.
         *
         * @generated from protobuf field: uint64 channel_id = 3;
         */
        channelId: string;
    } | {
        oneofKind: undefined;
    };
}
/**
 * Used in `RejectPendingInvite` endpoint.
 *
 * @generated from protobuf message protocol.chat.v1.RejectPendingInviteResponse
 */
export interface RejectPendingInviteResponse {
}
/**
 * Used in `IgnorePendingInvite` endpoint.
 *
 * @generated from protobuf message protocol.chat.v1.IgnorePendingInviteRequest
 */
export interface IgnorePendingInviteRequest {
    /**
     * Server ID of the server where the inviter is on.
     *
     * @generated from protobuf field: optional string server_id = 1;
     */
    serverId?: string;
    /**
     * @generated from protobuf oneof: location
     */
    location: {
        oneofKind: "guildInviteId";
        /**
         * The unique identifier of a user's invite to another
         * user to join a given guild.
         *
         * @generated from protobuf field: string guild_invite_id = 2;
         */
        guildInviteId: string;
    } | {
        oneofKind: "channelId";
        /**
         * The channel ID of the private channel that the user was invited to.
         *
         * @generated from protobuf field: uint64 channel_id = 3;
         */
        channelId: string;
    } | {
        oneofKind: undefined;
    };
}
/**
 * Used in `IgnorePendingInvite` endpoint.
 *
 * @generated from protobuf message protocol.chat.v1.IgnorePendingInviteResponse
 */
export interface IgnorePendingInviteResponse {
}
/**
 * Used in `InviteUserToGuild` endpoint.
 *
 * @generated from protobuf message protocol.chat.v1.InviteUserToGuildRequest
 */
export interface InviteUserToGuildRequest {
    /**
     * User name of the user to invite.
     *
     * @generated from protobuf field: string user_name = 1;
     */
    userName: string;
    /**
     * Server ID of the user if they are on another server.
     *
     * @generated from protobuf field: optional string server_id = 2;
     */
    serverId?: string;
    /**
     * Guild ID of the guild to invite to.
     *
     * @generated from protobuf field: uint64 guild_id = 3;
     */
    guildId: string;
}
/**
 * Used in `InviteUserToGuild` endpoint.
 *
 * @generated from protobuf message protocol.chat.v1.InviteUserToGuildResponse
 */
export interface InviteUserToGuildResponse {
}
/**
 * A reason for why a user has left a guild.
 *
 * @generated from protobuf enum protocol.chat.v1.LeaveReason
 */
export enum LeaveReason {
    /**
     * The user left the guild willingly.
     *
     * @generated from protobuf enum value: LEAVE_REASON_WILLINGLY_UNSPECIFIED = 0;
     */
    WILLINGLY_UNSPECIFIED = 0,
    /**
     * The user was banned from the guild.
     *
     * @generated from protobuf enum value: LEAVE_REASON_BANNED = 1;
     */
    BANNED = 1,
    /**
     * The user was kicked from the guild.
     *
     * @generated from protobuf enum value: LEAVE_REASON_KICKED = 2;
     */
    KICKED = 2
}
// @generated message type with reflection information, may provide speed optimized methods
class Guild$Type extends MessageType<Guild> {
    constructor() {
        super("protocol.chat.v1.Guild", [
            { no: 1, name: "name", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "picture", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "owner_ids", kind: "scalar", repeat: 1 /*RepeatType.PACKED*/, T: 4 /*ScalarType.UINT64*/ },
            { no: 4, name: "metadata", kind: "message", T: () => Metadata }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message protocol.chat.v1.Guild
 */
export const Guild = new Guild$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GuildWithId$Type extends MessageType<GuildWithId> {
    constructor() {
        super("protocol.chat.v1.GuildWithId", [
            { no: 1, name: "guild_id", kind: "scalar", T: 4 /*ScalarType.UINT64*/ },
            { no: 2, name: "guild", kind: "message", T: () => Guild }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message protocol.chat.v1.GuildWithId
 */
export const GuildWithId = new GuildWithId$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Invite$Type extends MessageType<Invite> {
    constructor() {
        super("protocol.chat.v1.Invite", [
            { no: 1, name: "possible_uses", kind: "scalar", T: 13 /*ScalarType.UINT32*/ },
            { no: 2, name: "use_count", kind: "scalar", T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message protocol.chat.v1.Invite
 */
export const Invite = new Invite$Type();
// @generated message type with reflection information, may provide speed optimized methods
class InviteWithId$Type extends MessageType<InviteWithId> {
    constructor() {
        super("protocol.chat.v1.InviteWithId", [
            { no: 1, name: "invite_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "invite", kind: "message", T: () => Invite }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message protocol.chat.v1.InviteWithId
 */
export const InviteWithId = new InviteWithId$Type();
// @generated message type with reflection information, may provide speed optimized methods
class PendingInvite$Type extends MessageType<PendingInvite> {
    constructor() {
        super("protocol.chat.v1.PendingInvite", [
            { no: 1, name: "server_id", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "inviter_id", kind: "scalar", T: 4 /*ScalarType.UINT64*/ },
            { no: 3, name: "guild_invite_id", kind: "scalar", oneof: "location", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "channel_id", kind: "scalar", oneof: "location", T: 4 /*ScalarType.UINT64*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message protocol.chat.v1.PendingInvite
 */
export const PendingInvite = new PendingInvite$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GuildListEntry$Type extends MessageType<GuildListEntry> {
    constructor() {
        super("protocol.chat.v1.GuildListEntry", [
            { no: 1, name: "guild_id", kind: "scalar", T: 4 /*ScalarType.UINT64*/ },
            { no: 2, name: "server_id", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message protocol.chat.v1.GuildListEntry
 */
export const GuildListEntry = new GuildListEntry$Type();
// @generated message type with reflection information, may provide speed optimized methods
class CreateGuildRequest$Type extends MessageType<CreateGuildRequest> {
    constructor() {
        super("protocol.chat.v1.CreateGuildRequest", [
            { no: 1, name: "name", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "picture", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "metadata", kind: "message", T: () => Metadata }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message protocol.chat.v1.CreateGuildRequest
 */
export const CreateGuildRequest = new CreateGuildRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class CreateGuildResponse$Type extends MessageType<CreateGuildResponse> {
    constructor() {
        super("protocol.chat.v1.CreateGuildResponse", [
            { no: 1, name: "guild_id", kind: "scalar", T: 4 /*ScalarType.UINT64*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message protocol.chat.v1.CreateGuildResponse
 */
export const CreateGuildResponse = new CreateGuildResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class CreateInviteRequest$Type extends MessageType<CreateInviteRequest> {
    constructor() {
        super("protocol.chat.v1.CreateInviteRequest", [
            { no: 1, name: "guild_id", kind: "scalar", T: 4 /*ScalarType.UINT64*/ },
            { no: 2, name: "name", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "possible_uses", kind: "scalar", T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message protocol.chat.v1.CreateInviteRequest
 */
export const CreateInviteRequest = new CreateInviteRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class CreateInviteResponse$Type extends MessageType<CreateInviteResponse> {
    constructor() {
        super("protocol.chat.v1.CreateInviteResponse", [
            { no: 1, name: "invite_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message protocol.chat.v1.CreateInviteResponse
 */
export const CreateInviteResponse = new CreateInviteResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GetGuildListRequest$Type extends MessageType<GetGuildListRequest> {
    constructor() {
        super("protocol.chat.v1.GetGuildListRequest", []);
    }
}
/**
 * @generated MessageType for protobuf message protocol.chat.v1.GetGuildListRequest
 */
export const GetGuildListRequest = new GetGuildListRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GetGuildListResponse$Type extends MessageType<GetGuildListResponse> {
    constructor() {
        super("protocol.chat.v1.GetGuildListResponse", [
            { no: 1, name: "guilds", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => GuildListEntry }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message protocol.chat.v1.GetGuildListResponse
 */
export const GetGuildListResponse = new GetGuildListResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GetGuildRequest$Type extends MessageType<GetGuildRequest> {
    constructor() {
        super("protocol.chat.v1.GetGuildRequest", [
            { no: 1, name: "guild_ids", kind: "scalar", repeat: 1 /*RepeatType.PACKED*/, T: 4 /*ScalarType.UINT64*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message protocol.chat.v1.GetGuildRequest
 */
export const GetGuildRequest = new GetGuildRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GetGuildResponse$Type extends MessageType<GetGuildResponse> {
    constructor() {
        super("protocol.chat.v1.GetGuildResponse", [
            { no: 1, name: "guild", kind: "map", K: 4 /*ScalarType.UINT64*/, V: { kind: "message", T: () => Guild } }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message protocol.chat.v1.GetGuildResponse
 */
export const GetGuildResponse = new GetGuildResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GetGuildInvitesRequest$Type extends MessageType<GetGuildInvitesRequest> {
    constructor() {
        super("protocol.chat.v1.GetGuildInvitesRequest", [
            { no: 1, name: "guild_id", kind: "scalar", T: 4 /*ScalarType.UINT64*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message protocol.chat.v1.GetGuildInvitesRequest
 */
export const GetGuildInvitesRequest = new GetGuildInvitesRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GetGuildInvitesResponse$Type extends MessageType<GetGuildInvitesResponse> {
    constructor() {
        super("protocol.chat.v1.GetGuildInvitesResponse", [
            { no: 1, name: "invites", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => InviteWithId }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message protocol.chat.v1.GetGuildInvitesResponse
 */
export const GetGuildInvitesResponse = new GetGuildInvitesResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GetGuildMembersRequest$Type extends MessageType<GetGuildMembersRequest> {
    constructor() {
        super("protocol.chat.v1.GetGuildMembersRequest", [
            { no: 1, name: "guild_id", kind: "scalar", T: 4 /*ScalarType.UINT64*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message protocol.chat.v1.GetGuildMembersRequest
 */
export const GetGuildMembersRequest = new GetGuildMembersRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GetGuildMembersResponse$Type extends MessageType<GetGuildMembersResponse> {
    constructor() {
        super("protocol.chat.v1.GetGuildMembersResponse", [
            { no: 1, name: "members", kind: "scalar", repeat: 1 /*RepeatType.PACKED*/, T: 4 /*ScalarType.UINT64*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message protocol.chat.v1.GetGuildMembersResponse
 */
export const GetGuildMembersResponse = new GetGuildMembersResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class UpdateGuildInformationRequest$Type extends MessageType<UpdateGuildInformationRequest> {
    constructor() {
        super("protocol.chat.v1.UpdateGuildInformationRequest", [
            { no: 1, name: "guild_id", kind: "scalar", T: 4 /*ScalarType.UINT64*/ },
            { no: 2, name: "new_name", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "new_picture", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "new_metadata", kind: "message", T: () => Metadata }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message protocol.chat.v1.UpdateGuildInformationRequest
 */
export const UpdateGuildInformationRequest = new UpdateGuildInformationRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class UpdateGuildInformationResponse$Type extends MessageType<UpdateGuildInformationResponse> {
    constructor() {
        super("protocol.chat.v1.UpdateGuildInformationResponse", []);
    }
}
/**
 * @generated MessageType for protobuf message protocol.chat.v1.UpdateGuildInformationResponse
 */
export const UpdateGuildInformationResponse = new UpdateGuildInformationResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class DeleteGuildRequest$Type extends MessageType<DeleteGuildRequest> {
    constructor() {
        super("protocol.chat.v1.DeleteGuildRequest", [
            { no: 1, name: "guild_id", kind: "scalar", T: 4 /*ScalarType.UINT64*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message protocol.chat.v1.DeleteGuildRequest
 */
export const DeleteGuildRequest = new DeleteGuildRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class DeleteGuildResponse$Type extends MessageType<DeleteGuildResponse> {
    constructor() {
        super("protocol.chat.v1.DeleteGuildResponse", []);
    }
}
/**
 * @generated MessageType for protobuf message protocol.chat.v1.DeleteGuildResponse
 */
export const DeleteGuildResponse = new DeleteGuildResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class DeleteInviteRequest$Type extends MessageType<DeleteInviteRequest> {
    constructor() {
        super("protocol.chat.v1.DeleteInviteRequest", [
            { no: 1, name: "guild_id", kind: "scalar", T: 4 /*ScalarType.UINT64*/ },
            { no: 2, name: "invite_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message protocol.chat.v1.DeleteInviteRequest
 */
export const DeleteInviteRequest = new DeleteInviteRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class DeleteInviteResponse$Type extends MessageType<DeleteInviteResponse> {
    constructor() {
        super("protocol.chat.v1.DeleteInviteResponse", []);
    }
}
/**
 * @generated MessageType for protobuf message protocol.chat.v1.DeleteInviteResponse
 */
export const DeleteInviteResponse = new DeleteInviteResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class JoinGuildRequest$Type extends MessageType<JoinGuildRequest> {
    constructor() {
        super("protocol.chat.v1.JoinGuildRequest", [
            { no: 1, name: "invite_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message protocol.chat.v1.JoinGuildRequest
 */
export const JoinGuildRequest = new JoinGuildRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class JoinGuildResponse$Type extends MessageType<JoinGuildResponse> {
    constructor() {
        super("protocol.chat.v1.JoinGuildResponse", [
            { no: 1, name: "guild_id", kind: "scalar", T: 4 /*ScalarType.UINT64*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message protocol.chat.v1.JoinGuildResponse
 */
export const JoinGuildResponse = new JoinGuildResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class PreviewGuildRequest$Type extends MessageType<PreviewGuildRequest> {
    constructor() {
        super("protocol.chat.v1.PreviewGuildRequest", [
            { no: 1, name: "invite_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message protocol.chat.v1.PreviewGuildRequest
 */
export const PreviewGuildRequest = new PreviewGuildRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class PreviewGuildResponse$Type extends MessageType<PreviewGuildResponse> {
    constructor() {
        super("protocol.chat.v1.PreviewGuildResponse", [
            { no: 1, name: "name", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "picture", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "member_count", kind: "scalar", T: 4 /*ScalarType.UINT64*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message protocol.chat.v1.PreviewGuildResponse
 */
export const PreviewGuildResponse = new PreviewGuildResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class LeaveGuildRequest$Type extends MessageType<LeaveGuildRequest> {
    constructor() {
        super("protocol.chat.v1.LeaveGuildRequest", [
            { no: 1, name: "guild_id", kind: "scalar", T: 4 /*ScalarType.UINT64*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message protocol.chat.v1.LeaveGuildRequest
 */
export const LeaveGuildRequest = new LeaveGuildRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class LeaveGuildResponse$Type extends MessageType<LeaveGuildResponse> {
    constructor() {
        super("protocol.chat.v1.LeaveGuildResponse", []);
    }
}
/**
 * @generated MessageType for protobuf message protocol.chat.v1.LeaveGuildResponse
 */
export const LeaveGuildResponse = new LeaveGuildResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class BanUserRequest$Type extends MessageType<BanUserRequest> {
    constructor() {
        super("protocol.chat.v1.BanUserRequest", [
            { no: 1, name: "guild_id", kind: "scalar", T: 4 /*ScalarType.UINT64*/ },
            { no: 2, name: "user_id", kind: "scalar", T: 4 /*ScalarType.UINT64*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message protocol.chat.v1.BanUserRequest
 */
export const BanUserRequest = new BanUserRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class BanUserResponse$Type extends MessageType<BanUserResponse> {
    constructor() {
        super("protocol.chat.v1.BanUserResponse", []);
    }
}
/**
 * @generated MessageType for protobuf message protocol.chat.v1.BanUserResponse
 */
export const BanUserResponse = new BanUserResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class KickUserRequest$Type extends MessageType<KickUserRequest> {
    constructor() {
        super("protocol.chat.v1.KickUserRequest", [
            { no: 1, name: "guild_id", kind: "scalar", T: 4 /*ScalarType.UINT64*/ },
            { no: 2, name: "user_id", kind: "scalar", T: 4 /*ScalarType.UINT64*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message protocol.chat.v1.KickUserRequest
 */
export const KickUserRequest = new KickUserRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class KickUserResponse$Type extends MessageType<KickUserResponse> {
    constructor() {
        super("protocol.chat.v1.KickUserResponse", []);
    }
}
/**
 * @generated MessageType for protobuf message protocol.chat.v1.KickUserResponse
 */
export const KickUserResponse = new KickUserResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class UnbanUserRequest$Type extends MessageType<UnbanUserRequest> {
    constructor() {
        super("protocol.chat.v1.UnbanUserRequest", [
            { no: 1, name: "guild_id", kind: "scalar", T: 4 /*ScalarType.UINT64*/ },
            { no: 2, name: "user_id", kind: "scalar", T: 4 /*ScalarType.UINT64*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message protocol.chat.v1.UnbanUserRequest
 */
export const UnbanUserRequest = new UnbanUserRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class UnbanUserResponse$Type extends MessageType<UnbanUserResponse> {
    constructor() {
        super("protocol.chat.v1.UnbanUserResponse", []);
    }
}
/**
 * @generated MessageType for protobuf message protocol.chat.v1.UnbanUserResponse
 */
export const UnbanUserResponse = new UnbanUserResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GetBannedUsersRequest$Type extends MessageType<GetBannedUsersRequest> {
    constructor() {
        super("protocol.chat.v1.GetBannedUsersRequest", [
            { no: 1, name: "guild_id", kind: "scalar", T: 4 /*ScalarType.UINT64*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message protocol.chat.v1.GetBannedUsersRequest
 */
export const GetBannedUsersRequest = new GetBannedUsersRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GetBannedUsersResponse$Type extends MessageType<GetBannedUsersResponse> {
    constructor() {
        super("protocol.chat.v1.GetBannedUsersResponse", [
            { no: 1, name: "banned_users", kind: "scalar", repeat: 1 /*RepeatType.PACKED*/, T: 4 /*ScalarType.UINT64*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message protocol.chat.v1.GetBannedUsersResponse
 */
export const GetBannedUsersResponse = new GetBannedUsersResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GrantOwnershipRequest$Type extends MessageType<GrantOwnershipRequest> {
    constructor() {
        super("protocol.chat.v1.GrantOwnershipRequest", [
            { no: 1, name: "guild_id", kind: "scalar", T: 4 /*ScalarType.UINT64*/ },
            { no: 2, name: "new_owner_id", kind: "scalar", T: 4 /*ScalarType.UINT64*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message protocol.chat.v1.GrantOwnershipRequest
 */
export const GrantOwnershipRequest = new GrantOwnershipRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GrantOwnershipResponse$Type extends MessageType<GrantOwnershipResponse> {
    constructor() {
        super("protocol.chat.v1.GrantOwnershipResponse", []);
    }
}
/**
 * @generated MessageType for protobuf message protocol.chat.v1.GrantOwnershipResponse
 */
export const GrantOwnershipResponse = new GrantOwnershipResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GiveUpOwnershipRequest$Type extends MessageType<GiveUpOwnershipRequest> {
    constructor() {
        super("protocol.chat.v1.GiveUpOwnershipRequest", [
            { no: 1, name: "guild_id", kind: "scalar", T: 4 /*ScalarType.UINT64*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message protocol.chat.v1.GiveUpOwnershipRequest
 */
export const GiveUpOwnershipRequest = new GiveUpOwnershipRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GiveUpOwnershipResponse$Type extends MessageType<GiveUpOwnershipResponse> {
    constructor() {
        super("protocol.chat.v1.GiveUpOwnershipResponse", []);
    }
}
/**
 * @generated MessageType for protobuf message protocol.chat.v1.GiveUpOwnershipResponse
 */
export const GiveUpOwnershipResponse = new GiveUpOwnershipResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GetPendingInvitesRequest$Type extends MessageType<GetPendingInvitesRequest> {
    constructor() {
        super("protocol.chat.v1.GetPendingInvitesRequest", []);
    }
}
/**
 * @generated MessageType for protobuf message protocol.chat.v1.GetPendingInvitesRequest
 */
export const GetPendingInvitesRequest = new GetPendingInvitesRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GetPendingInvitesResponse$Type extends MessageType<GetPendingInvitesResponse> {
    constructor() {
        super("protocol.chat.v1.GetPendingInvitesResponse", [
            { no: 1, name: "invites", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => PendingInvite }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message protocol.chat.v1.GetPendingInvitesResponse
 */
export const GetPendingInvitesResponse = new GetPendingInvitesResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class RejectPendingInviteRequest$Type extends MessageType<RejectPendingInviteRequest> {
    constructor() {
        super("protocol.chat.v1.RejectPendingInviteRequest", [
            { no: 1, name: "server_id", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "guild_invite_id", kind: "scalar", oneof: "location", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "channel_id", kind: "scalar", oneof: "location", T: 4 /*ScalarType.UINT64*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message protocol.chat.v1.RejectPendingInviteRequest
 */
export const RejectPendingInviteRequest = new RejectPendingInviteRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class RejectPendingInviteResponse$Type extends MessageType<RejectPendingInviteResponse> {
    constructor() {
        super("protocol.chat.v1.RejectPendingInviteResponse", []);
    }
}
/**
 * @generated MessageType for protobuf message protocol.chat.v1.RejectPendingInviteResponse
 */
export const RejectPendingInviteResponse = new RejectPendingInviteResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class IgnorePendingInviteRequest$Type extends MessageType<IgnorePendingInviteRequest> {
    constructor() {
        super("protocol.chat.v1.IgnorePendingInviteRequest", [
            { no: 1, name: "server_id", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "guild_invite_id", kind: "scalar", oneof: "location", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "channel_id", kind: "scalar", oneof: "location", T: 4 /*ScalarType.UINT64*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message protocol.chat.v1.IgnorePendingInviteRequest
 */
export const IgnorePendingInviteRequest = new IgnorePendingInviteRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class IgnorePendingInviteResponse$Type extends MessageType<IgnorePendingInviteResponse> {
    constructor() {
        super("protocol.chat.v1.IgnorePendingInviteResponse", []);
    }
}
/**
 * @generated MessageType for protobuf message protocol.chat.v1.IgnorePendingInviteResponse
 */
export const IgnorePendingInviteResponse = new IgnorePendingInviteResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class InviteUserToGuildRequest$Type extends MessageType<InviteUserToGuildRequest> {
    constructor() {
        super("protocol.chat.v1.InviteUserToGuildRequest", [
            { no: 1, name: "user_name", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "server_id", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "guild_id", kind: "scalar", T: 4 /*ScalarType.UINT64*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message protocol.chat.v1.InviteUserToGuildRequest
 */
export const InviteUserToGuildRequest = new InviteUserToGuildRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class InviteUserToGuildResponse$Type extends MessageType<InviteUserToGuildResponse> {
    constructor() {
        super("protocol.chat.v1.InviteUserToGuildResponse", []);
    }
}
/**
 * @generated MessageType for protobuf message protocol.chat.v1.InviteUserToGuildResponse
 */
export const InviteUserToGuildResponse = new InviteUserToGuildResponse$Type();
