// @generated by protobuf-ts 1.0.13 with parameters long_type_string,optimize_code_size,generate_dependencies,optimize_code_size
// @generated from protobuf file "chat/v1/channels.proto" (package "protocol.chat.v1", syntax proto3)
// tslint:disable
import { MessageType } from "@protobuf-ts/runtime";
import { Metadata } from "../../harmonytypes/v1/types";
import { ItemPosition } from "../../harmonytypes/v1/types";
/**
 * Channel Kinds:
 *
 * Channel kinds specified in an official Harmony protocol will start with a
 * "h." prefix. Third-party extensions should not use the "h." prefix. If no
 * kind is specified, the channel is a text channel.
 *
 * Kinds indicate additional functionality a channel may have: for example,
 * h.voice can indicate that a channel has voice functionalities alongside
 * the usual text fare.
 *
 *
 * @generated from protobuf message protocol.chat.v1.CreateChannelRequest
 */
export interface CreateChannelRequest {
    /**
     * @generated from protobuf field: uint64 guild_id = 1;
     */
    guildId: string;
    /**
     * @generated from protobuf field: string channel_name = 2;
     */
    channelName: string; //  [(validate.rules).string.min_len = 1]
    /**
     * @generated from protobuf field: bool is_category = 3;
     */
    isCategory: boolean;
    /**
     * @generated from protobuf field: protocol.harmonytypes.v1.ItemPosition position = 4;
     */
    position?: ItemPosition;
    /**
     * @generated from protobuf field: protocol.harmonytypes.v1.Metadata metadata = 5;
     */
    metadata?: Metadata;
}
/**
 * @generated from protobuf message protocol.chat.v1.CreateChannelResponse
 */
export interface CreateChannelResponse {
    /**
     * @generated from protobuf field: uint64 channel_id = 1;
     */
    channelId: string;
}
/**
 * @generated from protobuf message protocol.chat.v1.GetGuildChannelsRequest
 */
export interface GetGuildChannelsRequest {
    /**
     * @generated from protobuf field: uint64 guild_id = 1;
     */
    guildId: string;
}
/**
 * @generated from protobuf message protocol.chat.v1.GetGuildChannelsResponse
 */
export interface GetGuildChannelsResponse {
    /**
     * @generated from protobuf field: repeated protocol.chat.v1.GetGuildChannelsResponse.Channel channels = 1;
     */
    channels: GetGuildChannelsResponse_Channel[];
}
/**
 * @generated from protobuf message protocol.chat.v1.GetGuildChannelsResponse.Channel
 */
export interface GetGuildChannelsResponse_Channel {
    /**
     * @generated from protobuf field: protocol.harmonytypes.v1.Metadata metadata = 4;
     */
    metadata?: Metadata;
    /**
     * @generated from protobuf field: uint64 channel_id = 1;
     */
    channelId: string;
    /**
     * @generated from protobuf field: string channel_name = 2;
     */
    channelName: string;
    /**
     * @generated from protobuf field: bool is_category = 3;
     */
    isCategory: boolean;
}
/**
 * @generated from protobuf message protocol.chat.v1.UpdateChannelInformationRequest
 */
export interface UpdateChannelInformationRequest {
    /**
     * @generated from protobuf field: uint64 guild_id = 1;
     */
    guildId: string;
    /**
     * @generated from protobuf field: uint64 channel_id = 2;
     */
    channelId: string;
    /**
     * @generated from protobuf field: optional string new_name = 3;
     */
    newName?: string;
    /**
     * @generated from protobuf field: optional protocol.harmonytypes.v1.Metadata new_metadata = 4;
     */
    newMetadata?: Metadata;
}
/**
 * @generated from protobuf message protocol.chat.v1.UpdateChannelOrderRequest
 */
export interface UpdateChannelOrderRequest {
    /**
     * @generated from protobuf field: uint64 guild_id = 1;
     */
    guildId: string;
    /**
     * @generated from protobuf field: uint64 channel_id = 2;
     */
    channelId: string;
    /**
     * @generated from protobuf field: optional protocol.harmonytypes.v1.ItemPosition new_position = 3;
     */
    newPosition?: ItemPosition;
}
/**
 * Request specifiying the order of all channels in a guild at once
 *
 * @generated from protobuf message protocol.chat.v1.UpdateAllChannelOrderRequest
 */
export interface UpdateAllChannelOrderRequest {
    /**
     * guild_id: the guild to specify the new channel order for
     *
     * @generated from protobuf field: uint64 guild_id = 1;
     */
    guildId: string;
    /**
     * channel_ids: the new order of channel ids
     *
     * @generated from protobuf field: repeated uint64 channel_ids = 2;
     */
    channelIds: string[];
}
/**
 * @generated from protobuf message protocol.chat.v1.DeleteChannelRequest
 */
export interface DeleteChannelRequest {
    /**
     * @generated from protobuf field: uint64 guild_id = 1;
     */
    guildId: string;
    /**
     * @generated from protobuf field: uint64 channel_id = 2;
     */
    channelId: string;
}
/**
 * @generated from protobuf message protocol.chat.v1.TypingRequest
 */
export interface TypingRequest {
    /**
     * @generated from protobuf field: uint64 guild_id = 1;
     */
    guildId: string;
    /**
     * @generated from protobuf field: uint64 channel_id = 2;
     */
    channelId: string;
}
/**
 * Type for protobuf message protocol.chat.v1.CreateChannelRequest
 */
class CreateChannelRequest$Type extends MessageType<CreateChannelRequest> {
    constructor() {
        super("protocol.chat.v1.CreateChannelRequest", [
            { no: 1, name: "guild_id", kind: "scalar", T: 4 /*ScalarType.UINT64*/ },
            { no: 2, name: "channel_name", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "is_category", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 4, name: "position", kind: "message", T: () => ItemPosition },
            { no: 5, name: "metadata", kind: "message", T: () => Metadata }
        ]);
    }
}
export const CreateChannelRequest = new CreateChannelRequest$Type();
/**
 * Type for protobuf message protocol.chat.v1.CreateChannelResponse
 */
class CreateChannelResponse$Type extends MessageType<CreateChannelResponse> {
    constructor() {
        super("protocol.chat.v1.CreateChannelResponse", [
            { no: 1, name: "channel_id", kind: "scalar", T: 4 /*ScalarType.UINT64*/ }
        ]);
    }
}
export const CreateChannelResponse = new CreateChannelResponse$Type();
/**
 * Type for protobuf message protocol.chat.v1.GetGuildChannelsRequest
 */
class GetGuildChannelsRequest$Type extends MessageType<GetGuildChannelsRequest> {
    constructor() {
        super("protocol.chat.v1.GetGuildChannelsRequest", [
            { no: 1, name: "guild_id", kind: "scalar", T: 4 /*ScalarType.UINT64*/ }
        ]);
    }
}
export const GetGuildChannelsRequest = new GetGuildChannelsRequest$Type();
/**
 * Type for protobuf message protocol.chat.v1.GetGuildChannelsResponse
 */
class GetGuildChannelsResponse$Type extends MessageType<GetGuildChannelsResponse> {
    constructor() {
        super("protocol.chat.v1.GetGuildChannelsResponse", [
            { no: 1, name: "channels", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => GetGuildChannelsResponse_Channel }
        ]);
    }
}
export const GetGuildChannelsResponse = new GetGuildChannelsResponse$Type();
/**
 * Type for protobuf message protocol.chat.v1.GetGuildChannelsResponse.Channel
 */
class GetGuildChannelsResponse_Channel$Type extends MessageType<GetGuildChannelsResponse_Channel> {
    constructor() {
        super("protocol.chat.v1.GetGuildChannelsResponse.Channel", [
            { no: 4, name: "metadata", kind: "message", T: () => Metadata },
            { no: 1, name: "channel_id", kind: "scalar", T: 4 /*ScalarType.UINT64*/ },
            { no: 2, name: "channel_name", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "is_category", kind: "scalar", T: 8 /*ScalarType.BOOL*/ }
        ]);
    }
}
export const GetGuildChannelsResponse_Channel = new GetGuildChannelsResponse_Channel$Type();
/**
 * Type for protobuf message protocol.chat.v1.UpdateChannelInformationRequest
 */
class UpdateChannelInformationRequest$Type extends MessageType<UpdateChannelInformationRequest> {
    constructor() {
        super("protocol.chat.v1.UpdateChannelInformationRequest", [
            { no: 1, name: "guild_id", kind: "scalar", T: 4 /*ScalarType.UINT64*/ },
            { no: 2, name: "channel_id", kind: "scalar", T: 4 /*ScalarType.UINT64*/ },
            { no: 3, name: "new_name", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "new_metadata", kind: "message", T: () => Metadata }
        ]);
    }
}
export const UpdateChannelInformationRequest = new UpdateChannelInformationRequest$Type();
/**
 * Type for protobuf message protocol.chat.v1.UpdateChannelOrderRequest
 */
class UpdateChannelOrderRequest$Type extends MessageType<UpdateChannelOrderRequest> {
    constructor() {
        super("protocol.chat.v1.UpdateChannelOrderRequest", [
            { no: 1, name: "guild_id", kind: "scalar", T: 4 /*ScalarType.UINT64*/ },
            { no: 2, name: "channel_id", kind: "scalar", T: 4 /*ScalarType.UINT64*/ },
            { no: 3, name: "new_position", kind: "message", T: () => ItemPosition }
        ]);
    }
}
export const UpdateChannelOrderRequest = new UpdateChannelOrderRequest$Type();
/**
 * Type for protobuf message protocol.chat.v1.UpdateAllChannelOrderRequest
 */
class UpdateAllChannelOrderRequest$Type extends MessageType<UpdateAllChannelOrderRequest> {
    constructor() {
        super("protocol.chat.v1.UpdateAllChannelOrderRequest", [
            { no: 1, name: "guild_id", kind: "scalar", T: 4 /*ScalarType.UINT64*/ },
            { no: 2, name: "channel_ids", kind: "scalar", repeat: 1 /*RepeatType.PACKED*/, T: 4 /*ScalarType.UINT64*/ }
        ]);
    }
}
export const UpdateAllChannelOrderRequest = new UpdateAllChannelOrderRequest$Type();
/**
 * Type for protobuf message protocol.chat.v1.DeleteChannelRequest
 */
class DeleteChannelRequest$Type extends MessageType<DeleteChannelRequest> {
    constructor() {
        super("protocol.chat.v1.DeleteChannelRequest", [
            { no: 1, name: "guild_id", kind: "scalar", T: 4 /*ScalarType.UINT64*/ },
            { no: 2, name: "channel_id", kind: "scalar", T: 4 /*ScalarType.UINT64*/ }
        ]);
    }
}
export const DeleteChannelRequest = new DeleteChannelRequest$Type();
/**
 * Type for protobuf message protocol.chat.v1.TypingRequest
 */
class TypingRequest$Type extends MessageType<TypingRequest> {
    constructor() {
        super("protocol.chat.v1.TypingRequest", [
            { no: 1, name: "guild_id", kind: "scalar", T: 4 /*ScalarType.UINT64*/ },
            { no: 2, name: "channel_id", kind: "scalar", T: 4 /*ScalarType.UINT64*/ }
        ]);
    }
}
export const TypingRequest = new TypingRequest$Type();
