// @generated by protobuf-ts 1.0.13 with parameters long_type_string,optimize_code_size,generate_dependencies,optimize_code_size
// @generated from protobuf file "harmonytypes/v1/types.proto" (package "protocol.harmonytypes.v1", syntax proto3)
// tslint:disable
import { MessageType } from "@protobuf-ts/runtime";
/**
 * Metadata for methods. These are set in individual RPC endpoints and are
 * typically used by servers.
 *
 * @generated from protobuf message protocol.harmonytypes.v1.HarmonyMethodMetadata
 */
export interface HarmonyMethodMetadata {
    /**
     * whether the method requires authentication.
     *
     * @generated from protobuf field: bool requires_authentication = 1;
     */
    requiresAuthentication: boolean;
    /**
     * whether the method allows federation or not.
     *
     * @generated from protobuf field: bool requires_local = 2;
     */
    requiresLocal: boolean;
    /**
     * the permission nodes required to invoke the method.
     *
     * @generated from protobuf field: string requires_permission_node = 3;
     */
    requiresPermissionNode: string;
}
/**
 * Anything holds anything
 *
 * @generated from protobuf message protocol.harmonytypes.v1.Anything
 */
export interface Anything {
    /**
     * Kind is the kind of the message
     *
     * @generated from protobuf field: string kind = 1;
     */
    kind: string;
    /**
     * Body is the serialised bytes
     *
     * @generated from protobuf field: bytes body = 2;
     */
    body: Uint8Array;
}
/**
 * Metadata type used by many messages.
 *
 * @generated from protobuf message protocol.harmonytypes.v1.Metadata
 */
export interface Metadata {
    /**
     * Kind of this metadata.
     *
     * @generated from protobuf field: string kind = 1;
     */
    kind: string;
    /**
     * A map containing information.
     *
     * @generated from protobuf field: map<string, protocol.harmonytypes.v1.Anything> extension = 2;
     */
    extension: {
        [key: string]: Anything;
    };
}
/**
 * Error type that will be returned by servers.
 *
 * @generated from protobuf message protocol.harmonytypes.v1.Error
 */
export interface Error {
    /**
     * The identifier of this error, can be used as an i18n key.
     *
     * @generated from protobuf field: string identifier = 1;
     */
    identifier: string;
    /**
     * A (usually english) human message for this error.
     *
     * @generated from protobuf field: string human_message = 2;
     */
    humanMessage: string;
    /**
     * More details about this message. Is dependent on the endpoint.
     *
     * @generated from protobuf field: bytes more_details = 3;
     */
    moreDetails: Uint8Array;
}
/**
 * Token that will be used for authentication.
 *
 * @generated from protobuf message protocol.harmonytypes.v1.Token
 */
export interface Token {
    /**
     * Ed25519 signature of the following serialized protobuf data, signed
     * with a private key. Which private key used to sign will be described
     * in the documentation.
     *
     * Has to be 64 bytes long, otherwise it will be rejected.
     *
     * @generated from protobuf field: bytes sig = 1;
     */
    sig: Uint8Array;
    /**
     * Serialized protobuf data.
     * The protobuf type of this serialized data is dependent on the API endpoint
     * used.
     *
     * @generated from protobuf field: bytes data = 2;
     */
    data: Uint8Array;
}
/**
 * A format for text
 *
 * @generated from protobuf message protocol.harmonytypes.v1.Format
 */
export interface Format {
    /**
     * where the format begins to apply to
     *
     * @generated from protobuf field: uint32 start = 1;
     */
    start: number;
    /**
     * how many characters the format is
     *
     * @generated from protobuf field: uint32 length = 2;
     */
    length: number;
    /**
     * @generated from protobuf oneof: format
     */
    format: {
        oneofKind: "bold";
        /**
         * a text format for bold text
         *
         * @generated from protobuf field: protocol.harmonytypes.v1.Format.Bold bold = 3;
         */
        bold: Format_Bold;
    } | {
        oneofKind: "italic";
        /**
         * a text format for italic text
         *
         * @generated from protobuf field: protocol.harmonytypes.v1.Format.Italic italic = 4;
         */
        italic: Format_Italic;
    } | {
        oneofKind: "underline";
        /**
         * a text format for underline text
         *
         * @generated from protobuf field: protocol.harmonytypes.v1.Format.Underline underline = 5;
         */
        underline: Format_Underline;
    } | {
        oneofKind: "monospace";
        /**
         * a text format for monospace text
         *
         * @generated from protobuf field: protocol.harmonytypes.v1.Format.Monospace monospace = 6;
         */
        monospace: Format_Monospace;
    } | {
        oneofKind: "superscript";
        /**
         * a text format for superscript text
         *
         * @generated from protobuf field: protocol.harmonytypes.v1.Format.Superscript superscript = 7;
         */
        superscript: Format_Superscript;
    } | {
        oneofKind: "subscript";
        /**
         * a text format for subscript text
         *
         * @generated from protobuf field: protocol.harmonytypes.v1.Format.Subscript subscript = 8;
         */
        subscript: Format_Subscript;
    } | {
        oneofKind: "codeBlock";
        /**
         * a text format for a codeblock
         *
         * @generated from protobuf field: protocol.harmonytypes.v1.Format.CodeBlock code_block = 9;
         */
        codeBlock: Format_CodeBlock;
    } | {
        oneofKind: "userMention";
        /**
         * a text format for a user mention
         *
         * @generated from protobuf field: protocol.harmonytypes.v1.Format.UserMention user_mention = 10;
         */
        userMention: Format_UserMention;
    } | {
        oneofKind: "roleMention";
        /**
         * a text format for a role mention
         *
         * @generated from protobuf field: protocol.harmonytypes.v1.Format.RoleMention role_mention = 11;
         */
        roleMention: Format_RoleMention;
    } | {
        oneofKind: "channelMention";
        /**
         * a text format for a channel mention
         *
         * @generated from protobuf field: protocol.harmonytypes.v1.Format.ChannelMention channel_mention = 12;
         */
        channelMention: Format_ChannelMention;
    } | {
        oneofKind: "guildMention";
        /**
         * a text format for a guild mention
         *
         * @generated from protobuf field: protocol.harmonytypes.v1.Format.GuildMention guild_mention = 13;
         */
        guildMention: Format_GuildMention;
    } | {
        oneofKind: "emoji";
        /**
         * a text format for an emoji
         *
         * @generated from protobuf field: protocol.harmonytypes.v1.Format.Emoji emoji = 14;
         */
        emoji: Format_Emoji;
    } | {
        oneofKind: "color";
        /**
         * a text format for coloured text
         *
         * @generated from protobuf field: protocol.harmonytypes.v1.Format.Color color = 16;
         */
        color: Format_Color;
    } | {
        oneofKind: undefined;
    };
}
/**
 * Bold text
 *
 * @generated from protobuf message protocol.harmonytypes.v1.Format.Bold
 */
export interface Format_Bold {
}
/**
 * Italic text
 *
 * @generated from protobuf message protocol.harmonytypes.v1.Format.Italic
 */
export interface Format_Italic {
}
/**
 * Underlined text
 *
 * @generated from protobuf message protocol.harmonytypes.v1.Format.Underline
 */
export interface Format_Underline {
}
/**
 * Monospace text
 *
 * @generated from protobuf message protocol.harmonytypes.v1.Format.Monospace
 */
export interface Format_Monospace {
}
/**
 * Superscript text
 *
 * @generated from protobuf message protocol.harmonytypes.v1.Format.Superscript
 */
export interface Format_Superscript {
}
/**
 * Subscript text
 *
 * @generated from protobuf message protocol.harmonytypes.v1.Format.Subscript
 */
export interface Format_Subscript {
}
/**
 * A larger codeblock, with a programming language specified
 * Clients should ideally not bound the width of codeblock messages,
 * possibly scrolling the codeblock horizontally separately from the
 * rest of the message
 *
 * @generated from protobuf message protocol.harmonytypes.v1.Format.CodeBlock
 */
export interface Format_CodeBlock {
    /**
     * programming language of the code block
     *
     * @generated from protobuf field: string language = 1;
     */
    language: string;
}
/**
 * Mention of a user (on the current homeserver)
 *
 * @generated from protobuf message protocol.harmonytypes.v1.Format.UserMention
 */
export interface Format_UserMention {
    /**
     * user_id of the user being mentioned
     *
     * @generated from protobuf field: uint64 user_id = 1;
     */
    userId: string;
}
/**
 * Mention of a role (on the current guild)
 *
 * @generated from protobuf message protocol.harmonytypes.v1.Format.RoleMention
 */
export interface Format_RoleMention {
    /**
     * the role being mentioned
     *
     * @generated from protobuf field: uint64 role_id = 1;
     */
    roleId: string;
}
/**
 * Mention of a channel (on the current guild)
 *
 * @generated from protobuf message protocol.harmonytypes.v1.Format.ChannelMention
 */
export interface Format_ChannelMention {
    /**
     * the channel being mentioned
     *
     * @generated from protobuf field: uint64 channel_id = 1;
     */
    channelId: string;
}
/**
 * Mention of a guild
 *
 * @generated from protobuf message protocol.harmonytypes.v1.Format.GuildMention
 */
export interface Format_GuildMention {
    /**
     * the guild being mentioned
     *
     * @generated from protobuf field: uint64 guild_id = 1;
     */
    guildId: string;
    /**
     * which homeserver it belongs to
     *
     * @generated from protobuf field: string homeserver = 2;
     */
    homeserver: string;
}
/**
 * An emoji
 *
 * @generated from protobuf message protocol.harmonytypes.v1.Format.Emoji
 */
export interface Format_Emoji {
    /**
     * The HMC URL of the emoji
     *
     * @generated from protobuf field: string image_hmc = 1;
     */
    imageHmc: string;
    /**
     * The ID of the emoji pack the emoji is from
     *
     * @generated from protobuf field: uint64 pack_id = 2;
     */
    packId: string;
}
/**
 * Colour modification
 *
 * @generated from protobuf message protocol.harmonytypes.v1.Format.Color
 */
export interface Format_Color {
    /**
     * The kind of colour modification to apply
     *
     * @generated from protobuf field: protocol.harmonytypes.v1.Format.Color.Kind kind = 1;
     */
    kind: Format_Color_Kind;
}
/**
 * The kind of colour modification to apply
 *
 * @generated from protobuf enum protocol.harmonytypes.v1.Format.Color.Kind
 */
export enum Format_Color_Kind {
    /**
     * Dimmed colour
     *
     * @generated from protobuf enum value: KIND_DIM_UNSPECIFIED = 0;
     */
    DIM_UNSPECIFIED = 0,
    /**
     * Brightened colour
     *
     * @generated from protobuf enum value: KIND_BRIGHT = 1;
     */
    BRIGHT = 1,
    /**
     * Negative colour (usually red)
     *
     * @generated from protobuf enum value: KIND_NEGATIVE = 2;
     */
    NEGATIVE = 2,
    /**
     * Positive colour (usually green)
     *
     * @generated from protobuf enum value: KIND_POSITIVE = 3;
     */
    POSITIVE = 3,
    /**
     * Informational colour (usually blue)
     *
     * @generated from protobuf enum value: KIND_INFO = 4;
     */
    INFO = 4,
    /**
     * Warning colour (usually yellow-orange)
     *
     * @generated from protobuf enum value: KIND_WARNING = 5;
     */
    WARNING = 5
}
/**
 * An empty message
 *
 * @generated from protobuf message protocol.harmonytypes.v1.Empty
 */
export interface Empty {
}
/**
 * Formatted text
 *
 * @generated from protobuf message protocol.harmonytypes.v1.FormattedText
 */
export interface FormattedText {
    /**
     * The textual content of a message
     *
     * @generated from protobuf field: string text = 1;
     */
    text: string;
    /**
     * The formats for a message
     *
     * @generated from protobuf field: repeated protocol.harmonytypes.v1.Format format = 2;
     */
    format: Format[];
}
/**
 * An object representing an item position between two other items.
 *
 * @generated from protobuf message protocol.harmonytypes.v1.ItemPosition
 */
export interface ItemPosition {
    /**
     * @generated from protobuf oneof: position
     */
    position: {
        oneofKind: "top";
        /**
         * The item is at the top.
         *
         * @generated from protobuf field: protocol.harmonytypes.v1.ItemPosition.Top top = 1;
         */
        top: ItemPosition_Top;
    } | {
        oneofKind: "between";
        /**
         * The item is in between two other items.
         *
         * @generated from protobuf field: protocol.harmonytypes.v1.ItemPosition.Between between = 2;
         */
        between: ItemPosition_Between;
    } | {
        oneofKind: "bottom";
        /**
         * The item is at the bottom.
         *
         * @generated from protobuf field: protocol.harmonytypes.v1.ItemPosition.Bottom bottom = 3;
         */
        bottom: ItemPosition_Bottom;
    } | {
        oneofKind: undefined;
    };
}
/**
 * An object that represents the top of an ordered list.
 *
 * @generated from protobuf message protocol.harmonytypes.v1.ItemPosition.Top
 */
export interface ItemPosition_Top {
    /**
     * The ID of the next item.
     *
     * @generated from protobuf field: uint64 next_id = 1;
     */
    nextId: string;
}
/**
 * An object that represents a place between two items in an ordered list.
 *
 * @generated from protobuf message protocol.harmonytypes.v1.ItemPosition.Between
 */
export interface ItemPosition_Between {
    /**
     * The ID of the previous item.
     *
     * @generated from protobuf field: uint64 previous_id = 1;
     */
    previousId: string;
    /**
     * The ID of the next item.
     *
     * @generated from protobuf field: uint64 next_id = 2;
     */
    nextId: string;
}
/**
 * An object that represents the bottom of an ordered list.
 *
 * @generated from protobuf message protocol.harmonytypes.v1.ItemPosition.Bottom
 */
export interface ItemPosition_Bottom {
    /**
     * The ID of the previous item.
     *
     * @generated from protobuf field: uint64 previous_id = 1;
     */
    previousId: string;
}
/**
 * Type for protobuf message protocol.harmonytypes.v1.HarmonyMethodMetadata
 */
class HarmonyMethodMetadata$Type extends MessageType<HarmonyMethodMetadata> {
    constructor() {
        super("protocol.harmonytypes.v1.HarmonyMethodMetadata", [
            { no: 1, name: "requires_authentication", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 2, name: "requires_local", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 3, name: "requires_permission_node", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
}
export const HarmonyMethodMetadata = new HarmonyMethodMetadata$Type();
/**
 * Type for protobuf message protocol.harmonytypes.v1.Anything
 */
class Anything$Type extends MessageType<Anything> {
    constructor() {
        super("protocol.harmonytypes.v1.Anything", [
            { no: 1, name: "kind", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "body", kind: "scalar", T: 12 /*ScalarType.BYTES*/ }
        ]);
    }
}
export const Anything = new Anything$Type();
/**
 * Type for protobuf message protocol.harmonytypes.v1.Metadata
 */
class Metadata$Type extends MessageType<Metadata> {
    constructor() {
        super("protocol.harmonytypes.v1.Metadata", [
            { no: 1, name: "kind", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "extension", kind: "map", K: 9 /*ScalarType.STRING*/, V: { kind: "message", T: () => Anything } }
        ]);
    }
}
export const Metadata = new Metadata$Type();
/**
 * Type for protobuf message protocol.harmonytypes.v1.Error
 */
class Error$Type extends MessageType<Error> {
    constructor() {
        super("protocol.harmonytypes.v1.Error", [
            { no: 1, name: "identifier", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "human_message", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "more_details", kind: "scalar", T: 12 /*ScalarType.BYTES*/ }
        ]);
    }
}
export const Error = new Error$Type();
/**
 * Type for protobuf message protocol.harmonytypes.v1.Token
 */
class Token$Type extends MessageType<Token> {
    constructor() {
        super("protocol.harmonytypes.v1.Token", [
            { no: 1, name: "sig", kind: "scalar", T: 12 /*ScalarType.BYTES*/ },
            { no: 2, name: "data", kind: "scalar", T: 12 /*ScalarType.BYTES*/ }
        ]);
    }
}
export const Token = new Token$Type();
/**
 * Type for protobuf message protocol.harmonytypes.v1.Format
 */
class Format$Type extends MessageType<Format> {
    constructor() {
        super("protocol.harmonytypes.v1.Format", [
            { no: 1, name: "start", kind: "scalar", T: 13 /*ScalarType.UINT32*/ },
            { no: 2, name: "length", kind: "scalar", T: 13 /*ScalarType.UINT32*/ },
            { no: 3, name: "bold", kind: "message", oneof: "format", T: () => Format_Bold },
            { no: 4, name: "italic", kind: "message", oneof: "format", T: () => Format_Italic },
            { no: 5, name: "underline", kind: "message", oneof: "format", T: () => Format_Underline },
            { no: 6, name: "monospace", kind: "message", oneof: "format", T: () => Format_Monospace },
            { no: 7, name: "superscript", kind: "message", oneof: "format", T: () => Format_Superscript },
            { no: 8, name: "subscript", kind: "message", oneof: "format", T: () => Format_Subscript },
            { no: 9, name: "code_block", kind: "message", oneof: "format", T: () => Format_CodeBlock },
            { no: 10, name: "user_mention", kind: "message", oneof: "format", T: () => Format_UserMention },
            { no: 11, name: "role_mention", kind: "message", oneof: "format", T: () => Format_RoleMention },
            { no: 12, name: "channel_mention", kind: "message", oneof: "format", T: () => Format_ChannelMention },
            { no: 13, name: "guild_mention", kind: "message", oneof: "format", T: () => Format_GuildMention },
            { no: 14, name: "emoji", kind: "message", oneof: "format", T: () => Format_Emoji },
            { no: 16, name: "color", kind: "message", oneof: "format", T: () => Format_Color }
        ]);
    }
}
export const Format = new Format$Type();
/**
 * Type for protobuf message protocol.harmonytypes.v1.Format.Bold
 */
class Format_Bold$Type extends MessageType<Format_Bold> {
    constructor() {
        super("protocol.harmonytypes.v1.Format.Bold", []);
    }
}
export const Format_Bold = new Format_Bold$Type();
/**
 * Type for protobuf message protocol.harmonytypes.v1.Format.Italic
 */
class Format_Italic$Type extends MessageType<Format_Italic> {
    constructor() {
        super("protocol.harmonytypes.v1.Format.Italic", []);
    }
}
export const Format_Italic = new Format_Italic$Type();
/**
 * Type for protobuf message protocol.harmonytypes.v1.Format.Underline
 */
class Format_Underline$Type extends MessageType<Format_Underline> {
    constructor() {
        super("protocol.harmonytypes.v1.Format.Underline", []);
    }
}
export const Format_Underline = new Format_Underline$Type();
/**
 * Type for protobuf message protocol.harmonytypes.v1.Format.Monospace
 */
class Format_Monospace$Type extends MessageType<Format_Monospace> {
    constructor() {
        super("protocol.harmonytypes.v1.Format.Monospace", []);
    }
}
export const Format_Monospace = new Format_Monospace$Type();
/**
 * Type for protobuf message protocol.harmonytypes.v1.Format.Superscript
 */
class Format_Superscript$Type extends MessageType<Format_Superscript> {
    constructor() {
        super("protocol.harmonytypes.v1.Format.Superscript", []);
    }
}
export const Format_Superscript = new Format_Superscript$Type();
/**
 * Type for protobuf message protocol.harmonytypes.v1.Format.Subscript
 */
class Format_Subscript$Type extends MessageType<Format_Subscript> {
    constructor() {
        super("protocol.harmonytypes.v1.Format.Subscript", []);
    }
}
export const Format_Subscript = new Format_Subscript$Type();
/**
 * Type for protobuf message protocol.harmonytypes.v1.Format.CodeBlock
 */
class Format_CodeBlock$Type extends MessageType<Format_CodeBlock> {
    constructor() {
        super("protocol.harmonytypes.v1.Format.CodeBlock", [
            { no: 1, name: "language", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
}
export const Format_CodeBlock = new Format_CodeBlock$Type();
/**
 * Type for protobuf message protocol.harmonytypes.v1.Format.UserMention
 */
class Format_UserMention$Type extends MessageType<Format_UserMention> {
    constructor() {
        super("protocol.harmonytypes.v1.Format.UserMention", [
            { no: 1, name: "user_id", kind: "scalar", T: 4 /*ScalarType.UINT64*/ }
        ]);
    }
}
export const Format_UserMention = new Format_UserMention$Type();
/**
 * Type for protobuf message protocol.harmonytypes.v1.Format.RoleMention
 */
class Format_RoleMention$Type extends MessageType<Format_RoleMention> {
    constructor() {
        super("protocol.harmonytypes.v1.Format.RoleMention", [
            { no: 1, name: "role_id", kind: "scalar", T: 4 /*ScalarType.UINT64*/ }
        ]);
    }
}
export const Format_RoleMention = new Format_RoleMention$Type();
/**
 * Type for protobuf message protocol.harmonytypes.v1.Format.ChannelMention
 */
class Format_ChannelMention$Type extends MessageType<Format_ChannelMention> {
    constructor() {
        super("protocol.harmonytypes.v1.Format.ChannelMention", [
            { no: 1, name: "channel_id", kind: "scalar", T: 4 /*ScalarType.UINT64*/ }
        ]);
    }
}
export const Format_ChannelMention = new Format_ChannelMention$Type();
/**
 * Type for protobuf message protocol.harmonytypes.v1.Format.GuildMention
 */
class Format_GuildMention$Type extends MessageType<Format_GuildMention> {
    constructor() {
        super("protocol.harmonytypes.v1.Format.GuildMention", [
            { no: 1, name: "guild_id", kind: "scalar", T: 4 /*ScalarType.UINT64*/ },
            { no: 2, name: "homeserver", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
}
export const Format_GuildMention = new Format_GuildMention$Type();
/**
 * Type for protobuf message protocol.harmonytypes.v1.Format.Emoji
 */
class Format_Emoji$Type extends MessageType<Format_Emoji> {
    constructor() {
        super("protocol.harmonytypes.v1.Format.Emoji", [
            { no: 1, name: "image_hmc", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "pack_id", kind: "scalar", T: 4 /*ScalarType.UINT64*/ }
        ]);
    }
}
export const Format_Emoji = new Format_Emoji$Type();
/**
 * Type for protobuf message protocol.harmonytypes.v1.Format.Color
 */
class Format_Color$Type extends MessageType<Format_Color> {
    constructor() {
        super("protocol.harmonytypes.v1.Format.Color", [
            { no: 1, name: "kind", kind: "enum", T: () => ["protocol.harmonytypes.v1.Format.Color.Kind", Format_Color_Kind, "KIND_"] }
        ]);
    }
}
export const Format_Color = new Format_Color$Type();
/**
 * Type for protobuf message protocol.harmonytypes.v1.Empty
 */
class Empty$Type extends MessageType<Empty> {
    constructor() {
        super("protocol.harmonytypes.v1.Empty", []);
    }
}
export const Empty = new Empty$Type();
/**
 * Type for protobuf message protocol.harmonytypes.v1.FormattedText
 */
class FormattedText$Type extends MessageType<FormattedText> {
    constructor() {
        super("protocol.harmonytypes.v1.FormattedText", [
            { no: 1, name: "text", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "format", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => Format }
        ]);
    }
}
export const FormattedText = new FormattedText$Type();
/**
 * Type for protobuf message protocol.harmonytypes.v1.ItemPosition
 */
class ItemPosition$Type extends MessageType<ItemPosition> {
    constructor() {
        super("protocol.harmonytypes.v1.ItemPosition", [
            { no: 1, name: "top", kind: "message", oneof: "position", T: () => ItemPosition_Top },
            { no: 2, name: "between", kind: "message", oneof: "position", T: () => ItemPosition_Between },
            { no: 3, name: "bottom", kind: "message", oneof: "position", T: () => ItemPosition_Bottom }
        ]);
    }
}
export const ItemPosition = new ItemPosition$Type();
/**
 * Type for protobuf message protocol.harmonytypes.v1.ItemPosition.Top
 */
class ItemPosition_Top$Type extends MessageType<ItemPosition_Top> {
    constructor() {
        super("protocol.harmonytypes.v1.ItemPosition.Top", [
            { no: 1, name: "next_id", kind: "scalar", T: 4 /*ScalarType.UINT64*/ }
        ]);
    }
}
export const ItemPosition_Top = new ItemPosition_Top$Type();
/**
 * Type for protobuf message protocol.harmonytypes.v1.ItemPosition.Between
 */
class ItemPosition_Between$Type extends MessageType<ItemPosition_Between> {
    constructor() {
        super("protocol.harmonytypes.v1.ItemPosition.Between", [
            { no: 1, name: "previous_id", kind: "scalar", T: 4 /*ScalarType.UINT64*/ },
            { no: 2, name: "next_id", kind: "scalar", T: 4 /*ScalarType.UINT64*/ }
        ]);
    }
}
export const ItemPosition_Between = new ItemPosition_Between$Type();
/**
 * Type for protobuf message protocol.harmonytypes.v1.ItemPosition.Bottom
 */
class ItemPosition_Bottom$Type extends MessageType<ItemPosition_Bottom> {
    constructor() {
        super("protocol.harmonytypes.v1.ItemPosition.Bottom", [
            { no: 1, name: "previous_id", kind: "scalar", T: 4 /*ScalarType.UINT64*/ }
        ]);
    }
}
export const ItemPosition_Bottom = new ItemPosition_Bottom$Type();
