// source: chat/v1/messages.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var harmonytypes_v1_types_pb = require('../../harmonytypes/v1/types_pb.js');
goog.object.extend(proto, harmonytypes_v1_types_pb);
goog.exportSymbol('proto.protocol.chat.v1.DeleteMessageRequest', null, global);
goog.exportSymbol('proto.protocol.chat.v1.GetChannelMessagesRequest', null, global);
goog.exportSymbol('proto.protocol.chat.v1.GetChannelMessagesResponse', null, global);
goog.exportSymbol('proto.protocol.chat.v1.GetMessageRequest', null, global);
goog.exportSymbol('proto.protocol.chat.v1.GetMessageResponse', null, global);
goog.exportSymbol('proto.protocol.chat.v1.SendMessageRequest', null, global);
goog.exportSymbol('proto.protocol.chat.v1.SendMessageResponse', null, global);
goog.exportSymbol('proto.protocol.chat.v1.TriggerActionRequest', null, global);
goog.exportSymbol('proto.protocol.chat.v1.UpdateMessageRequest', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protocol.chat.v1.GetChannelMessagesRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protocol.chat.v1.GetChannelMessagesRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protocol.chat.v1.GetChannelMessagesRequest.displayName = 'proto.protocol.chat.v1.GetChannelMessagesRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protocol.chat.v1.GetChannelMessagesResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.protocol.chat.v1.GetChannelMessagesResponse.repeatedFields_, null);
};
goog.inherits(proto.protocol.chat.v1.GetChannelMessagesResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protocol.chat.v1.GetChannelMessagesResponse.displayName = 'proto.protocol.chat.v1.GetChannelMessagesResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protocol.chat.v1.GetMessageRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protocol.chat.v1.GetMessageRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protocol.chat.v1.GetMessageRequest.displayName = 'proto.protocol.chat.v1.GetMessageRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protocol.chat.v1.GetMessageResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protocol.chat.v1.GetMessageResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protocol.chat.v1.GetMessageResponse.displayName = 'proto.protocol.chat.v1.GetMessageResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protocol.chat.v1.UpdateMessageRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.protocol.chat.v1.UpdateMessageRequest.repeatedFields_, null);
};
goog.inherits(proto.protocol.chat.v1.UpdateMessageRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protocol.chat.v1.UpdateMessageRequest.displayName = 'proto.protocol.chat.v1.UpdateMessageRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protocol.chat.v1.DeleteMessageRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protocol.chat.v1.DeleteMessageRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protocol.chat.v1.DeleteMessageRequest.displayName = 'proto.protocol.chat.v1.DeleteMessageRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protocol.chat.v1.TriggerActionRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protocol.chat.v1.TriggerActionRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protocol.chat.v1.TriggerActionRequest.displayName = 'proto.protocol.chat.v1.TriggerActionRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protocol.chat.v1.SendMessageRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.protocol.chat.v1.SendMessageRequest.repeatedFields_, null);
};
goog.inherits(proto.protocol.chat.v1.SendMessageRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protocol.chat.v1.SendMessageRequest.displayName = 'proto.protocol.chat.v1.SendMessageRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protocol.chat.v1.SendMessageResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protocol.chat.v1.SendMessageResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protocol.chat.v1.SendMessageResponse.displayName = 'proto.protocol.chat.v1.SendMessageResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protocol.chat.v1.GetChannelMessagesRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.protocol.chat.v1.GetChannelMessagesRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protocol.chat.v1.GetChannelMessagesRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protocol.chat.v1.GetChannelMessagesRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    guildId: jspb.Message.getFieldWithDefault(msg, 1, "0"),
    channelId: jspb.Message.getFieldWithDefault(msg, 2, "0"),
    beforeMessage: jspb.Message.getFieldWithDefault(msg, 3, "0")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protocol.chat.v1.GetChannelMessagesRequest}
 */
proto.protocol.chat.v1.GetChannelMessagesRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protocol.chat.v1.GetChannelMessagesRequest;
  return proto.protocol.chat.v1.GetChannelMessagesRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protocol.chat.v1.GetChannelMessagesRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protocol.chat.v1.GetChannelMessagesRequest}
 */
proto.protocol.chat.v1.GetChannelMessagesRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readUint64String());
      msg.setGuildId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readUint64String());
      msg.setChannelId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readUint64String());
      msg.setBeforeMessage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protocol.chat.v1.GetChannelMessagesRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protocol.chat.v1.GetChannelMessagesRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protocol.chat.v1.GetChannelMessagesRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protocol.chat.v1.GetChannelMessagesRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGuildId();
  if (parseInt(f, 10) !== 0) {
    writer.writeUint64String(
      1,
      f
    );
  }
  f = message.getChannelId();
  if (parseInt(f, 10) !== 0) {
    writer.writeUint64String(
      2,
      f
    );
  }
  f = message.getBeforeMessage();
  if (parseInt(f, 10) !== 0) {
    writer.writeUint64String(
      3,
      f
    );
  }
};


/**
 * optional uint64 guild_id = 1;
 * @return {string}
 */
proto.protocol.chat.v1.GetChannelMessagesRequest.prototype.getGuildId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, "0"));
};


/**
 * @param {string} value
 * @return {!proto.protocol.chat.v1.GetChannelMessagesRequest} returns this
 */
proto.protocol.chat.v1.GetChannelMessagesRequest.prototype.setGuildId = function(value) {
  return jspb.Message.setProto3StringIntField(this, 1, value);
};


/**
 * optional uint64 channel_id = 2;
 * @return {string}
 */
proto.protocol.chat.v1.GetChannelMessagesRequest.prototype.getChannelId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, "0"));
};


/**
 * @param {string} value
 * @return {!proto.protocol.chat.v1.GetChannelMessagesRequest} returns this
 */
proto.protocol.chat.v1.GetChannelMessagesRequest.prototype.setChannelId = function(value) {
  return jspb.Message.setProto3StringIntField(this, 2, value);
};


/**
 * optional uint64 before_message = 3;
 * @return {string}
 */
proto.protocol.chat.v1.GetChannelMessagesRequest.prototype.getBeforeMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, "0"));
};


/**
 * @param {string} value
 * @return {!proto.protocol.chat.v1.GetChannelMessagesRequest} returns this
 */
proto.protocol.chat.v1.GetChannelMessagesRequest.prototype.setBeforeMessage = function(value) {
  return jspb.Message.setProto3StringIntField(this, 3, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.protocol.chat.v1.GetChannelMessagesResponse.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protocol.chat.v1.GetChannelMessagesResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.protocol.chat.v1.GetChannelMessagesResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protocol.chat.v1.GetChannelMessagesResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protocol.chat.v1.GetChannelMessagesResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    reachedTop: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    messagesList: jspb.Message.toObjectList(msg.getMessagesList(),
    harmonytypes_v1_types_pb.Message.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protocol.chat.v1.GetChannelMessagesResponse}
 */
proto.protocol.chat.v1.GetChannelMessagesResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protocol.chat.v1.GetChannelMessagesResponse;
  return proto.protocol.chat.v1.GetChannelMessagesResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protocol.chat.v1.GetChannelMessagesResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protocol.chat.v1.GetChannelMessagesResponse}
 */
proto.protocol.chat.v1.GetChannelMessagesResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setReachedTop(value);
      break;
    case 2:
      var value = new harmonytypes_v1_types_pb.Message;
      reader.readMessage(value,harmonytypes_v1_types_pb.Message.deserializeBinaryFromReader);
      msg.addMessages(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protocol.chat.v1.GetChannelMessagesResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protocol.chat.v1.GetChannelMessagesResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protocol.chat.v1.GetChannelMessagesResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protocol.chat.v1.GetChannelMessagesResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getReachedTop();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getMessagesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      harmonytypes_v1_types_pb.Message.serializeBinaryToWriter
    );
  }
};


/**
 * optional bool reached_top = 1;
 * @return {boolean}
 */
proto.protocol.chat.v1.GetChannelMessagesResponse.prototype.getReachedTop = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.protocol.chat.v1.GetChannelMessagesResponse} returns this
 */
proto.protocol.chat.v1.GetChannelMessagesResponse.prototype.setReachedTop = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * repeated protocol.harmonytypes.v1.Message messages = 2;
 * @return {!Array<!proto.protocol.harmonytypes.v1.Message>}
 */
proto.protocol.chat.v1.GetChannelMessagesResponse.prototype.getMessagesList = function() {
  return /** @type{!Array<!proto.protocol.harmonytypes.v1.Message>} */ (
    jspb.Message.getRepeatedWrapperField(this, harmonytypes_v1_types_pb.Message, 2));
};


/**
 * @param {!Array<!proto.protocol.harmonytypes.v1.Message>} value
 * @return {!proto.protocol.chat.v1.GetChannelMessagesResponse} returns this
*/
proto.protocol.chat.v1.GetChannelMessagesResponse.prototype.setMessagesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.protocol.harmonytypes.v1.Message=} opt_value
 * @param {number=} opt_index
 * @return {!proto.protocol.harmonytypes.v1.Message}
 */
proto.protocol.chat.v1.GetChannelMessagesResponse.prototype.addMessages = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.protocol.harmonytypes.v1.Message, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.protocol.chat.v1.GetChannelMessagesResponse} returns this
 */
proto.protocol.chat.v1.GetChannelMessagesResponse.prototype.clearMessagesList = function() {
  return this.setMessagesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protocol.chat.v1.GetMessageRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.protocol.chat.v1.GetMessageRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protocol.chat.v1.GetMessageRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protocol.chat.v1.GetMessageRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    guildId: jspb.Message.getFieldWithDefault(msg, 1, "0"),
    channelId: jspb.Message.getFieldWithDefault(msg, 2, "0"),
    messageId: jspb.Message.getFieldWithDefault(msg, 3, "0")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protocol.chat.v1.GetMessageRequest}
 */
proto.protocol.chat.v1.GetMessageRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protocol.chat.v1.GetMessageRequest;
  return proto.protocol.chat.v1.GetMessageRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protocol.chat.v1.GetMessageRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protocol.chat.v1.GetMessageRequest}
 */
proto.protocol.chat.v1.GetMessageRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readUint64String());
      msg.setGuildId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readUint64String());
      msg.setChannelId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readUint64String());
      msg.setMessageId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protocol.chat.v1.GetMessageRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protocol.chat.v1.GetMessageRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protocol.chat.v1.GetMessageRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protocol.chat.v1.GetMessageRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGuildId();
  if (parseInt(f, 10) !== 0) {
    writer.writeUint64String(
      1,
      f
    );
  }
  f = message.getChannelId();
  if (parseInt(f, 10) !== 0) {
    writer.writeUint64String(
      2,
      f
    );
  }
  f = message.getMessageId();
  if (parseInt(f, 10) !== 0) {
    writer.writeUint64String(
      3,
      f
    );
  }
};


/**
 * optional uint64 guild_id = 1;
 * @return {string}
 */
proto.protocol.chat.v1.GetMessageRequest.prototype.getGuildId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, "0"));
};


/**
 * @param {string} value
 * @return {!proto.protocol.chat.v1.GetMessageRequest} returns this
 */
proto.protocol.chat.v1.GetMessageRequest.prototype.setGuildId = function(value) {
  return jspb.Message.setProto3StringIntField(this, 1, value);
};


/**
 * optional uint64 channel_id = 2;
 * @return {string}
 */
proto.protocol.chat.v1.GetMessageRequest.prototype.getChannelId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, "0"));
};


/**
 * @param {string} value
 * @return {!proto.protocol.chat.v1.GetMessageRequest} returns this
 */
proto.protocol.chat.v1.GetMessageRequest.prototype.setChannelId = function(value) {
  return jspb.Message.setProto3StringIntField(this, 2, value);
};


/**
 * optional uint64 message_id = 3;
 * @return {string}
 */
proto.protocol.chat.v1.GetMessageRequest.prototype.getMessageId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, "0"));
};


/**
 * @param {string} value
 * @return {!proto.protocol.chat.v1.GetMessageRequest} returns this
 */
proto.protocol.chat.v1.GetMessageRequest.prototype.setMessageId = function(value) {
  return jspb.Message.setProto3StringIntField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protocol.chat.v1.GetMessageResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.protocol.chat.v1.GetMessageResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protocol.chat.v1.GetMessageResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protocol.chat.v1.GetMessageResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    message: (f = msg.getMessage()) && harmonytypes_v1_types_pb.Message.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protocol.chat.v1.GetMessageResponse}
 */
proto.protocol.chat.v1.GetMessageResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protocol.chat.v1.GetMessageResponse;
  return proto.protocol.chat.v1.GetMessageResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protocol.chat.v1.GetMessageResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protocol.chat.v1.GetMessageResponse}
 */
proto.protocol.chat.v1.GetMessageResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new harmonytypes_v1_types_pb.Message;
      reader.readMessage(value,harmonytypes_v1_types_pb.Message.deserializeBinaryFromReader);
      msg.setMessage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protocol.chat.v1.GetMessageResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protocol.chat.v1.GetMessageResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protocol.chat.v1.GetMessageResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protocol.chat.v1.GetMessageResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMessage();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      harmonytypes_v1_types_pb.Message.serializeBinaryToWriter
    );
  }
};


/**
 * optional protocol.harmonytypes.v1.Message message = 1;
 * @return {?proto.protocol.harmonytypes.v1.Message}
 */
proto.protocol.chat.v1.GetMessageResponse.prototype.getMessage = function() {
  return /** @type{?proto.protocol.harmonytypes.v1.Message} */ (
    jspb.Message.getWrapperField(this, harmonytypes_v1_types_pb.Message, 1));
};


/**
 * @param {?proto.protocol.harmonytypes.v1.Message|undefined} value
 * @return {!proto.protocol.chat.v1.GetMessageResponse} returns this
*/
proto.protocol.chat.v1.GetMessageResponse.prototype.setMessage = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protocol.chat.v1.GetMessageResponse} returns this
 */
proto.protocol.chat.v1.GetMessageResponse.prototype.clearMessage = function() {
  return this.setMessage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protocol.chat.v1.GetMessageResponse.prototype.hasMessage = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.protocol.chat.v1.UpdateMessageRequest.repeatedFields_ = [6,8,10];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protocol.chat.v1.UpdateMessageRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.protocol.chat.v1.UpdateMessageRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protocol.chat.v1.UpdateMessageRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protocol.chat.v1.UpdateMessageRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    guildId: jspb.Message.getFieldWithDefault(msg, 1, "0"),
    channelId: jspb.Message.getFieldWithDefault(msg, 2, "0"),
    messageId: jspb.Message.getFieldWithDefault(msg, 3, "0"),
    content: jspb.Message.getFieldWithDefault(msg, 4, ""),
    updateContent: jspb.Message.getBooleanFieldWithDefault(msg, 5, false),
    embedsList: jspb.Message.toObjectList(msg.getEmbedsList(),
    harmonytypes_v1_types_pb.Embed.toObject, includeInstance),
    updateEmbeds: jspb.Message.getBooleanFieldWithDefault(msg, 7, false),
    actionsList: jspb.Message.toObjectList(msg.getActionsList(),
    harmonytypes_v1_types_pb.Action.toObject, includeInstance),
    updateActions: jspb.Message.getBooleanFieldWithDefault(msg, 9, false),
    attachmentsList: (f = jspb.Message.getRepeatedField(msg, 10)) == null ? undefined : f,
    updateAttachments: jspb.Message.getBooleanFieldWithDefault(msg, 11, false),
    overrides: (f = msg.getOverrides()) && harmonytypes_v1_types_pb.Override.toObject(includeInstance, f),
    updateOverrides: jspb.Message.getBooleanFieldWithDefault(msg, 13, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protocol.chat.v1.UpdateMessageRequest}
 */
proto.protocol.chat.v1.UpdateMessageRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protocol.chat.v1.UpdateMessageRequest;
  return proto.protocol.chat.v1.UpdateMessageRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protocol.chat.v1.UpdateMessageRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protocol.chat.v1.UpdateMessageRequest}
 */
proto.protocol.chat.v1.UpdateMessageRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readUint64String());
      msg.setGuildId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readUint64String());
      msg.setChannelId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readUint64String());
      msg.setMessageId(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setContent(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setUpdateContent(value);
      break;
    case 6:
      var value = new harmonytypes_v1_types_pb.Embed;
      reader.readMessage(value,harmonytypes_v1_types_pb.Embed.deserializeBinaryFromReader);
      msg.addEmbeds(value);
      break;
    case 7:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setUpdateEmbeds(value);
      break;
    case 8:
      var value = new harmonytypes_v1_types_pb.Action;
      reader.readMessage(value,harmonytypes_v1_types_pb.Action.deserializeBinaryFromReader);
      msg.addActions(value);
      break;
    case 9:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setUpdateActions(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.addAttachments(value);
      break;
    case 11:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setUpdateAttachments(value);
      break;
    case 12:
      var value = new harmonytypes_v1_types_pb.Override;
      reader.readMessage(value,harmonytypes_v1_types_pb.Override.deserializeBinaryFromReader);
      msg.setOverrides(value);
      break;
    case 13:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setUpdateOverrides(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protocol.chat.v1.UpdateMessageRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protocol.chat.v1.UpdateMessageRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protocol.chat.v1.UpdateMessageRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protocol.chat.v1.UpdateMessageRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGuildId();
  if (parseInt(f, 10) !== 0) {
    writer.writeUint64String(
      1,
      f
    );
  }
  f = message.getChannelId();
  if (parseInt(f, 10) !== 0) {
    writer.writeUint64String(
      2,
      f
    );
  }
  f = message.getMessageId();
  if (parseInt(f, 10) !== 0) {
    writer.writeUint64String(
      3,
      f
    );
  }
  f = message.getContent();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getUpdateContent();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
  f = message.getEmbedsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      6,
      f,
      harmonytypes_v1_types_pb.Embed.serializeBinaryToWriter
    );
  }
  f = message.getUpdateEmbeds();
  if (f) {
    writer.writeBool(
      7,
      f
    );
  }
  f = message.getActionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      8,
      f,
      harmonytypes_v1_types_pb.Action.serializeBinaryToWriter
    );
  }
  f = message.getUpdateActions();
  if (f) {
    writer.writeBool(
      9,
      f
    );
  }
  f = message.getAttachmentsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      10,
      f
    );
  }
  f = message.getUpdateAttachments();
  if (f) {
    writer.writeBool(
      11,
      f
    );
  }
  f = message.getOverrides();
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      harmonytypes_v1_types_pb.Override.serializeBinaryToWriter
    );
  }
  f = message.getUpdateOverrides();
  if (f) {
    writer.writeBool(
      13,
      f
    );
  }
};


/**
 * optional uint64 guild_id = 1;
 * @return {string}
 */
proto.protocol.chat.v1.UpdateMessageRequest.prototype.getGuildId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, "0"));
};


/**
 * @param {string} value
 * @return {!proto.protocol.chat.v1.UpdateMessageRequest} returns this
 */
proto.protocol.chat.v1.UpdateMessageRequest.prototype.setGuildId = function(value) {
  return jspb.Message.setProto3StringIntField(this, 1, value);
};


/**
 * optional uint64 channel_id = 2;
 * @return {string}
 */
proto.protocol.chat.v1.UpdateMessageRequest.prototype.getChannelId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, "0"));
};


/**
 * @param {string} value
 * @return {!proto.protocol.chat.v1.UpdateMessageRequest} returns this
 */
proto.protocol.chat.v1.UpdateMessageRequest.prototype.setChannelId = function(value) {
  return jspb.Message.setProto3StringIntField(this, 2, value);
};


/**
 * optional uint64 message_id = 3;
 * @return {string}
 */
proto.protocol.chat.v1.UpdateMessageRequest.prototype.getMessageId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, "0"));
};


/**
 * @param {string} value
 * @return {!proto.protocol.chat.v1.UpdateMessageRequest} returns this
 */
proto.protocol.chat.v1.UpdateMessageRequest.prototype.setMessageId = function(value) {
  return jspb.Message.setProto3StringIntField(this, 3, value);
};


/**
 * optional string content = 4;
 * @return {string}
 */
proto.protocol.chat.v1.UpdateMessageRequest.prototype.getContent = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.protocol.chat.v1.UpdateMessageRequest} returns this
 */
proto.protocol.chat.v1.UpdateMessageRequest.prototype.setContent = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional bool update_content = 5;
 * @return {boolean}
 */
proto.protocol.chat.v1.UpdateMessageRequest.prototype.getUpdateContent = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.protocol.chat.v1.UpdateMessageRequest} returns this
 */
proto.protocol.chat.v1.UpdateMessageRequest.prototype.setUpdateContent = function(value) {
  return jspb.Message.setProto3BooleanField(this, 5, value);
};


/**
 * repeated protocol.harmonytypes.v1.Embed embeds = 6;
 * @return {!Array<!proto.protocol.harmonytypes.v1.Embed>}
 */
proto.protocol.chat.v1.UpdateMessageRequest.prototype.getEmbedsList = function() {
  return /** @type{!Array<!proto.protocol.harmonytypes.v1.Embed>} */ (
    jspb.Message.getRepeatedWrapperField(this, harmonytypes_v1_types_pb.Embed, 6));
};


/**
 * @param {!Array<!proto.protocol.harmonytypes.v1.Embed>} value
 * @return {!proto.protocol.chat.v1.UpdateMessageRequest} returns this
*/
proto.protocol.chat.v1.UpdateMessageRequest.prototype.setEmbedsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 6, value);
};


/**
 * @param {!proto.protocol.harmonytypes.v1.Embed=} opt_value
 * @param {number=} opt_index
 * @return {!proto.protocol.harmonytypes.v1.Embed}
 */
proto.protocol.chat.v1.UpdateMessageRequest.prototype.addEmbeds = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 6, opt_value, proto.protocol.harmonytypes.v1.Embed, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.protocol.chat.v1.UpdateMessageRequest} returns this
 */
proto.protocol.chat.v1.UpdateMessageRequest.prototype.clearEmbedsList = function() {
  return this.setEmbedsList([]);
};


/**
 * optional bool update_embeds = 7;
 * @return {boolean}
 */
proto.protocol.chat.v1.UpdateMessageRequest.prototype.getUpdateEmbeds = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 7, false));
};


/**
 * @param {boolean} value
 * @return {!proto.protocol.chat.v1.UpdateMessageRequest} returns this
 */
proto.protocol.chat.v1.UpdateMessageRequest.prototype.setUpdateEmbeds = function(value) {
  return jspb.Message.setProto3BooleanField(this, 7, value);
};


/**
 * repeated protocol.harmonytypes.v1.Action actions = 8;
 * @return {!Array<!proto.protocol.harmonytypes.v1.Action>}
 */
proto.protocol.chat.v1.UpdateMessageRequest.prototype.getActionsList = function() {
  return /** @type{!Array<!proto.protocol.harmonytypes.v1.Action>} */ (
    jspb.Message.getRepeatedWrapperField(this, harmonytypes_v1_types_pb.Action, 8));
};


/**
 * @param {!Array<!proto.protocol.harmonytypes.v1.Action>} value
 * @return {!proto.protocol.chat.v1.UpdateMessageRequest} returns this
*/
proto.protocol.chat.v1.UpdateMessageRequest.prototype.setActionsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 8, value);
};


/**
 * @param {!proto.protocol.harmonytypes.v1.Action=} opt_value
 * @param {number=} opt_index
 * @return {!proto.protocol.harmonytypes.v1.Action}
 */
proto.protocol.chat.v1.UpdateMessageRequest.prototype.addActions = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 8, opt_value, proto.protocol.harmonytypes.v1.Action, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.protocol.chat.v1.UpdateMessageRequest} returns this
 */
proto.protocol.chat.v1.UpdateMessageRequest.prototype.clearActionsList = function() {
  return this.setActionsList([]);
};


/**
 * optional bool update_actions = 9;
 * @return {boolean}
 */
proto.protocol.chat.v1.UpdateMessageRequest.prototype.getUpdateActions = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 9, false));
};


/**
 * @param {boolean} value
 * @return {!proto.protocol.chat.v1.UpdateMessageRequest} returns this
 */
proto.protocol.chat.v1.UpdateMessageRequest.prototype.setUpdateActions = function(value) {
  return jspb.Message.setProto3BooleanField(this, 9, value);
};


/**
 * repeated string attachments = 10;
 * @return {!Array<string>}
 */
proto.protocol.chat.v1.UpdateMessageRequest.prototype.getAttachmentsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 10));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.protocol.chat.v1.UpdateMessageRequest} returns this
 */
proto.protocol.chat.v1.UpdateMessageRequest.prototype.setAttachmentsList = function(value) {
  return jspb.Message.setField(this, 10, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.protocol.chat.v1.UpdateMessageRequest} returns this
 */
proto.protocol.chat.v1.UpdateMessageRequest.prototype.addAttachments = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 10, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.protocol.chat.v1.UpdateMessageRequest} returns this
 */
proto.protocol.chat.v1.UpdateMessageRequest.prototype.clearAttachmentsList = function() {
  return this.setAttachmentsList([]);
};


/**
 * optional bool update_attachments = 11;
 * @return {boolean}
 */
proto.protocol.chat.v1.UpdateMessageRequest.prototype.getUpdateAttachments = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 11, false));
};


/**
 * @param {boolean} value
 * @return {!proto.protocol.chat.v1.UpdateMessageRequest} returns this
 */
proto.protocol.chat.v1.UpdateMessageRequest.prototype.setUpdateAttachments = function(value) {
  return jspb.Message.setProto3BooleanField(this, 11, value);
};


/**
 * optional protocol.harmonytypes.v1.Override overrides = 12;
 * @return {?proto.protocol.harmonytypes.v1.Override}
 */
proto.protocol.chat.v1.UpdateMessageRequest.prototype.getOverrides = function() {
  return /** @type{?proto.protocol.harmonytypes.v1.Override} */ (
    jspb.Message.getWrapperField(this, harmonytypes_v1_types_pb.Override, 12));
};


/**
 * @param {?proto.protocol.harmonytypes.v1.Override|undefined} value
 * @return {!proto.protocol.chat.v1.UpdateMessageRequest} returns this
*/
proto.protocol.chat.v1.UpdateMessageRequest.prototype.setOverrides = function(value) {
  return jspb.Message.setWrapperField(this, 12, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protocol.chat.v1.UpdateMessageRequest} returns this
 */
proto.protocol.chat.v1.UpdateMessageRequest.prototype.clearOverrides = function() {
  return this.setOverrides(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protocol.chat.v1.UpdateMessageRequest.prototype.hasOverrides = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional bool update_overrides = 13;
 * @return {boolean}
 */
proto.protocol.chat.v1.UpdateMessageRequest.prototype.getUpdateOverrides = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 13, false));
};


/**
 * @param {boolean} value
 * @return {!proto.protocol.chat.v1.UpdateMessageRequest} returns this
 */
proto.protocol.chat.v1.UpdateMessageRequest.prototype.setUpdateOverrides = function(value) {
  return jspb.Message.setProto3BooleanField(this, 13, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protocol.chat.v1.DeleteMessageRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.protocol.chat.v1.DeleteMessageRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protocol.chat.v1.DeleteMessageRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protocol.chat.v1.DeleteMessageRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    guildId: jspb.Message.getFieldWithDefault(msg, 1, "0"),
    channelId: jspb.Message.getFieldWithDefault(msg, 2, "0"),
    messageId: jspb.Message.getFieldWithDefault(msg, 3, "0")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protocol.chat.v1.DeleteMessageRequest}
 */
proto.protocol.chat.v1.DeleteMessageRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protocol.chat.v1.DeleteMessageRequest;
  return proto.protocol.chat.v1.DeleteMessageRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protocol.chat.v1.DeleteMessageRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protocol.chat.v1.DeleteMessageRequest}
 */
proto.protocol.chat.v1.DeleteMessageRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readUint64String());
      msg.setGuildId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readUint64String());
      msg.setChannelId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readUint64String());
      msg.setMessageId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protocol.chat.v1.DeleteMessageRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protocol.chat.v1.DeleteMessageRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protocol.chat.v1.DeleteMessageRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protocol.chat.v1.DeleteMessageRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGuildId();
  if (parseInt(f, 10) !== 0) {
    writer.writeUint64String(
      1,
      f
    );
  }
  f = message.getChannelId();
  if (parseInt(f, 10) !== 0) {
    writer.writeUint64String(
      2,
      f
    );
  }
  f = message.getMessageId();
  if (parseInt(f, 10) !== 0) {
    writer.writeUint64String(
      3,
      f
    );
  }
};


/**
 * optional uint64 guild_id = 1;
 * @return {string}
 */
proto.protocol.chat.v1.DeleteMessageRequest.prototype.getGuildId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, "0"));
};


/**
 * @param {string} value
 * @return {!proto.protocol.chat.v1.DeleteMessageRequest} returns this
 */
proto.protocol.chat.v1.DeleteMessageRequest.prototype.setGuildId = function(value) {
  return jspb.Message.setProto3StringIntField(this, 1, value);
};


/**
 * optional uint64 channel_id = 2;
 * @return {string}
 */
proto.protocol.chat.v1.DeleteMessageRequest.prototype.getChannelId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, "0"));
};


/**
 * @param {string} value
 * @return {!proto.protocol.chat.v1.DeleteMessageRequest} returns this
 */
proto.protocol.chat.v1.DeleteMessageRequest.prototype.setChannelId = function(value) {
  return jspb.Message.setProto3StringIntField(this, 2, value);
};


/**
 * optional uint64 message_id = 3;
 * @return {string}
 */
proto.protocol.chat.v1.DeleteMessageRequest.prototype.getMessageId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, "0"));
};


/**
 * @param {string} value
 * @return {!proto.protocol.chat.v1.DeleteMessageRequest} returns this
 */
proto.protocol.chat.v1.DeleteMessageRequest.prototype.setMessageId = function(value) {
  return jspb.Message.setProto3StringIntField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protocol.chat.v1.TriggerActionRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.protocol.chat.v1.TriggerActionRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protocol.chat.v1.TriggerActionRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protocol.chat.v1.TriggerActionRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    guildId: jspb.Message.getFieldWithDefault(msg, 1, "0"),
    channelId: jspb.Message.getFieldWithDefault(msg, 2, "0"),
    messageId: jspb.Message.getFieldWithDefault(msg, 3, "0"),
    actionId: jspb.Message.getFieldWithDefault(msg, 4, ""),
    actionData: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protocol.chat.v1.TriggerActionRequest}
 */
proto.protocol.chat.v1.TriggerActionRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protocol.chat.v1.TriggerActionRequest;
  return proto.protocol.chat.v1.TriggerActionRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protocol.chat.v1.TriggerActionRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protocol.chat.v1.TriggerActionRequest}
 */
proto.protocol.chat.v1.TriggerActionRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readUint64String());
      msg.setGuildId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readUint64String());
      msg.setChannelId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readUint64String());
      msg.setMessageId(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setActionId(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setActionData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protocol.chat.v1.TriggerActionRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protocol.chat.v1.TriggerActionRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protocol.chat.v1.TriggerActionRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protocol.chat.v1.TriggerActionRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGuildId();
  if (parseInt(f, 10) !== 0) {
    writer.writeUint64String(
      1,
      f
    );
  }
  f = message.getChannelId();
  if (parseInt(f, 10) !== 0) {
    writer.writeUint64String(
      2,
      f
    );
  }
  f = message.getMessageId();
  if (parseInt(f, 10) !== 0) {
    writer.writeUint64String(
      3,
      f
    );
  }
  f = message.getActionId();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getActionData();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional uint64 guild_id = 1;
 * @return {string}
 */
proto.protocol.chat.v1.TriggerActionRequest.prototype.getGuildId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, "0"));
};


/**
 * @param {string} value
 * @return {!proto.protocol.chat.v1.TriggerActionRequest} returns this
 */
proto.protocol.chat.v1.TriggerActionRequest.prototype.setGuildId = function(value) {
  return jspb.Message.setProto3StringIntField(this, 1, value);
};


/**
 * optional uint64 channel_id = 2;
 * @return {string}
 */
proto.protocol.chat.v1.TriggerActionRequest.prototype.getChannelId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, "0"));
};


/**
 * @param {string} value
 * @return {!proto.protocol.chat.v1.TriggerActionRequest} returns this
 */
proto.protocol.chat.v1.TriggerActionRequest.prototype.setChannelId = function(value) {
  return jspb.Message.setProto3StringIntField(this, 2, value);
};


/**
 * optional uint64 message_id = 3;
 * @return {string}
 */
proto.protocol.chat.v1.TriggerActionRequest.prototype.getMessageId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, "0"));
};


/**
 * @param {string} value
 * @return {!proto.protocol.chat.v1.TriggerActionRequest} returns this
 */
proto.protocol.chat.v1.TriggerActionRequest.prototype.setMessageId = function(value) {
  return jspb.Message.setProto3StringIntField(this, 3, value);
};


/**
 * optional string action_id = 4;
 * @return {string}
 */
proto.protocol.chat.v1.TriggerActionRequest.prototype.getActionId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.protocol.chat.v1.TriggerActionRequest} returns this
 */
proto.protocol.chat.v1.TriggerActionRequest.prototype.setActionId = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string action_data = 5;
 * @return {string}
 */
proto.protocol.chat.v1.TriggerActionRequest.prototype.getActionData = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.protocol.chat.v1.TriggerActionRequest} returns this
 */
proto.protocol.chat.v1.TriggerActionRequest.prototype.setActionData = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.protocol.chat.v1.SendMessageRequest.repeatedFields_ = [4,5,6];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protocol.chat.v1.SendMessageRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.protocol.chat.v1.SendMessageRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protocol.chat.v1.SendMessageRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protocol.chat.v1.SendMessageRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    guildId: jspb.Message.getFieldWithDefault(msg, 1, "0"),
    channelId: jspb.Message.getFieldWithDefault(msg, 2, "0"),
    content: jspb.Message.getFieldWithDefault(msg, 3, ""),
    actionsList: jspb.Message.toObjectList(msg.getActionsList(),
    harmonytypes_v1_types_pb.Action.toObject, includeInstance),
    embedsList: jspb.Message.toObjectList(msg.getEmbedsList(),
    harmonytypes_v1_types_pb.Embed.toObject, includeInstance),
    attachmentsList: (f = jspb.Message.getRepeatedField(msg, 6)) == null ? undefined : f,
    inReplyTo: jspb.Message.getFieldWithDefault(msg, 7, 0),
    overrides: (f = msg.getOverrides()) && harmonytypes_v1_types_pb.Override.toObject(includeInstance, f),
    echoId: jspb.Message.getFieldWithDefault(msg, 9, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protocol.chat.v1.SendMessageRequest}
 */
proto.protocol.chat.v1.SendMessageRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protocol.chat.v1.SendMessageRequest;
  return proto.protocol.chat.v1.SendMessageRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protocol.chat.v1.SendMessageRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protocol.chat.v1.SendMessageRequest}
 */
proto.protocol.chat.v1.SendMessageRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readUint64String());
      msg.setGuildId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readUint64String());
      msg.setChannelId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setContent(value);
      break;
    case 4:
      var value = new harmonytypes_v1_types_pb.Action;
      reader.readMessage(value,harmonytypes_v1_types_pb.Action.deserializeBinaryFromReader);
      msg.addActions(value);
      break;
    case 5:
      var value = new harmonytypes_v1_types_pb.Embed;
      reader.readMessage(value,harmonytypes_v1_types_pb.Embed.deserializeBinaryFromReader);
      msg.addEmbeds(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.addAttachments(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setInReplyTo(value);
      break;
    case 8:
      var value = new harmonytypes_v1_types_pb.Override;
      reader.readMessage(value,harmonytypes_v1_types_pb.Override.deserializeBinaryFromReader);
      msg.setOverrides(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setEchoId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protocol.chat.v1.SendMessageRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protocol.chat.v1.SendMessageRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protocol.chat.v1.SendMessageRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protocol.chat.v1.SendMessageRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGuildId();
  if (parseInt(f, 10) !== 0) {
    writer.writeUint64String(
      1,
      f
    );
  }
  f = message.getChannelId();
  if (parseInt(f, 10) !== 0) {
    writer.writeUint64String(
      2,
      f
    );
  }
  f = message.getContent();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getActionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      harmonytypes_v1_types_pb.Action.serializeBinaryToWriter
    );
  }
  f = message.getEmbedsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      harmonytypes_v1_types_pb.Embed.serializeBinaryToWriter
    );
  }
  f = message.getAttachmentsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      6,
      f
    );
  }
  f = message.getInReplyTo();
  if (f !== 0) {
    writer.writeUint64(
      7,
      f
    );
  }
  f = message.getOverrides();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      harmonytypes_v1_types_pb.Override.serializeBinaryToWriter
    );
  }
  f = message.getEchoId();
  if (f !== 0) {
    writer.writeUint64(
      9,
      f
    );
  }
};


/**
 * optional uint64 guild_id = 1;
 * @return {string}
 */
proto.protocol.chat.v1.SendMessageRequest.prototype.getGuildId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, "0"));
};


/**
 * @param {string} value
 * @return {!proto.protocol.chat.v1.SendMessageRequest} returns this
 */
proto.protocol.chat.v1.SendMessageRequest.prototype.setGuildId = function(value) {
  return jspb.Message.setProto3StringIntField(this, 1, value);
};


/**
 * optional uint64 channel_id = 2;
 * @return {string}
 */
proto.protocol.chat.v1.SendMessageRequest.prototype.getChannelId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, "0"));
};


/**
 * @param {string} value
 * @return {!proto.protocol.chat.v1.SendMessageRequest} returns this
 */
proto.protocol.chat.v1.SendMessageRequest.prototype.setChannelId = function(value) {
  return jspb.Message.setProto3StringIntField(this, 2, value);
};


/**
 * optional string content = 3;
 * @return {string}
 */
proto.protocol.chat.v1.SendMessageRequest.prototype.getContent = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.protocol.chat.v1.SendMessageRequest} returns this
 */
proto.protocol.chat.v1.SendMessageRequest.prototype.setContent = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * repeated protocol.harmonytypes.v1.Action actions = 4;
 * @return {!Array<!proto.protocol.harmonytypes.v1.Action>}
 */
proto.protocol.chat.v1.SendMessageRequest.prototype.getActionsList = function() {
  return /** @type{!Array<!proto.protocol.harmonytypes.v1.Action>} */ (
    jspb.Message.getRepeatedWrapperField(this, harmonytypes_v1_types_pb.Action, 4));
};


/**
 * @param {!Array<!proto.protocol.harmonytypes.v1.Action>} value
 * @return {!proto.protocol.chat.v1.SendMessageRequest} returns this
*/
proto.protocol.chat.v1.SendMessageRequest.prototype.setActionsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.protocol.harmonytypes.v1.Action=} opt_value
 * @param {number=} opt_index
 * @return {!proto.protocol.harmonytypes.v1.Action}
 */
proto.protocol.chat.v1.SendMessageRequest.prototype.addActions = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.protocol.harmonytypes.v1.Action, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.protocol.chat.v1.SendMessageRequest} returns this
 */
proto.protocol.chat.v1.SendMessageRequest.prototype.clearActionsList = function() {
  return this.setActionsList([]);
};


/**
 * repeated protocol.harmonytypes.v1.Embed embeds = 5;
 * @return {!Array<!proto.protocol.harmonytypes.v1.Embed>}
 */
proto.protocol.chat.v1.SendMessageRequest.prototype.getEmbedsList = function() {
  return /** @type{!Array<!proto.protocol.harmonytypes.v1.Embed>} */ (
    jspb.Message.getRepeatedWrapperField(this, harmonytypes_v1_types_pb.Embed, 5));
};


/**
 * @param {!Array<!proto.protocol.harmonytypes.v1.Embed>} value
 * @return {!proto.protocol.chat.v1.SendMessageRequest} returns this
*/
proto.protocol.chat.v1.SendMessageRequest.prototype.setEmbedsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.protocol.harmonytypes.v1.Embed=} opt_value
 * @param {number=} opt_index
 * @return {!proto.protocol.harmonytypes.v1.Embed}
 */
proto.protocol.chat.v1.SendMessageRequest.prototype.addEmbeds = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.protocol.harmonytypes.v1.Embed, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.protocol.chat.v1.SendMessageRequest} returns this
 */
proto.protocol.chat.v1.SendMessageRequest.prototype.clearEmbedsList = function() {
  return this.setEmbedsList([]);
};


/**
 * repeated string attachments = 6;
 * @return {!Array<string>}
 */
proto.protocol.chat.v1.SendMessageRequest.prototype.getAttachmentsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 6));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.protocol.chat.v1.SendMessageRequest} returns this
 */
proto.protocol.chat.v1.SendMessageRequest.prototype.setAttachmentsList = function(value) {
  return jspb.Message.setField(this, 6, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.protocol.chat.v1.SendMessageRequest} returns this
 */
proto.protocol.chat.v1.SendMessageRequest.prototype.addAttachments = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 6, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.protocol.chat.v1.SendMessageRequest} returns this
 */
proto.protocol.chat.v1.SendMessageRequest.prototype.clearAttachmentsList = function() {
  return this.setAttachmentsList([]);
};


/**
 * optional uint64 in_reply_to = 7;
 * @return {number}
 */
proto.protocol.chat.v1.SendMessageRequest.prototype.getInReplyTo = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.protocol.chat.v1.SendMessageRequest} returns this
 */
proto.protocol.chat.v1.SendMessageRequest.prototype.setInReplyTo = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional protocol.harmonytypes.v1.Override overrides = 8;
 * @return {?proto.protocol.harmonytypes.v1.Override}
 */
proto.protocol.chat.v1.SendMessageRequest.prototype.getOverrides = function() {
  return /** @type{?proto.protocol.harmonytypes.v1.Override} */ (
    jspb.Message.getWrapperField(this, harmonytypes_v1_types_pb.Override, 8));
};


/**
 * @param {?proto.protocol.harmonytypes.v1.Override|undefined} value
 * @return {!proto.protocol.chat.v1.SendMessageRequest} returns this
*/
proto.protocol.chat.v1.SendMessageRequest.prototype.setOverrides = function(value) {
  return jspb.Message.setWrapperField(this, 8, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protocol.chat.v1.SendMessageRequest} returns this
 */
proto.protocol.chat.v1.SendMessageRequest.prototype.clearOverrides = function() {
  return this.setOverrides(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protocol.chat.v1.SendMessageRequest.prototype.hasOverrides = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional uint64 echo_id = 9;
 * @return {number}
 */
proto.protocol.chat.v1.SendMessageRequest.prototype.getEchoId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.protocol.chat.v1.SendMessageRequest} returns this
 */
proto.protocol.chat.v1.SendMessageRequest.prototype.setEchoId = function(value) {
  return jspb.Message.setProto3IntField(this, 9, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protocol.chat.v1.SendMessageResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.protocol.chat.v1.SendMessageResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protocol.chat.v1.SendMessageResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protocol.chat.v1.SendMessageResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    messageId: jspb.Message.getFieldWithDefault(msg, 1, "0")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protocol.chat.v1.SendMessageResponse}
 */
proto.protocol.chat.v1.SendMessageResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protocol.chat.v1.SendMessageResponse;
  return proto.protocol.chat.v1.SendMessageResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protocol.chat.v1.SendMessageResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protocol.chat.v1.SendMessageResponse}
 */
proto.protocol.chat.v1.SendMessageResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readUint64String());
      msg.setMessageId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protocol.chat.v1.SendMessageResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protocol.chat.v1.SendMessageResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protocol.chat.v1.SendMessageResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protocol.chat.v1.SendMessageResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMessageId();
  if (parseInt(f, 10) !== 0) {
    writer.writeUint64String(
      1,
      f
    );
  }
};


/**
 * optional uint64 message_id = 1;
 * @return {string}
 */
proto.protocol.chat.v1.SendMessageResponse.prototype.getMessageId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, "0"));
};


/**
 * @param {string} value
 * @return {!proto.protocol.chat.v1.SendMessageResponse} returns this
 */
proto.protocol.chat.v1.SendMessageResponse.prototype.setMessageId = function(value) {
  return jspb.Message.setProto3StringIntField(this, 1, value);
};


goog.object.extend(exports, proto.protocol.chat.v1);
