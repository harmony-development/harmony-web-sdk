// source: chat/v1/permissions.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.protocol.chat.v1.AddGuildRoleRequest', null, global);
goog.exportSymbol('proto.protocol.chat.v1.AddGuildRoleResponse', null, global);
goog.exportSymbol('proto.protocol.chat.v1.DeleteGuildRoleRequest', null, global);
goog.exportSymbol('proto.protocol.chat.v1.GetGuildRolesRequest', null, global);
goog.exportSymbol('proto.protocol.chat.v1.GetGuildRolesResponse', null, global);
goog.exportSymbol('proto.protocol.chat.v1.GetPermissionsRequest', null, global);
goog.exportSymbol('proto.protocol.chat.v1.GetPermissionsResponse', null, global);
goog.exportSymbol('proto.protocol.chat.v1.GetUserRolesRequest', null, global);
goog.exportSymbol('proto.protocol.chat.v1.GetUserRolesResponse', null, global);
goog.exportSymbol('proto.protocol.chat.v1.ManageUserRolesRequest', null, global);
goog.exportSymbol('proto.protocol.chat.v1.ModifyGuildRoleRequest', null, global);
goog.exportSymbol('proto.protocol.chat.v1.MoveRoleRequest', null, global);
goog.exportSymbol('proto.protocol.chat.v1.MoveRoleResponse', null, global);
goog.exportSymbol('proto.protocol.chat.v1.Permission', null, global);
goog.exportSymbol('proto.protocol.chat.v1.Permission.Mode', null, global);
goog.exportSymbol('proto.protocol.chat.v1.PermissionList', null, global);
goog.exportSymbol('proto.protocol.chat.v1.QueryPermissionsRequest', null, global);
goog.exportSymbol('proto.protocol.chat.v1.QueryPermissionsResponse', null, global);
goog.exportSymbol('proto.protocol.chat.v1.Role', null, global);
goog.exportSymbol('proto.protocol.chat.v1.SetPermissionsRequest', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protocol.chat.v1.QueryPermissionsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protocol.chat.v1.QueryPermissionsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protocol.chat.v1.QueryPermissionsRequest.displayName = 'proto.protocol.chat.v1.QueryPermissionsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protocol.chat.v1.QueryPermissionsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protocol.chat.v1.QueryPermissionsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protocol.chat.v1.QueryPermissionsResponse.displayName = 'proto.protocol.chat.v1.QueryPermissionsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protocol.chat.v1.Permission = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protocol.chat.v1.Permission, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protocol.chat.v1.Permission.displayName = 'proto.protocol.chat.v1.Permission';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protocol.chat.v1.PermissionList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.protocol.chat.v1.PermissionList.repeatedFields_, null);
};
goog.inherits(proto.protocol.chat.v1.PermissionList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protocol.chat.v1.PermissionList.displayName = 'proto.protocol.chat.v1.PermissionList';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protocol.chat.v1.SetPermissionsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protocol.chat.v1.SetPermissionsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protocol.chat.v1.SetPermissionsRequest.displayName = 'proto.protocol.chat.v1.SetPermissionsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protocol.chat.v1.GetPermissionsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protocol.chat.v1.GetPermissionsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protocol.chat.v1.GetPermissionsRequest.displayName = 'proto.protocol.chat.v1.GetPermissionsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protocol.chat.v1.GetPermissionsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protocol.chat.v1.GetPermissionsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protocol.chat.v1.GetPermissionsResponse.displayName = 'proto.protocol.chat.v1.GetPermissionsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protocol.chat.v1.Role = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protocol.chat.v1.Role, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protocol.chat.v1.Role.displayName = 'proto.protocol.chat.v1.Role';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protocol.chat.v1.MoveRoleRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protocol.chat.v1.MoveRoleRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protocol.chat.v1.MoveRoleRequest.displayName = 'proto.protocol.chat.v1.MoveRoleRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protocol.chat.v1.MoveRoleResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protocol.chat.v1.MoveRoleResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protocol.chat.v1.MoveRoleResponse.displayName = 'proto.protocol.chat.v1.MoveRoleResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protocol.chat.v1.GetGuildRolesRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protocol.chat.v1.GetGuildRolesRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protocol.chat.v1.GetGuildRolesRequest.displayName = 'proto.protocol.chat.v1.GetGuildRolesRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protocol.chat.v1.GetGuildRolesResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.protocol.chat.v1.GetGuildRolesResponse.repeatedFields_, null);
};
goog.inherits(proto.protocol.chat.v1.GetGuildRolesResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protocol.chat.v1.GetGuildRolesResponse.displayName = 'proto.protocol.chat.v1.GetGuildRolesResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protocol.chat.v1.AddGuildRoleRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protocol.chat.v1.AddGuildRoleRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protocol.chat.v1.AddGuildRoleRequest.displayName = 'proto.protocol.chat.v1.AddGuildRoleRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protocol.chat.v1.AddGuildRoleResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protocol.chat.v1.AddGuildRoleResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protocol.chat.v1.AddGuildRoleResponse.displayName = 'proto.protocol.chat.v1.AddGuildRoleResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protocol.chat.v1.DeleteGuildRoleRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protocol.chat.v1.DeleteGuildRoleRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protocol.chat.v1.DeleteGuildRoleRequest.displayName = 'proto.protocol.chat.v1.DeleteGuildRoleRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protocol.chat.v1.ModifyGuildRoleRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protocol.chat.v1.ModifyGuildRoleRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protocol.chat.v1.ModifyGuildRoleRequest.displayName = 'proto.protocol.chat.v1.ModifyGuildRoleRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protocol.chat.v1.ManageUserRolesRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.protocol.chat.v1.ManageUserRolesRequest.repeatedFields_, null);
};
goog.inherits(proto.protocol.chat.v1.ManageUserRolesRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protocol.chat.v1.ManageUserRolesRequest.displayName = 'proto.protocol.chat.v1.ManageUserRolesRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protocol.chat.v1.GetUserRolesRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protocol.chat.v1.GetUserRolesRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protocol.chat.v1.GetUserRolesRequest.displayName = 'proto.protocol.chat.v1.GetUserRolesRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protocol.chat.v1.GetUserRolesResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.protocol.chat.v1.GetUserRolesResponse.repeatedFields_, null);
};
goog.inherits(proto.protocol.chat.v1.GetUserRolesResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protocol.chat.v1.GetUserRolesResponse.displayName = 'proto.protocol.chat.v1.GetUserRolesResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protocol.chat.v1.QueryPermissionsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.protocol.chat.v1.QueryPermissionsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protocol.chat.v1.QueryPermissionsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protocol.chat.v1.QueryPermissionsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    guildId: jspb.Message.getFieldWithDefault(msg, 1, "0"),
    channelId: jspb.Message.getFieldWithDefault(msg, 2, "0"),
    checkFor: jspb.Message.getFieldWithDefault(msg, 3, ""),
    as: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protocol.chat.v1.QueryPermissionsRequest}
 */
proto.protocol.chat.v1.QueryPermissionsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protocol.chat.v1.QueryPermissionsRequest;
  return proto.protocol.chat.v1.QueryPermissionsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protocol.chat.v1.QueryPermissionsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protocol.chat.v1.QueryPermissionsRequest}
 */
proto.protocol.chat.v1.QueryPermissionsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readUint64String());
      msg.setGuildId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readUint64String());
      msg.setChannelId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setCheckFor(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setAs(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protocol.chat.v1.QueryPermissionsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protocol.chat.v1.QueryPermissionsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protocol.chat.v1.QueryPermissionsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protocol.chat.v1.QueryPermissionsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGuildId();
  if (parseInt(f, 10) !== 0) {
    writer.writeUint64String(
      1,
      f
    );
  }
  f = message.getChannelId();
  if (parseInt(f, 10) !== 0) {
    writer.writeUint64String(
      2,
      f
    );
  }
  f = message.getCheckFor();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getAs();
  if (f !== 0) {
    writer.writeUint64(
      4,
      f
    );
  }
};


/**
 * optional uint64 guild_id = 1;
 * @return {string}
 */
proto.protocol.chat.v1.QueryPermissionsRequest.prototype.getGuildId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, "0"));
};


/**
 * @param {string} value
 * @return {!proto.protocol.chat.v1.QueryPermissionsRequest} returns this
 */
proto.protocol.chat.v1.QueryPermissionsRequest.prototype.setGuildId = function(value) {
  return jspb.Message.setProto3StringIntField(this, 1, value);
};


/**
 * optional uint64 channel_id = 2;
 * @return {string}
 */
proto.protocol.chat.v1.QueryPermissionsRequest.prototype.getChannelId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, "0"));
};


/**
 * @param {string} value
 * @return {!proto.protocol.chat.v1.QueryPermissionsRequest} returns this
 */
proto.protocol.chat.v1.QueryPermissionsRequest.prototype.setChannelId = function(value) {
  return jspb.Message.setProto3StringIntField(this, 2, value);
};


/**
 * optional string check_for = 3;
 * @return {string}
 */
proto.protocol.chat.v1.QueryPermissionsRequest.prototype.getCheckFor = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.protocol.chat.v1.QueryPermissionsRequest} returns this
 */
proto.protocol.chat.v1.QueryPermissionsRequest.prototype.setCheckFor = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional uint64 as = 4;
 * @return {number}
 */
proto.protocol.chat.v1.QueryPermissionsRequest.prototype.getAs = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.protocol.chat.v1.QueryPermissionsRequest} returns this
 */
proto.protocol.chat.v1.QueryPermissionsRequest.prototype.setAs = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protocol.chat.v1.QueryPermissionsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.protocol.chat.v1.QueryPermissionsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protocol.chat.v1.QueryPermissionsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protocol.chat.v1.QueryPermissionsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    ok: jspb.Message.getBooleanFieldWithDefault(msg, 1, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protocol.chat.v1.QueryPermissionsResponse}
 */
proto.protocol.chat.v1.QueryPermissionsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protocol.chat.v1.QueryPermissionsResponse;
  return proto.protocol.chat.v1.QueryPermissionsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protocol.chat.v1.QueryPermissionsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protocol.chat.v1.QueryPermissionsResponse}
 */
proto.protocol.chat.v1.QueryPermissionsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setOk(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protocol.chat.v1.QueryPermissionsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protocol.chat.v1.QueryPermissionsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protocol.chat.v1.QueryPermissionsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protocol.chat.v1.QueryPermissionsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOk();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
};


/**
 * optional bool ok = 1;
 * @return {boolean}
 */
proto.protocol.chat.v1.QueryPermissionsResponse.prototype.getOk = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.protocol.chat.v1.QueryPermissionsResponse} returns this
 */
proto.protocol.chat.v1.QueryPermissionsResponse.prototype.setOk = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protocol.chat.v1.Permission.prototype.toObject = function(opt_includeInstance) {
  return proto.protocol.chat.v1.Permission.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protocol.chat.v1.Permission} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protocol.chat.v1.Permission.toObject = function(includeInstance, msg) {
  var f, obj = {
    matches: jspb.Message.getFieldWithDefault(msg, 1, ""),
    mode: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protocol.chat.v1.Permission}
 */
proto.protocol.chat.v1.Permission.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protocol.chat.v1.Permission;
  return proto.protocol.chat.v1.Permission.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protocol.chat.v1.Permission} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protocol.chat.v1.Permission}
 */
proto.protocol.chat.v1.Permission.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMatches(value);
      break;
    case 2:
      var value = /** @type {!proto.protocol.chat.v1.Permission.Mode} */ (reader.readEnum());
      msg.setMode(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protocol.chat.v1.Permission.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protocol.chat.v1.Permission.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protocol.chat.v1.Permission} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protocol.chat.v1.Permission.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMatches();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getMode();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.protocol.chat.v1.Permission.Mode = {
  ALLOW: 0,
  DENY: 1
};

/**
 * optional string matches = 1;
 * @return {string}
 */
proto.protocol.chat.v1.Permission.prototype.getMatches = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.protocol.chat.v1.Permission} returns this
 */
proto.protocol.chat.v1.Permission.prototype.setMatches = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional Mode mode = 2;
 * @return {!proto.protocol.chat.v1.Permission.Mode}
 */
proto.protocol.chat.v1.Permission.prototype.getMode = function() {
  return /** @type {!proto.protocol.chat.v1.Permission.Mode} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.protocol.chat.v1.Permission.Mode} value
 * @return {!proto.protocol.chat.v1.Permission} returns this
 */
proto.protocol.chat.v1.Permission.prototype.setMode = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.protocol.chat.v1.PermissionList.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protocol.chat.v1.PermissionList.prototype.toObject = function(opt_includeInstance) {
  return proto.protocol.chat.v1.PermissionList.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protocol.chat.v1.PermissionList} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protocol.chat.v1.PermissionList.toObject = function(includeInstance, msg) {
  var f, obj = {
    permissionsList: jspb.Message.toObjectList(msg.getPermissionsList(),
    proto.protocol.chat.v1.Permission.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protocol.chat.v1.PermissionList}
 */
proto.protocol.chat.v1.PermissionList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protocol.chat.v1.PermissionList;
  return proto.protocol.chat.v1.PermissionList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protocol.chat.v1.PermissionList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protocol.chat.v1.PermissionList}
 */
proto.protocol.chat.v1.PermissionList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.protocol.chat.v1.Permission;
      reader.readMessage(value,proto.protocol.chat.v1.Permission.deserializeBinaryFromReader);
      msg.addPermissions(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protocol.chat.v1.PermissionList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protocol.chat.v1.PermissionList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protocol.chat.v1.PermissionList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protocol.chat.v1.PermissionList.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPermissionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.protocol.chat.v1.Permission.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Permission permissions = 1;
 * @return {!Array<!proto.protocol.chat.v1.Permission>}
 */
proto.protocol.chat.v1.PermissionList.prototype.getPermissionsList = function() {
  return /** @type{!Array<!proto.protocol.chat.v1.Permission>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.protocol.chat.v1.Permission, 1));
};


/**
 * @param {!Array<!proto.protocol.chat.v1.Permission>} value
 * @return {!proto.protocol.chat.v1.PermissionList} returns this
*/
proto.protocol.chat.v1.PermissionList.prototype.setPermissionsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.protocol.chat.v1.Permission=} opt_value
 * @param {number=} opt_index
 * @return {!proto.protocol.chat.v1.Permission}
 */
proto.protocol.chat.v1.PermissionList.prototype.addPermissions = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.protocol.chat.v1.Permission, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.protocol.chat.v1.PermissionList} returns this
 */
proto.protocol.chat.v1.PermissionList.prototype.clearPermissionsList = function() {
  return this.setPermissionsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protocol.chat.v1.SetPermissionsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.protocol.chat.v1.SetPermissionsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protocol.chat.v1.SetPermissionsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protocol.chat.v1.SetPermissionsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    guildId: jspb.Message.getFieldWithDefault(msg, 1, "0"),
    channelId: jspb.Message.getFieldWithDefault(msg, 2, "0"),
    roleId: jspb.Message.getFieldWithDefault(msg, 3, "0"),
    perms: (f = msg.getPerms()) && proto.protocol.chat.v1.PermissionList.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protocol.chat.v1.SetPermissionsRequest}
 */
proto.protocol.chat.v1.SetPermissionsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protocol.chat.v1.SetPermissionsRequest;
  return proto.protocol.chat.v1.SetPermissionsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protocol.chat.v1.SetPermissionsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protocol.chat.v1.SetPermissionsRequest}
 */
proto.protocol.chat.v1.SetPermissionsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readUint64String());
      msg.setGuildId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readUint64String());
      msg.setChannelId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readUint64String());
      msg.setRoleId(value);
      break;
    case 4:
      var value = new proto.protocol.chat.v1.PermissionList;
      reader.readMessage(value,proto.protocol.chat.v1.PermissionList.deserializeBinaryFromReader);
      msg.setPerms(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protocol.chat.v1.SetPermissionsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protocol.chat.v1.SetPermissionsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protocol.chat.v1.SetPermissionsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protocol.chat.v1.SetPermissionsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGuildId();
  if (parseInt(f, 10) !== 0) {
    writer.writeUint64String(
      1,
      f
    );
  }
  f = message.getChannelId();
  if (parseInt(f, 10) !== 0) {
    writer.writeUint64String(
      2,
      f
    );
  }
  f = message.getRoleId();
  if (parseInt(f, 10) !== 0) {
    writer.writeUint64String(
      3,
      f
    );
  }
  f = message.getPerms();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.protocol.chat.v1.PermissionList.serializeBinaryToWriter
    );
  }
};


/**
 * optional uint64 guild_id = 1;
 * @return {string}
 */
proto.protocol.chat.v1.SetPermissionsRequest.prototype.getGuildId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, "0"));
};


/**
 * @param {string} value
 * @return {!proto.protocol.chat.v1.SetPermissionsRequest} returns this
 */
proto.protocol.chat.v1.SetPermissionsRequest.prototype.setGuildId = function(value) {
  return jspb.Message.setProto3StringIntField(this, 1, value);
};


/**
 * optional uint64 channel_id = 2;
 * @return {string}
 */
proto.protocol.chat.v1.SetPermissionsRequest.prototype.getChannelId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, "0"));
};


/**
 * @param {string} value
 * @return {!proto.protocol.chat.v1.SetPermissionsRequest} returns this
 */
proto.protocol.chat.v1.SetPermissionsRequest.prototype.setChannelId = function(value) {
  return jspb.Message.setProto3StringIntField(this, 2, value);
};


/**
 * optional uint64 role_id = 3;
 * @return {string}
 */
proto.protocol.chat.v1.SetPermissionsRequest.prototype.getRoleId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, "0"));
};


/**
 * @param {string} value
 * @return {!proto.protocol.chat.v1.SetPermissionsRequest} returns this
 */
proto.protocol.chat.v1.SetPermissionsRequest.prototype.setRoleId = function(value) {
  return jspb.Message.setProto3StringIntField(this, 3, value);
};


/**
 * optional PermissionList perms = 4;
 * @return {?proto.protocol.chat.v1.PermissionList}
 */
proto.protocol.chat.v1.SetPermissionsRequest.prototype.getPerms = function() {
  return /** @type{?proto.protocol.chat.v1.PermissionList} */ (
    jspb.Message.getWrapperField(this, proto.protocol.chat.v1.PermissionList, 4));
};


/**
 * @param {?proto.protocol.chat.v1.PermissionList|undefined} value
 * @return {!proto.protocol.chat.v1.SetPermissionsRequest} returns this
*/
proto.protocol.chat.v1.SetPermissionsRequest.prototype.setPerms = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protocol.chat.v1.SetPermissionsRequest} returns this
 */
proto.protocol.chat.v1.SetPermissionsRequest.prototype.clearPerms = function() {
  return this.setPerms(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protocol.chat.v1.SetPermissionsRequest.prototype.hasPerms = function() {
  return jspb.Message.getField(this, 4) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protocol.chat.v1.GetPermissionsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.protocol.chat.v1.GetPermissionsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protocol.chat.v1.GetPermissionsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protocol.chat.v1.GetPermissionsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    guildId: jspb.Message.getFieldWithDefault(msg, 1, "0"),
    channelId: jspb.Message.getFieldWithDefault(msg, 2, "0"),
    roleId: jspb.Message.getFieldWithDefault(msg, 3, "0")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protocol.chat.v1.GetPermissionsRequest}
 */
proto.protocol.chat.v1.GetPermissionsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protocol.chat.v1.GetPermissionsRequest;
  return proto.protocol.chat.v1.GetPermissionsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protocol.chat.v1.GetPermissionsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protocol.chat.v1.GetPermissionsRequest}
 */
proto.protocol.chat.v1.GetPermissionsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readUint64String());
      msg.setGuildId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readUint64String());
      msg.setChannelId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readUint64String());
      msg.setRoleId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protocol.chat.v1.GetPermissionsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protocol.chat.v1.GetPermissionsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protocol.chat.v1.GetPermissionsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protocol.chat.v1.GetPermissionsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGuildId();
  if (parseInt(f, 10) !== 0) {
    writer.writeUint64String(
      1,
      f
    );
  }
  f = message.getChannelId();
  if (parseInt(f, 10) !== 0) {
    writer.writeUint64String(
      2,
      f
    );
  }
  f = message.getRoleId();
  if (parseInt(f, 10) !== 0) {
    writer.writeUint64String(
      3,
      f
    );
  }
};


/**
 * optional uint64 guild_id = 1;
 * @return {string}
 */
proto.protocol.chat.v1.GetPermissionsRequest.prototype.getGuildId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, "0"));
};


/**
 * @param {string} value
 * @return {!proto.protocol.chat.v1.GetPermissionsRequest} returns this
 */
proto.protocol.chat.v1.GetPermissionsRequest.prototype.setGuildId = function(value) {
  return jspb.Message.setProto3StringIntField(this, 1, value);
};


/**
 * optional uint64 channel_id = 2;
 * @return {string}
 */
proto.protocol.chat.v1.GetPermissionsRequest.prototype.getChannelId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, "0"));
};


/**
 * @param {string} value
 * @return {!proto.protocol.chat.v1.GetPermissionsRequest} returns this
 */
proto.protocol.chat.v1.GetPermissionsRequest.prototype.setChannelId = function(value) {
  return jspb.Message.setProto3StringIntField(this, 2, value);
};


/**
 * optional uint64 role_id = 3;
 * @return {string}
 */
proto.protocol.chat.v1.GetPermissionsRequest.prototype.getRoleId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, "0"));
};


/**
 * @param {string} value
 * @return {!proto.protocol.chat.v1.GetPermissionsRequest} returns this
 */
proto.protocol.chat.v1.GetPermissionsRequest.prototype.setRoleId = function(value) {
  return jspb.Message.setProto3StringIntField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protocol.chat.v1.GetPermissionsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.protocol.chat.v1.GetPermissionsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protocol.chat.v1.GetPermissionsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protocol.chat.v1.GetPermissionsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    perms: (f = msg.getPerms()) && proto.protocol.chat.v1.PermissionList.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protocol.chat.v1.GetPermissionsResponse}
 */
proto.protocol.chat.v1.GetPermissionsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protocol.chat.v1.GetPermissionsResponse;
  return proto.protocol.chat.v1.GetPermissionsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protocol.chat.v1.GetPermissionsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protocol.chat.v1.GetPermissionsResponse}
 */
proto.protocol.chat.v1.GetPermissionsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.protocol.chat.v1.PermissionList;
      reader.readMessage(value,proto.protocol.chat.v1.PermissionList.deserializeBinaryFromReader);
      msg.setPerms(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protocol.chat.v1.GetPermissionsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protocol.chat.v1.GetPermissionsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protocol.chat.v1.GetPermissionsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protocol.chat.v1.GetPermissionsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPerms();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.protocol.chat.v1.PermissionList.serializeBinaryToWriter
    );
  }
};


/**
 * optional PermissionList perms = 1;
 * @return {?proto.protocol.chat.v1.PermissionList}
 */
proto.protocol.chat.v1.GetPermissionsResponse.prototype.getPerms = function() {
  return /** @type{?proto.protocol.chat.v1.PermissionList} */ (
    jspb.Message.getWrapperField(this, proto.protocol.chat.v1.PermissionList, 1));
};


/**
 * @param {?proto.protocol.chat.v1.PermissionList|undefined} value
 * @return {!proto.protocol.chat.v1.GetPermissionsResponse} returns this
*/
proto.protocol.chat.v1.GetPermissionsResponse.prototype.setPerms = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protocol.chat.v1.GetPermissionsResponse} returns this
 */
proto.protocol.chat.v1.GetPermissionsResponse.prototype.clearPerms = function() {
  return this.setPerms(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protocol.chat.v1.GetPermissionsResponse.prototype.hasPerms = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protocol.chat.v1.Role.prototype.toObject = function(opt_includeInstance) {
  return proto.protocol.chat.v1.Role.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protocol.chat.v1.Role} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protocol.chat.v1.Role.toObject = function(includeInstance, msg) {
  var f, obj = {
    roleId: jspb.Message.getFieldWithDefault(msg, 1, "0"),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    color: jspb.Message.getFieldWithDefault(msg, 3, 0),
    hoist: jspb.Message.getBooleanFieldWithDefault(msg, 4, false),
    pingable: jspb.Message.getBooleanFieldWithDefault(msg, 5, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protocol.chat.v1.Role}
 */
proto.protocol.chat.v1.Role.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protocol.chat.v1.Role;
  return proto.protocol.chat.v1.Role.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protocol.chat.v1.Role} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protocol.chat.v1.Role}
 */
proto.protocol.chat.v1.Role.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readUint64String());
      msg.setRoleId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setColor(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setHoist(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setPingable(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protocol.chat.v1.Role.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protocol.chat.v1.Role.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protocol.chat.v1.Role} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protocol.chat.v1.Role.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRoleId();
  if (parseInt(f, 10) !== 0) {
    writer.writeUint64String(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getColor();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getHoist();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
  f = message.getPingable();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
};


/**
 * optional uint64 role_id = 1;
 * @return {string}
 */
proto.protocol.chat.v1.Role.prototype.getRoleId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, "0"));
};


/**
 * @param {string} value
 * @return {!proto.protocol.chat.v1.Role} returns this
 */
proto.protocol.chat.v1.Role.prototype.setRoleId = function(value) {
  return jspb.Message.setProto3StringIntField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.protocol.chat.v1.Role.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.protocol.chat.v1.Role} returns this
 */
proto.protocol.chat.v1.Role.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int32 color = 3;
 * @return {number}
 */
proto.protocol.chat.v1.Role.prototype.getColor = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.protocol.chat.v1.Role} returns this
 */
proto.protocol.chat.v1.Role.prototype.setColor = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional bool hoist = 4;
 * @return {boolean}
 */
proto.protocol.chat.v1.Role.prototype.getHoist = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.protocol.chat.v1.Role} returns this
 */
proto.protocol.chat.v1.Role.prototype.setHoist = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};


/**
 * optional bool pingable = 5;
 * @return {boolean}
 */
proto.protocol.chat.v1.Role.prototype.getPingable = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.protocol.chat.v1.Role} returns this
 */
proto.protocol.chat.v1.Role.prototype.setPingable = function(value) {
  return jspb.Message.setProto3BooleanField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protocol.chat.v1.MoveRoleRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.protocol.chat.v1.MoveRoleRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protocol.chat.v1.MoveRoleRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protocol.chat.v1.MoveRoleRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    guildId: jspb.Message.getFieldWithDefault(msg, 1, "0"),
    roleId: jspb.Message.getFieldWithDefault(msg, 2, "0"),
    beforeId: jspb.Message.getFieldWithDefault(msg, 3, "0"),
    afterId: jspb.Message.getFieldWithDefault(msg, 4, "0")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protocol.chat.v1.MoveRoleRequest}
 */
proto.protocol.chat.v1.MoveRoleRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protocol.chat.v1.MoveRoleRequest;
  return proto.protocol.chat.v1.MoveRoleRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protocol.chat.v1.MoveRoleRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protocol.chat.v1.MoveRoleRequest}
 */
proto.protocol.chat.v1.MoveRoleRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readUint64String());
      msg.setGuildId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readUint64String());
      msg.setRoleId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readUint64String());
      msg.setBeforeId(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readUint64String());
      msg.setAfterId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protocol.chat.v1.MoveRoleRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protocol.chat.v1.MoveRoleRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protocol.chat.v1.MoveRoleRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protocol.chat.v1.MoveRoleRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGuildId();
  if (parseInt(f, 10) !== 0) {
    writer.writeUint64String(
      1,
      f
    );
  }
  f = message.getRoleId();
  if (parseInt(f, 10) !== 0) {
    writer.writeUint64String(
      2,
      f
    );
  }
  f = message.getBeforeId();
  if (parseInt(f, 10) !== 0) {
    writer.writeUint64String(
      3,
      f
    );
  }
  f = message.getAfterId();
  if (parseInt(f, 10) !== 0) {
    writer.writeUint64String(
      4,
      f
    );
  }
};


/**
 * optional uint64 guild_id = 1;
 * @return {string}
 */
proto.protocol.chat.v1.MoveRoleRequest.prototype.getGuildId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, "0"));
};


/**
 * @param {string} value
 * @return {!proto.protocol.chat.v1.MoveRoleRequest} returns this
 */
proto.protocol.chat.v1.MoveRoleRequest.prototype.setGuildId = function(value) {
  return jspb.Message.setProto3StringIntField(this, 1, value);
};


/**
 * optional uint64 role_id = 2;
 * @return {string}
 */
proto.protocol.chat.v1.MoveRoleRequest.prototype.getRoleId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, "0"));
};


/**
 * @param {string} value
 * @return {!proto.protocol.chat.v1.MoveRoleRequest} returns this
 */
proto.protocol.chat.v1.MoveRoleRequest.prototype.setRoleId = function(value) {
  return jspb.Message.setProto3StringIntField(this, 2, value);
};


/**
 * optional uint64 before_id = 3;
 * @return {string}
 */
proto.protocol.chat.v1.MoveRoleRequest.prototype.getBeforeId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, "0"));
};


/**
 * @param {string} value
 * @return {!proto.protocol.chat.v1.MoveRoleRequest} returns this
 */
proto.protocol.chat.v1.MoveRoleRequest.prototype.setBeforeId = function(value) {
  return jspb.Message.setProto3StringIntField(this, 3, value);
};


/**
 * optional uint64 after_id = 4;
 * @return {string}
 */
proto.protocol.chat.v1.MoveRoleRequest.prototype.getAfterId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, "0"));
};


/**
 * @param {string} value
 * @return {!proto.protocol.chat.v1.MoveRoleRequest} returns this
 */
proto.protocol.chat.v1.MoveRoleRequest.prototype.setAfterId = function(value) {
  return jspb.Message.setProto3StringIntField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protocol.chat.v1.MoveRoleResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.protocol.chat.v1.MoveRoleResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protocol.chat.v1.MoveRoleResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protocol.chat.v1.MoveRoleResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protocol.chat.v1.MoveRoleResponse}
 */
proto.protocol.chat.v1.MoveRoleResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protocol.chat.v1.MoveRoleResponse;
  return proto.protocol.chat.v1.MoveRoleResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protocol.chat.v1.MoveRoleResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protocol.chat.v1.MoveRoleResponse}
 */
proto.protocol.chat.v1.MoveRoleResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protocol.chat.v1.MoveRoleResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protocol.chat.v1.MoveRoleResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protocol.chat.v1.MoveRoleResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protocol.chat.v1.MoveRoleResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protocol.chat.v1.GetGuildRolesRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.protocol.chat.v1.GetGuildRolesRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protocol.chat.v1.GetGuildRolesRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protocol.chat.v1.GetGuildRolesRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    guildId: jspb.Message.getFieldWithDefault(msg, 1, "0")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protocol.chat.v1.GetGuildRolesRequest}
 */
proto.protocol.chat.v1.GetGuildRolesRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protocol.chat.v1.GetGuildRolesRequest;
  return proto.protocol.chat.v1.GetGuildRolesRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protocol.chat.v1.GetGuildRolesRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protocol.chat.v1.GetGuildRolesRequest}
 */
proto.protocol.chat.v1.GetGuildRolesRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readUint64String());
      msg.setGuildId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protocol.chat.v1.GetGuildRolesRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protocol.chat.v1.GetGuildRolesRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protocol.chat.v1.GetGuildRolesRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protocol.chat.v1.GetGuildRolesRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGuildId();
  if (parseInt(f, 10) !== 0) {
    writer.writeUint64String(
      1,
      f
    );
  }
};


/**
 * optional uint64 guild_id = 1;
 * @return {string}
 */
proto.protocol.chat.v1.GetGuildRolesRequest.prototype.getGuildId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, "0"));
};


/**
 * @param {string} value
 * @return {!proto.protocol.chat.v1.GetGuildRolesRequest} returns this
 */
proto.protocol.chat.v1.GetGuildRolesRequest.prototype.setGuildId = function(value) {
  return jspb.Message.setProto3StringIntField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.protocol.chat.v1.GetGuildRolesResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protocol.chat.v1.GetGuildRolesResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.protocol.chat.v1.GetGuildRolesResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protocol.chat.v1.GetGuildRolesResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protocol.chat.v1.GetGuildRolesResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    rolesList: jspb.Message.toObjectList(msg.getRolesList(),
    proto.protocol.chat.v1.Role.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protocol.chat.v1.GetGuildRolesResponse}
 */
proto.protocol.chat.v1.GetGuildRolesResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protocol.chat.v1.GetGuildRolesResponse;
  return proto.protocol.chat.v1.GetGuildRolesResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protocol.chat.v1.GetGuildRolesResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protocol.chat.v1.GetGuildRolesResponse}
 */
proto.protocol.chat.v1.GetGuildRolesResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.protocol.chat.v1.Role;
      reader.readMessage(value,proto.protocol.chat.v1.Role.deserializeBinaryFromReader);
      msg.addRoles(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protocol.chat.v1.GetGuildRolesResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protocol.chat.v1.GetGuildRolesResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protocol.chat.v1.GetGuildRolesResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protocol.chat.v1.GetGuildRolesResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRolesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.protocol.chat.v1.Role.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Role roles = 1;
 * @return {!Array<!proto.protocol.chat.v1.Role>}
 */
proto.protocol.chat.v1.GetGuildRolesResponse.prototype.getRolesList = function() {
  return /** @type{!Array<!proto.protocol.chat.v1.Role>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.protocol.chat.v1.Role, 1));
};


/**
 * @param {!Array<!proto.protocol.chat.v1.Role>} value
 * @return {!proto.protocol.chat.v1.GetGuildRolesResponse} returns this
*/
proto.protocol.chat.v1.GetGuildRolesResponse.prototype.setRolesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.protocol.chat.v1.Role=} opt_value
 * @param {number=} opt_index
 * @return {!proto.protocol.chat.v1.Role}
 */
proto.protocol.chat.v1.GetGuildRolesResponse.prototype.addRoles = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.protocol.chat.v1.Role, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.protocol.chat.v1.GetGuildRolesResponse} returns this
 */
proto.protocol.chat.v1.GetGuildRolesResponse.prototype.clearRolesList = function() {
  return this.setRolesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protocol.chat.v1.AddGuildRoleRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.protocol.chat.v1.AddGuildRoleRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protocol.chat.v1.AddGuildRoleRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protocol.chat.v1.AddGuildRoleRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    guildId: jspb.Message.getFieldWithDefault(msg, 1, "0"),
    role: (f = msg.getRole()) && proto.protocol.chat.v1.Role.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protocol.chat.v1.AddGuildRoleRequest}
 */
proto.protocol.chat.v1.AddGuildRoleRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protocol.chat.v1.AddGuildRoleRequest;
  return proto.protocol.chat.v1.AddGuildRoleRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protocol.chat.v1.AddGuildRoleRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protocol.chat.v1.AddGuildRoleRequest}
 */
proto.protocol.chat.v1.AddGuildRoleRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readUint64String());
      msg.setGuildId(value);
      break;
    case 2:
      var value = new proto.protocol.chat.v1.Role;
      reader.readMessage(value,proto.protocol.chat.v1.Role.deserializeBinaryFromReader);
      msg.setRole(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protocol.chat.v1.AddGuildRoleRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protocol.chat.v1.AddGuildRoleRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protocol.chat.v1.AddGuildRoleRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protocol.chat.v1.AddGuildRoleRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGuildId();
  if (parseInt(f, 10) !== 0) {
    writer.writeUint64String(
      1,
      f
    );
  }
  f = message.getRole();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.protocol.chat.v1.Role.serializeBinaryToWriter
    );
  }
};


/**
 * optional uint64 guild_id = 1;
 * @return {string}
 */
proto.protocol.chat.v1.AddGuildRoleRequest.prototype.getGuildId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, "0"));
};


/**
 * @param {string} value
 * @return {!proto.protocol.chat.v1.AddGuildRoleRequest} returns this
 */
proto.protocol.chat.v1.AddGuildRoleRequest.prototype.setGuildId = function(value) {
  return jspb.Message.setProto3StringIntField(this, 1, value);
};


/**
 * optional Role role = 2;
 * @return {?proto.protocol.chat.v1.Role}
 */
proto.protocol.chat.v1.AddGuildRoleRequest.prototype.getRole = function() {
  return /** @type{?proto.protocol.chat.v1.Role} */ (
    jspb.Message.getWrapperField(this, proto.protocol.chat.v1.Role, 2));
};


/**
 * @param {?proto.protocol.chat.v1.Role|undefined} value
 * @return {!proto.protocol.chat.v1.AddGuildRoleRequest} returns this
*/
proto.protocol.chat.v1.AddGuildRoleRequest.prototype.setRole = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protocol.chat.v1.AddGuildRoleRequest} returns this
 */
proto.protocol.chat.v1.AddGuildRoleRequest.prototype.clearRole = function() {
  return this.setRole(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protocol.chat.v1.AddGuildRoleRequest.prototype.hasRole = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protocol.chat.v1.AddGuildRoleResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.protocol.chat.v1.AddGuildRoleResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protocol.chat.v1.AddGuildRoleResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protocol.chat.v1.AddGuildRoleResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    roleId: jspb.Message.getFieldWithDefault(msg, 1, "0")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protocol.chat.v1.AddGuildRoleResponse}
 */
proto.protocol.chat.v1.AddGuildRoleResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protocol.chat.v1.AddGuildRoleResponse;
  return proto.protocol.chat.v1.AddGuildRoleResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protocol.chat.v1.AddGuildRoleResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protocol.chat.v1.AddGuildRoleResponse}
 */
proto.protocol.chat.v1.AddGuildRoleResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readUint64String());
      msg.setRoleId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protocol.chat.v1.AddGuildRoleResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protocol.chat.v1.AddGuildRoleResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protocol.chat.v1.AddGuildRoleResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protocol.chat.v1.AddGuildRoleResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRoleId();
  if (parseInt(f, 10) !== 0) {
    writer.writeUint64String(
      1,
      f
    );
  }
};


/**
 * optional uint64 role_id = 1;
 * @return {string}
 */
proto.protocol.chat.v1.AddGuildRoleResponse.prototype.getRoleId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, "0"));
};


/**
 * @param {string} value
 * @return {!proto.protocol.chat.v1.AddGuildRoleResponse} returns this
 */
proto.protocol.chat.v1.AddGuildRoleResponse.prototype.setRoleId = function(value) {
  return jspb.Message.setProto3StringIntField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protocol.chat.v1.DeleteGuildRoleRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.protocol.chat.v1.DeleteGuildRoleRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protocol.chat.v1.DeleteGuildRoleRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protocol.chat.v1.DeleteGuildRoleRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    guildId: jspb.Message.getFieldWithDefault(msg, 1, "0"),
    roleId: jspb.Message.getFieldWithDefault(msg, 2, "0")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protocol.chat.v1.DeleteGuildRoleRequest}
 */
proto.protocol.chat.v1.DeleteGuildRoleRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protocol.chat.v1.DeleteGuildRoleRequest;
  return proto.protocol.chat.v1.DeleteGuildRoleRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protocol.chat.v1.DeleteGuildRoleRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protocol.chat.v1.DeleteGuildRoleRequest}
 */
proto.protocol.chat.v1.DeleteGuildRoleRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readUint64String());
      msg.setGuildId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readUint64String());
      msg.setRoleId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protocol.chat.v1.DeleteGuildRoleRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protocol.chat.v1.DeleteGuildRoleRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protocol.chat.v1.DeleteGuildRoleRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protocol.chat.v1.DeleteGuildRoleRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGuildId();
  if (parseInt(f, 10) !== 0) {
    writer.writeUint64String(
      1,
      f
    );
  }
  f = message.getRoleId();
  if (parseInt(f, 10) !== 0) {
    writer.writeUint64String(
      2,
      f
    );
  }
};


/**
 * optional uint64 guild_id = 1;
 * @return {string}
 */
proto.protocol.chat.v1.DeleteGuildRoleRequest.prototype.getGuildId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, "0"));
};


/**
 * @param {string} value
 * @return {!proto.protocol.chat.v1.DeleteGuildRoleRequest} returns this
 */
proto.protocol.chat.v1.DeleteGuildRoleRequest.prototype.setGuildId = function(value) {
  return jspb.Message.setProto3StringIntField(this, 1, value);
};


/**
 * optional uint64 role_id = 2;
 * @return {string}
 */
proto.protocol.chat.v1.DeleteGuildRoleRequest.prototype.getRoleId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, "0"));
};


/**
 * @param {string} value
 * @return {!proto.protocol.chat.v1.DeleteGuildRoleRequest} returns this
 */
proto.protocol.chat.v1.DeleteGuildRoleRequest.prototype.setRoleId = function(value) {
  return jspb.Message.setProto3StringIntField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protocol.chat.v1.ModifyGuildRoleRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.protocol.chat.v1.ModifyGuildRoleRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protocol.chat.v1.ModifyGuildRoleRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protocol.chat.v1.ModifyGuildRoleRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    guildId: jspb.Message.getFieldWithDefault(msg, 1, "0"),
    role: (f = msg.getRole()) && proto.protocol.chat.v1.Role.toObject(includeInstance, f),
    modifyName: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),
    modifyColor: jspb.Message.getBooleanFieldWithDefault(msg, 4, false),
    modifyHoist: jspb.Message.getBooleanFieldWithDefault(msg, 5, false),
    modifyPingable: jspb.Message.getBooleanFieldWithDefault(msg, 6, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protocol.chat.v1.ModifyGuildRoleRequest}
 */
proto.protocol.chat.v1.ModifyGuildRoleRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protocol.chat.v1.ModifyGuildRoleRequest;
  return proto.protocol.chat.v1.ModifyGuildRoleRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protocol.chat.v1.ModifyGuildRoleRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protocol.chat.v1.ModifyGuildRoleRequest}
 */
proto.protocol.chat.v1.ModifyGuildRoleRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readUint64String());
      msg.setGuildId(value);
      break;
    case 2:
      var value = new proto.protocol.chat.v1.Role;
      reader.readMessage(value,proto.protocol.chat.v1.Role.deserializeBinaryFromReader);
      msg.setRole(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setModifyName(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setModifyColor(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setModifyHoist(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setModifyPingable(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protocol.chat.v1.ModifyGuildRoleRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protocol.chat.v1.ModifyGuildRoleRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protocol.chat.v1.ModifyGuildRoleRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protocol.chat.v1.ModifyGuildRoleRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGuildId();
  if (parseInt(f, 10) !== 0) {
    writer.writeUint64String(
      1,
      f
    );
  }
  f = message.getRole();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.protocol.chat.v1.Role.serializeBinaryToWriter
    );
  }
  f = message.getModifyName();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
  f = message.getModifyColor();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
  f = message.getModifyHoist();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
  f = message.getModifyPingable();
  if (f) {
    writer.writeBool(
      6,
      f
    );
  }
};


/**
 * optional uint64 guild_id = 1;
 * @return {string}
 */
proto.protocol.chat.v1.ModifyGuildRoleRequest.prototype.getGuildId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, "0"));
};


/**
 * @param {string} value
 * @return {!proto.protocol.chat.v1.ModifyGuildRoleRequest} returns this
 */
proto.protocol.chat.v1.ModifyGuildRoleRequest.prototype.setGuildId = function(value) {
  return jspb.Message.setProto3StringIntField(this, 1, value);
};


/**
 * optional Role role = 2;
 * @return {?proto.protocol.chat.v1.Role}
 */
proto.protocol.chat.v1.ModifyGuildRoleRequest.prototype.getRole = function() {
  return /** @type{?proto.protocol.chat.v1.Role} */ (
    jspb.Message.getWrapperField(this, proto.protocol.chat.v1.Role, 2));
};


/**
 * @param {?proto.protocol.chat.v1.Role|undefined} value
 * @return {!proto.protocol.chat.v1.ModifyGuildRoleRequest} returns this
*/
proto.protocol.chat.v1.ModifyGuildRoleRequest.prototype.setRole = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protocol.chat.v1.ModifyGuildRoleRequest} returns this
 */
proto.protocol.chat.v1.ModifyGuildRoleRequest.prototype.clearRole = function() {
  return this.setRole(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protocol.chat.v1.ModifyGuildRoleRequest.prototype.hasRole = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional bool modify_name = 3;
 * @return {boolean}
 */
proto.protocol.chat.v1.ModifyGuildRoleRequest.prototype.getModifyName = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.protocol.chat.v1.ModifyGuildRoleRequest} returns this
 */
proto.protocol.chat.v1.ModifyGuildRoleRequest.prototype.setModifyName = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};


/**
 * optional bool modify_color = 4;
 * @return {boolean}
 */
proto.protocol.chat.v1.ModifyGuildRoleRequest.prototype.getModifyColor = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.protocol.chat.v1.ModifyGuildRoleRequest} returns this
 */
proto.protocol.chat.v1.ModifyGuildRoleRequest.prototype.setModifyColor = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};


/**
 * optional bool modify_hoist = 5;
 * @return {boolean}
 */
proto.protocol.chat.v1.ModifyGuildRoleRequest.prototype.getModifyHoist = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.protocol.chat.v1.ModifyGuildRoleRequest} returns this
 */
proto.protocol.chat.v1.ModifyGuildRoleRequest.prototype.setModifyHoist = function(value) {
  return jspb.Message.setProto3BooleanField(this, 5, value);
};


/**
 * optional bool modify_pingable = 6;
 * @return {boolean}
 */
proto.protocol.chat.v1.ModifyGuildRoleRequest.prototype.getModifyPingable = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};


/**
 * @param {boolean} value
 * @return {!proto.protocol.chat.v1.ModifyGuildRoleRequest} returns this
 */
proto.protocol.chat.v1.ModifyGuildRoleRequest.prototype.setModifyPingable = function(value) {
  return jspb.Message.setProto3BooleanField(this, 6, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.protocol.chat.v1.ManageUserRolesRequest.repeatedFields_ = [3,4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protocol.chat.v1.ManageUserRolesRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.protocol.chat.v1.ManageUserRolesRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protocol.chat.v1.ManageUserRolesRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protocol.chat.v1.ManageUserRolesRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    guildId: jspb.Message.getFieldWithDefault(msg, 1, "0"),
    userId: jspb.Message.getFieldWithDefault(msg, 2, "0"),
    giveRoleIdsList: (f = jspb.Message.getRepeatedField(msg, 3)) == null ? undefined : f,
    takeRoleIdsList: (f = jspb.Message.getRepeatedField(msg, 4)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protocol.chat.v1.ManageUserRolesRequest}
 */
proto.protocol.chat.v1.ManageUserRolesRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protocol.chat.v1.ManageUserRolesRequest;
  return proto.protocol.chat.v1.ManageUserRolesRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protocol.chat.v1.ManageUserRolesRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protocol.chat.v1.ManageUserRolesRequest}
 */
proto.protocol.chat.v1.ManageUserRolesRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readUint64String());
      msg.setGuildId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readUint64String());
      msg.setUserId(value);
      break;
    case 3:
      var value = /** @type {!Array<string>} */ (reader.readPackedUint64String());
      msg.setGiveRoleIdsList(value);
      break;
    case 4:
      var value = /** @type {!Array<string>} */ (reader.readPackedUint64String());
      msg.setTakeRoleIdsList(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protocol.chat.v1.ManageUserRolesRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protocol.chat.v1.ManageUserRolesRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protocol.chat.v1.ManageUserRolesRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protocol.chat.v1.ManageUserRolesRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGuildId();
  if (parseInt(f, 10) !== 0) {
    writer.writeUint64String(
      1,
      f
    );
  }
  f = message.getUserId();
  if (parseInt(f, 10) !== 0) {
    writer.writeUint64String(
      2,
      f
    );
  }
  f = message.getGiveRoleIdsList();
  if (f.length > 0) {
    writer.writePackedUint64String(
      3,
      f
    );
  }
  f = message.getTakeRoleIdsList();
  if (f.length > 0) {
    writer.writePackedUint64String(
      4,
      f
    );
  }
};


/**
 * optional uint64 guild_id = 1;
 * @return {string}
 */
proto.protocol.chat.v1.ManageUserRolesRequest.prototype.getGuildId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, "0"));
};


/**
 * @param {string} value
 * @return {!proto.protocol.chat.v1.ManageUserRolesRequest} returns this
 */
proto.protocol.chat.v1.ManageUserRolesRequest.prototype.setGuildId = function(value) {
  return jspb.Message.setProto3StringIntField(this, 1, value);
};


/**
 * optional uint64 user_id = 2;
 * @return {string}
 */
proto.protocol.chat.v1.ManageUserRolesRequest.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, "0"));
};


/**
 * @param {string} value
 * @return {!proto.protocol.chat.v1.ManageUserRolesRequest} returns this
 */
proto.protocol.chat.v1.ManageUserRolesRequest.prototype.setUserId = function(value) {
  return jspb.Message.setProto3StringIntField(this, 2, value);
};


/**
 * repeated uint64 give_role_ids = 3;
 * @return {!Array<string>}
 */
proto.protocol.chat.v1.ManageUserRolesRequest.prototype.getGiveRoleIdsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 3));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.protocol.chat.v1.ManageUserRolesRequest} returns this
 */
proto.protocol.chat.v1.ManageUserRolesRequest.prototype.setGiveRoleIdsList = function(value) {
  return jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.protocol.chat.v1.ManageUserRolesRequest} returns this
 */
proto.protocol.chat.v1.ManageUserRolesRequest.prototype.addGiveRoleIds = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.protocol.chat.v1.ManageUserRolesRequest} returns this
 */
proto.protocol.chat.v1.ManageUserRolesRequest.prototype.clearGiveRoleIdsList = function() {
  return this.setGiveRoleIdsList([]);
};


/**
 * repeated uint64 take_role_ids = 4;
 * @return {!Array<string>}
 */
proto.protocol.chat.v1.ManageUserRolesRequest.prototype.getTakeRoleIdsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 4));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.protocol.chat.v1.ManageUserRolesRequest} returns this
 */
proto.protocol.chat.v1.ManageUserRolesRequest.prototype.setTakeRoleIdsList = function(value) {
  return jspb.Message.setField(this, 4, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.protocol.chat.v1.ManageUserRolesRequest} returns this
 */
proto.protocol.chat.v1.ManageUserRolesRequest.prototype.addTakeRoleIds = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 4, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.protocol.chat.v1.ManageUserRolesRequest} returns this
 */
proto.protocol.chat.v1.ManageUserRolesRequest.prototype.clearTakeRoleIdsList = function() {
  return this.setTakeRoleIdsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protocol.chat.v1.GetUserRolesRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.protocol.chat.v1.GetUserRolesRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protocol.chat.v1.GetUserRolesRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protocol.chat.v1.GetUserRolesRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    guildId: jspb.Message.getFieldWithDefault(msg, 1, "0"),
    userId: jspb.Message.getFieldWithDefault(msg, 2, "0")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protocol.chat.v1.GetUserRolesRequest}
 */
proto.protocol.chat.v1.GetUserRolesRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protocol.chat.v1.GetUserRolesRequest;
  return proto.protocol.chat.v1.GetUserRolesRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protocol.chat.v1.GetUserRolesRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protocol.chat.v1.GetUserRolesRequest}
 */
proto.protocol.chat.v1.GetUserRolesRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readUint64String());
      msg.setGuildId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readUint64String());
      msg.setUserId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protocol.chat.v1.GetUserRolesRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protocol.chat.v1.GetUserRolesRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protocol.chat.v1.GetUserRolesRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protocol.chat.v1.GetUserRolesRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGuildId();
  if (parseInt(f, 10) !== 0) {
    writer.writeUint64String(
      1,
      f
    );
  }
  f = message.getUserId();
  if (parseInt(f, 10) !== 0) {
    writer.writeUint64String(
      2,
      f
    );
  }
};


/**
 * optional uint64 guild_id = 1;
 * @return {string}
 */
proto.protocol.chat.v1.GetUserRolesRequest.prototype.getGuildId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, "0"));
};


/**
 * @param {string} value
 * @return {!proto.protocol.chat.v1.GetUserRolesRequest} returns this
 */
proto.protocol.chat.v1.GetUserRolesRequest.prototype.setGuildId = function(value) {
  return jspb.Message.setProto3StringIntField(this, 1, value);
};


/**
 * optional uint64 user_id = 2;
 * @return {string}
 */
proto.protocol.chat.v1.GetUserRolesRequest.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, "0"));
};


/**
 * @param {string} value
 * @return {!proto.protocol.chat.v1.GetUserRolesRequest} returns this
 */
proto.protocol.chat.v1.GetUserRolesRequest.prototype.setUserId = function(value) {
  return jspb.Message.setProto3StringIntField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.protocol.chat.v1.GetUserRolesResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protocol.chat.v1.GetUserRolesResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.protocol.chat.v1.GetUserRolesResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protocol.chat.v1.GetUserRolesResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protocol.chat.v1.GetUserRolesResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    rolesList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protocol.chat.v1.GetUserRolesResponse}
 */
proto.protocol.chat.v1.GetUserRolesResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protocol.chat.v1.GetUserRolesResponse;
  return proto.protocol.chat.v1.GetUserRolesResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protocol.chat.v1.GetUserRolesResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protocol.chat.v1.GetUserRolesResponse}
 */
proto.protocol.chat.v1.GetUserRolesResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Array<string>} */ (reader.readPackedUint64String());
      msg.setRolesList(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protocol.chat.v1.GetUserRolesResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protocol.chat.v1.GetUserRolesResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protocol.chat.v1.GetUserRolesResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protocol.chat.v1.GetUserRolesResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRolesList();
  if (f.length > 0) {
    writer.writePackedUint64String(
      1,
      f
    );
  }
};


/**
 * repeated uint64 roles = 1;
 * @return {!Array<string>}
 */
proto.protocol.chat.v1.GetUserRolesResponse.prototype.getRolesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.protocol.chat.v1.GetUserRolesResponse} returns this
 */
proto.protocol.chat.v1.GetUserRolesResponse.prototype.setRolesList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.protocol.chat.v1.GetUserRolesResponse} returns this
 */
proto.protocol.chat.v1.GetUserRolesResponse.prototype.addRoles = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.protocol.chat.v1.GetUserRolesResponse} returns this
 */
proto.protocol.chat.v1.GetUserRolesResponse.prototype.clearRolesList = function() {
  return this.setRolesList([]);
};


goog.object.extend(exports, proto.protocol.chat.v1);
