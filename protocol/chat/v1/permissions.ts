// @generated by protobuf-ts 1.0.13 with parameters long_type_string,optimize_code_size,generate_dependencies
// @generated from protobuf file "chat/v1/permissions.proto" (package "protocol.chat.v1", syntax proto3)
// tslint:disable
import { MessageType } from "@protobuf-ts/runtime";
/**
 * @generated from protobuf message protocol.chat.v1.QueryPermissionsRequest
 */
export interface QueryPermissionsRequest {
  /**
   * @generated from protobuf field: uint64 guild_id = 1 [jstype = JS_STRING];
   */
  guildId: string;
  /**
   * @generated from protobuf field: uint64 channel_id = 2 [jstype = JS_STRING];
   */
  channelId: string;
  /**
   * @generated from protobuf field: string check_for = 3;
   */
  checkFor: string;
  /**
   * @generated from protobuf field: uint64 as = 4;
   */
  as: string;
}
/**
 * @generated from protobuf message protocol.chat.v1.QueryPermissionsResponse
 */
export interface QueryPermissionsResponse {
  /**
   * @generated from protobuf field: bool ok = 1;
   */
  ok: boolean;
}
/**
 * @generated from protobuf message protocol.chat.v1.Permission
 */
export interface Permission {
  /**
   * @generated from protobuf field: string matches = 1;
   */
  matches: string;
  /**
   * @generated from protobuf field: protocol.chat.v1.Permission.Mode mode = 2;
   */
  mode: Permission_Mode;
}
/**
 * @generated from protobuf enum protocol.chat.v1.Permission.Mode
 */
export enum Permission_Mode {
  /**
   * @generated from protobuf enum value: Allow = 0;
   */
  Allow = 0,
  /**
   * @generated from protobuf enum value: Deny = 1;
   */
  Deny = 1,
}
/**
 * @generated from protobuf message protocol.chat.v1.PermissionList
 */
export interface PermissionList {
  /**
   * @generated from protobuf field: repeated protocol.chat.v1.Permission permissions = 1;
   */
  permissions: Permission[];
}
/**
 * @generated from protobuf message protocol.chat.v1.SetPermissionsRequest
 */
export interface SetPermissionsRequest {
  /**
   * @generated from protobuf field: uint64 guild_id = 1 [jstype = JS_STRING];
   */
  guildId: string;
  /**
   * @generated from protobuf field: uint64 channel_id = 2 [jstype = JS_STRING];
   */
  channelId: string;
  /**
   * @generated from protobuf field: uint64 role_id = 3 [jstype = JS_STRING];
   */
  roleId: string;
  /**
   * @generated from protobuf field: protocol.chat.v1.PermissionList perms = 4;
   */
  perms?: PermissionList;
}
/**
 * @generated from protobuf message protocol.chat.v1.GetPermissionsRequest
 */
export interface GetPermissionsRequest {
  /**
   * @generated from protobuf field: uint64 guild_id = 1 [jstype = JS_STRING];
   */
  guildId: string;
  /**
   * @generated from protobuf field: uint64 channel_id = 2 [jstype = JS_STRING];
   */
  channelId: string;
  /**
   * @generated from protobuf field: uint64 role_id = 3 [jstype = JS_STRING];
   */
  roleId: string;
}
/**
 * @generated from protobuf message protocol.chat.v1.GetPermissionsResponse
 */
export interface GetPermissionsResponse {
  /**
   * @generated from protobuf field: protocol.chat.v1.PermissionList perms = 1;
   */
  perms?: PermissionList;
}
/**
 * @generated from protobuf message protocol.chat.v1.Role
 */
export interface Role {
  /**
   * @generated from protobuf field: uint64 role_id = 1 [jstype = JS_STRING];
   */
  roleId: string;
  /**
   * @generated from protobuf field: string name = 2;
   */
  name: string;
  /**
   * @generated from protobuf field: int32 color = 3;
   */
  color: number;
  /**
   * @generated from protobuf field: bool hoist = 4;
   */
  hoist: boolean;
  /**
   * @generated from protobuf field: bool pingable = 5;
   */
  pingable: boolean;
}
/**
 * @generated from protobuf message protocol.chat.v1.MoveRoleRequest
 */
export interface MoveRoleRequest {
  /**
   * @generated from protobuf field: uint64 guild_id = 1 [jstype = JS_STRING];
   */
  guildId: string;
  /**
   * @generated from protobuf field: uint64 role_id = 2 [jstype = JS_STRING];
   */
  roleId: string;
  /**
   * @generated from protobuf field: uint64 before_id = 3 [jstype = JS_STRING];
   */
  beforeId: string;
  /**
   * @generated from protobuf field: uint64 after_id = 4 [jstype = JS_STRING];
   */
  afterId: string;
}
/**
 * @generated from protobuf message protocol.chat.v1.MoveRoleResponse
 */
export interface MoveRoleResponse {}
/**
 * @generated from protobuf message protocol.chat.v1.GetGuildRolesRequest
 */
export interface GetGuildRolesRequest {
  /**
   * @generated from protobuf field: uint64 guild_id = 1 [jstype = JS_STRING];
   */
  guildId: string;
}
/**
 * @generated from protobuf message protocol.chat.v1.GetGuildRolesResponse
 */
export interface GetGuildRolesResponse {
  /**
   * @generated from protobuf field: repeated protocol.chat.v1.Role roles = 1;
   */
  roles: Role[];
}
/**
 * @generated from protobuf message protocol.chat.v1.AddGuildRoleRequest
 */
export interface AddGuildRoleRequest {
  /**
   * @generated from protobuf field: uint64 guild_id = 1 [jstype = JS_STRING];
   */
  guildId: string;
  /**
   * @generated from protobuf field: protocol.chat.v1.Role role = 2;
   */
  role?: Role;
}
/**
 * @generated from protobuf message protocol.chat.v1.AddGuildRoleResponse
 */
export interface AddGuildRoleResponse {
  /**
   * @generated from protobuf field: uint64 role_id = 1 [jstype = JS_STRING];
   */
  roleId: string;
}
/**
 * @generated from protobuf message protocol.chat.v1.DeleteGuildRoleRequest
 */
export interface DeleteGuildRoleRequest {
  /**
   * @generated from protobuf field: uint64 guild_id = 1 [jstype = JS_STRING];
   */
  guildId: string;
  /**
   * @generated from protobuf field: uint64 role_id = 2 [jstype = JS_STRING];
   */
  roleId: string;
}
/**
 * @generated from protobuf message protocol.chat.v1.ModifyGuildRoleRequest
 */
export interface ModifyGuildRoleRequest {
  /**
   * @generated from protobuf field: uint64 guild_id = 1 [jstype = JS_STRING];
   */
  guildId: string;
  /**
   * @generated from protobuf field: protocol.chat.v1.Role role = 2;
   */
  role?: Role;
  /**
   * @generated from protobuf field: bool modify_name = 3;
   */
  modifyName: boolean;
  /**
   * @generated from protobuf field: bool modify_color = 4;
   */
  modifyColor: boolean;
  /**
   * @generated from protobuf field: bool modify_hoist = 5;
   */
  modifyHoist: boolean;
  /**
   * @generated from protobuf field: bool modify_pingable = 6;
   */
  modifyPingable: boolean;
}
/**
 * @generated from protobuf message protocol.chat.v1.ManageUserRolesRequest
 */
export interface ManageUserRolesRequest {
  /**
   * @generated from protobuf field: uint64 guild_id = 1 [jstype = JS_STRING];
   */
  guildId: string;
  /**
   * @generated from protobuf field: uint64 user_id = 2 [jstype = JS_STRING];
   */
  userId: string;
  /**
   * @generated from protobuf field: repeated uint64 give_role_ids = 3 [jstype = JS_STRING];
   */
  giveRoleIds: string[];
  /**
   * @generated from protobuf field: repeated uint64 take_role_ids = 4 [jstype = JS_STRING];
   */
  takeRoleIds: string[];
}
/**
 * @generated from protobuf message protocol.chat.v1.GetUserRolesRequest
 */
export interface GetUserRolesRequest {
  /**
   * @generated from protobuf field: uint64 guild_id = 1 [jstype = JS_STRING];
   */
  guildId: string;
  /**
   * @generated from protobuf field: uint64 user_id = 2 [jstype = JS_STRING];
   */
  userId: string;
}
/**
 * @generated from protobuf message protocol.chat.v1.GetUserRolesResponse
 */
export interface GetUserRolesResponse {
  /**
   * @generated from protobuf field: repeated uint64 roles = 1 [jstype = JS_STRING];
   */
  roles: string[];
}
/**
 * Type for protobuf message protocol.chat.v1.QueryPermissionsRequest
 */
class QueryPermissionsRequest$Type extends MessageType<QueryPermissionsRequest> {
  constructor() {
    super("protocol.chat.v1.QueryPermissionsRequest", [
      { no: 1, name: "guild_id", kind: "scalar", T: 4 /*ScalarType.UINT64*/ },
      { no: 2, name: "channel_id", kind: "scalar", T: 4 /*ScalarType.UINT64*/ },
      { no: 3, name: "check_for", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
      { no: 4, name: "as", kind: "scalar", T: 4 /*ScalarType.UINT64*/ },
    ]);
  }
}
export const QueryPermissionsRequest = new QueryPermissionsRequest$Type();
/**
 * Type for protobuf message protocol.chat.v1.QueryPermissionsResponse
 */
class QueryPermissionsResponse$Type extends MessageType<QueryPermissionsResponse> {
  constructor() {
    super("protocol.chat.v1.QueryPermissionsResponse", [
      { no: 1, name: "ok", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
    ]);
  }
}
export const QueryPermissionsResponse = new QueryPermissionsResponse$Type();
/**
 * Type for protobuf message protocol.chat.v1.Permission
 */
class Permission$Type extends MessageType<Permission> {
  constructor() {
    super("protocol.chat.v1.Permission", [
      { no: 1, name: "matches", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
      {
        no: 2,
        name: "mode",
        kind: "enum",
        T: () => ["protocol.chat.v1.Permission.Mode", Permission_Mode],
      },
    ]);
  }
}
export const Permission = new Permission$Type();
/**
 * Type for protobuf message protocol.chat.v1.PermissionList
 */
class PermissionList$Type extends MessageType<PermissionList> {
  constructor() {
    super("protocol.chat.v1.PermissionList", [
      {
        no: 1,
        name: "permissions",
        kind: "message",
        repeat: 1 /*RepeatType.PACKED*/,
        T: () => Permission,
      },
    ]);
  }
}
export const PermissionList = new PermissionList$Type();
/**
 * Type for protobuf message protocol.chat.v1.SetPermissionsRequest
 */
class SetPermissionsRequest$Type extends MessageType<SetPermissionsRequest> {
  constructor() {
    super("protocol.chat.v1.SetPermissionsRequest", [
      { no: 1, name: "guild_id", kind: "scalar", T: 4 /*ScalarType.UINT64*/ },
      { no: 2, name: "channel_id", kind: "scalar", T: 4 /*ScalarType.UINT64*/ },
      { no: 3, name: "role_id", kind: "scalar", T: 4 /*ScalarType.UINT64*/ },
      { no: 4, name: "perms", kind: "message", T: () => PermissionList },
    ]);
  }
}
export const SetPermissionsRequest = new SetPermissionsRequest$Type();
/**
 * Type for protobuf message protocol.chat.v1.GetPermissionsRequest
 */
class GetPermissionsRequest$Type extends MessageType<GetPermissionsRequest> {
  constructor() {
    super("protocol.chat.v1.GetPermissionsRequest", [
      { no: 1, name: "guild_id", kind: "scalar", T: 4 /*ScalarType.UINT64*/ },
      { no: 2, name: "channel_id", kind: "scalar", T: 4 /*ScalarType.UINT64*/ },
      { no: 3, name: "role_id", kind: "scalar", T: 4 /*ScalarType.UINT64*/ },
    ]);
  }
}
export const GetPermissionsRequest = new GetPermissionsRequest$Type();
/**
 * Type for protobuf message protocol.chat.v1.GetPermissionsResponse
 */
class GetPermissionsResponse$Type extends MessageType<GetPermissionsResponse> {
  constructor() {
    super("protocol.chat.v1.GetPermissionsResponse", [
      { no: 1, name: "perms", kind: "message", T: () => PermissionList },
    ]);
  }
}
export const GetPermissionsResponse = new GetPermissionsResponse$Type();
/**
 * Type for protobuf message protocol.chat.v1.Role
 */
class Role$Type extends MessageType<Role> {
  constructor() {
    super("protocol.chat.v1.Role", [
      { no: 1, name: "role_id", kind: "scalar", T: 4 /*ScalarType.UINT64*/ },
      { no: 2, name: "name", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
      { no: 3, name: "color", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
      { no: 4, name: "hoist", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
      { no: 5, name: "pingable", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
    ]);
  }
}
export const Role = new Role$Type();
/**
 * Type for protobuf message protocol.chat.v1.MoveRoleRequest
 */
class MoveRoleRequest$Type extends MessageType<MoveRoleRequest> {
  constructor() {
    super("protocol.chat.v1.MoveRoleRequest", [
      { no: 1, name: "guild_id", kind: "scalar", T: 4 /*ScalarType.UINT64*/ },
      { no: 2, name: "role_id", kind: "scalar", T: 4 /*ScalarType.UINT64*/ },
      { no: 3, name: "before_id", kind: "scalar", T: 4 /*ScalarType.UINT64*/ },
      { no: 4, name: "after_id", kind: "scalar", T: 4 /*ScalarType.UINT64*/ },
    ]);
  }
}
export const MoveRoleRequest = new MoveRoleRequest$Type();
/**
 * Type for protobuf message protocol.chat.v1.MoveRoleResponse
 */
class MoveRoleResponse$Type extends MessageType<MoveRoleResponse> {
  constructor() {
    super("protocol.chat.v1.MoveRoleResponse", []);
  }
}
export const MoveRoleResponse = new MoveRoleResponse$Type();
/**
 * Type for protobuf message protocol.chat.v1.GetGuildRolesRequest
 */
class GetGuildRolesRequest$Type extends MessageType<GetGuildRolesRequest> {
  constructor() {
    super("protocol.chat.v1.GetGuildRolesRequest", [
      { no: 1, name: "guild_id", kind: "scalar", T: 4 /*ScalarType.UINT64*/ },
    ]);
  }
}
export const GetGuildRolesRequest = new GetGuildRolesRequest$Type();
/**
 * Type for protobuf message protocol.chat.v1.GetGuildRolesResponse
 */
class GetGuildRolesResponse$Type extends MessageType<GetGuildRolesResponse> {
  constructor() {
    super("protocol.chat.v1.GetGuildRolesResponse", [
      {
        no: 1,
        name: "roles",
        kind: "message",
        repeat: 1 /*RepeatType.PACKED*/,
        T: () => Role,
      },
    ]);
  }
}
export const GetGuildRolesResponse = new GetGuildRolesResponse$Type();
/**
 * Type for protobuf message protocol.chat.v1.AddGuildRoleRequest
 */
class AddGuildRoleRequest$Type extends MessageType<AddGuildRoleRequest> {
  constructor() {
    super("protocol.chat.v1.AddGuildRoleRequest", [
      { no: 1, name: "guild_id", kind: "scalar", T: 4 /*ScalarType.UINT64*/ },
      { no: 2, name: "role", kind: "message", T: () => Role },
    ]);
  }
}
export const AddGuildRoleRequest = new AddGuildRoleRequest$Type();
/**
 * Type for protobuf message protocol.chat.v1.AddGuildRoleResponse
 */
class AddGuildRoleResponse$Type extends MessageType<AddGuildRoleResponse> {
  constructor() {
    super("protocol.chat.v1.AddGuildRoleResponse", [
      { no: 1, name: "role_id", kind: "scalar", T: 4 /*ScalarType.UINT64*/ },
    ]);
  }
}
export const AddGuildRoleResponse = new AddGuildRoleResponse$Type();
/**
 * Type for protobuf message protocol.chat.v1.DeleteGuildRoleRequest
 */
class DeleteGuildRoleRequest$Type extends MessageType<DeleteGuildRoleRequest> {
  constructor() {
    super("protocol.chat.v1.DeleteGuildRoleRequest", [
      { no: 1, name: "guild_id", kind: "scalar", T: 4 /*ScalarType.UINT64*/ },
      { no: 2, name: "role_id", kind: "scalar", T: 4 /*ScalarType.UINT64*/ },
    ]);
  }
}
export const DeleteGuildRoleRequest = new DeleteGuildRoleRequest$Type();
/**
 * Type for protobuf message protocol.chat.v1.ModifyGuildRoleRequest
 */
class ModifyGuildRoleRequest$Type extends MessageType<ModifyGuildRoleRequest> {
  constructor() {
    super("protocol.chat.v1.ModifyGuildRoleRequest", [
      { no: 1, name: "guild_id", kind: "scalar", T: 4 /*ScalarType.UINT64*/ },
      { no: 2, name: "role", kind: "message", T: () => Role },
      { no: 3, name: "modify_name", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
      { no: 4, name: "modify_color", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
      { no: 5, name: "modify_hoist", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
      {
        no: 6,
        name: "modify_pingable",
        kind: "scalar",
        T: 8 /*ScalarType.BOOL*/,
      },
    ]);
  }
}
export const ModifyGuildRoleRequest = new ModifyGuildRoleRequest$Type();
/**
 * Type for protobuf message protocol.chat.v1.ManageUserRolesRequest
 */
class ManageUserRolesRequest$Type extends MessageType<ManageUserRolesRequest> {
  constructor() {
    super("protocol.chat.v1.ManageUserRolesRequest", [
      { no: 1, name: "guild_id", kind: "scalar", T: 4 /*ScalarType.UINT64*/ },
      { no: 2, name: "user_id", kind: "scalar", T: 4 /*ScalarType.UINT64*/ },
      {
        no: 3,
        name: "give_role_ids",
        kind: "scalar",
        repeat: 1 /*RepeatType.PACKED*/,
        T: 4 /*ScalarType.UINT64*/,
      },
      {
        no: 4,
        name: "take_role_ids",
        kind: "scalar",
        repeat: 1 /*RepeatType.PACKED*/,
        T: 4 /*ScalarType.UINT64*/,
      },
    ]);
  }
}
export const ManageUserRolesRequest = new ManageUserRolesRequest$Type();
/**
 * Type for protobuf message protocol.chat.v1.GetUserRolesRequest
 */
class GetUserRolesRequest$Type extends MessageType<GetUserRolesRequest> {
  constructor() {
    super("protocol.chat.v1.GetUserRolesRequest", [
      { no: 1, name: "guild_id", kind: "scalar", T: 4 /*ScalarType.UINT64*/ },
      { no: 2, name: "user_id", kind: "scalar", T: 4 /*ScalarType.UINT64*/ },
    ]);
  }
}
export const GetUserRolesRequest = new GetUserRolesRequest$Type();
/**
 * Type for protobuf message protocol.chat.v1.GetUserRolesResponse
 */
class GetUserRolesResponse$Type extends MessageType<GetUserRolesResponse> {
  constructor() {
    super("protocol.chat.v1.GetUserRolesResponse", [
      {
        no: 1,
        name: "roles",
        kind: "scalar",
        repeat: 1 /*RepeatType.PACKED*/,
        T: 4 /*ScalarType.UINT64*/,
      },
    ]);
  }
}
export const GetUserRolesResponse = new GetUserRolesResponse$Type();
